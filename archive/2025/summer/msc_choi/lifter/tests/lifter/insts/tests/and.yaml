tests:
- name: and_1
  bytes: [0x20, 0x04, 0x00, 0x12]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x1"
      nextln:   v1 = i32.trunc.i64 v0
      nextln:   v2 = i32.and v1, 0x3
      nextln:   v3 = i64.zext.i32 0x0
      nextln:   v4 = i64.lshl v3, 0x20
      nextln:   v5 = i64.zext.i32 v2
      nextln:   v6 = i64.or v4, v5
      nextln:   write_reg.i64 v6, "x0"
- name: and_2
  bytes: [0x41, 0x00, 0x40, 0x92]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x2"
      nextln:   v1 = i64.and v0, 0x1
      nextln:   write_reg.i64 v1, "x1"
- name: and_3
  bytes: [0x20, 0x10, 0x02, 0x8a]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x1"
      nextln:   v1 = i64.read_reg "x2"
      nextln:   v2 = i64.lshl v1, 0x4
      nextln:   v3 = int.sub 0x40, 0x4
      nextln:   v4 = i64.lshr v1, v3
      nextln:   v5 = i1.trunc.i64 v4
      nextln:   v6 = i64.and v0, v2
      nextln:   write_reg.i64 v6, "x0"
