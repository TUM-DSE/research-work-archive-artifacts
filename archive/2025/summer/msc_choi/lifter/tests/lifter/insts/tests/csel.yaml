tests:
- name: csel_1
  bytes: [0x20, 0x40, 0x82, 0x9a]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x1"
      nextln:   v1 = i64.read_reg "x2"
      nextln:   v2 = i1.read_reg "n"
      nextln:   v3 = bool.icmp.i1.eq v2, 0x1
      nextln:   jumpif v3, addr_0_block_0, addr_0_block_1
      check: addr_0_block_0: // preds: entry
      nextln:   jump addr_0_block_2(v0)
      check: addr_0_block_1: // preds: entry
      nextln:   jump addr_0_block_2(v1)
      check: addr_0_block_2(v4: i64): // preds: addr_0_block_0 addr_0_block_1
      nextln:   write_reg.i64 v4, "x0"
- name: csel_2
  bytes: [0x20, 0x20, 0x82, 0x9a]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x1"
      nextln:   v1 = i64.read_reg "x2"
      nextln:   v2 = i1.read_reg "c"
      nextln:   v3 = bool.icmp.i1.eq v2, 0x1
      nextln:   jumpif v3, addr_0_block_0, addr_0_block_1
      check: addr_0_block_0: // preds: entry
      nextln:   jump addr_0_block_2(v0)
      check: addr_0_block_1: // preds: entry
      nextln:   jump addr_0_block_2(v1)
      check: addr_0_block_2(v4: i64): // preds: addr_0_block_0 addr_0_block_1
      nextln:   write_reg.i64 v4, "x0"
- name: csel_3
  bytes: [0x20, 0x00, 0x82, 0x1a]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x1"
      nextln:   v1 = i32.trunc.i64 v0
      nextln:   v2 = i64.read_reg "x2"
      nextln:   v3 = i32.trunc.i64 v2
      nextln:   v4 = i1.read_reg "z"
      nextln:   v5 = bool.icmp.i1.eq v4, 0x1
      nextln:   jumpif v5, addr_0_block_0, addr_0_block_1
      check: addr_0_block_0: // preds: entry
      nextln:   jump addr_0_block_2(v1)
      check: addr_0_block_1: // preds: entry
      nextln:   jump addr_0_block_2(v3)
      check: addr_0_block_2(v6: i32): // preds: addr_0_block_0 addr_0_block_1
      nextln:   v7 = i64.zext.i32 0x0
      nextln:   v8 = i64.lshl v7, 0x20
      nextln:   v9 = i64.zext.i32 v6
      nextln:   v10 = i64.or v8, v9
      nextln:   write_reg.i64 v10, "x0"
