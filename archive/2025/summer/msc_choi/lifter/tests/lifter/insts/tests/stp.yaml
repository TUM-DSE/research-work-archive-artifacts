tests:
- name: stp_1
  bytes: [0x41, 0x08, 0x00, 0xa9]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x2"
      nextln:   v1 = i64.wrapping_add v0, 0x0
      nextln:   v2 = i64.read_reg "x1"
      nextln:   v3 = i64.read_reg "x2"
      nextln:   v4 = i64.wrapping_add v1, 0x0
      nextln:   v5 = i64.unsigned_from_bits v4
      nextln:   v6 = int.modulo v5, 0x8
      nextln:   v7 = int.sub v5, v6
      nextln:   v8 = i64.to_bits v7
      nextln:   v9 = bool.icmp.i64.eq v4, v8
      nextln:   v10 = bool.bitwise_not v9
      nextln:   v11 = bool.bitwise_not v9
      nextln:   jumpif v11, addr_0_block_0, addr_0_block_348
      check: addr_0_block_0: // preds: entry
      nextln:   v12 = i8.trunc.i64 v2
      nextln:   v13 = i64.unsigned_from_bits v4
      nextln:   v14 = int.modulo v13, 0x1
      nextln:   v15 = int.sub v13, v14
      nextln:   v16 = i64.to_bits v15
      nextln:   v17 = bool.icmp.i64.eq v4, v16
      nextln:   v18 = i64.lshr v4, 0x30
      nextln:   v19 = i16.trunc.i64 v18
      nextln:   v20 = bool.icmp.i16.eq v19, 0x0
      nextln:   v21 = bool.bitwise_not v20
      nextln:   jumpif v21, addr_0_block_1, addr_0_block_2
      nextln:   jump addr_0_block_392(v209, v210)
      check: addr_0_block_1: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_2: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_3(v1352: i52, v1353: int, v1354: bool, v1355: bool): // preds: addr_0_block_2
      nextln:   v1356 = i52.trunc.i64 v4
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1356, 0x1, 0x0)
      check: addr_0_block_4(v62: i3, v63: i1, v64: i1, v65: i1, v66: i1, v67: i4, v68: i1, v69: bool, v70: int, v71: int, v72: bool, v73: bool, v74: i8, v75: i8, v76: i52, v77: i1, v78: bool, v79: bool, v80: int, v81: i1, v82: bool, v83: i4, v84: i2, v85: i4, v86: i8, v87: i8, v88: i2, v89: i2, v90: bool, v91: i2, v92: i2, v93: bool, v94: bool, v95: bool, v96: bool, v97: i52, v98: i1, v99: i64, v100: i1, v101: i8, v102: i8, v103: i52, v104: i1, v105: bool, v106: bool, v107: int, v108: i1, v109: bool, v110: i4, v111: i2, v112: i4, v113: i8, v114: i8, v115: i2, v116: i2, v117: bool, v118: i2, v119: i2, v120: bool, v121: bool, v122: bool, v123: bool, v124: i52, v125: i1, v126: i64): // preds: addr_0_block_1 addr_0_block_3
      nextln:   v127 = bool.icmp.i8.ne v101, 0x0
      nextln:   v128 = bool.bitwise_not v127
      nextln:   v129 = bool.bitwise_not v9
      nextln:   v130 = bool.and v129, 0x1
      nextln:   v131 = bool.or v130, 0x0
      nextln:   v132 = bool.icmp.i8.ne v101, 0x0
      nextln:   v133 = bool.bitwise_not v132
      nextln:   v134 = bool.and v131, v133
      nextln:   v135 = bool.icmp.i8.eq v113, 0x1
      nextln:   v136 = bool.and v134, v135
      nextln:   jumpif v136, addr_0_block_5, addr_0_block_6
      check: addr_0_block_5: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_6: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_7: // preds: addr_0_block_5 addr_0_block_6
      nextln:   v137 = bool.icmp.i8.ne v101, 0x0
      nextln:   v138 = bool.bitwise_not v137
      nextln:   v139 = bool.icmp.i8.ne v101, 0x0
      nextln:   v140 = bool.bitwise_not v139
      nextln:   v141 = bool.icmp.i8.eq v113, 0x1
      nextln:   v142 = bool.and v140, v141
      nextln:   jumpif v72, addr_0_block_8, addr_0_block_9
      check: addr_0_block_8: // preds: addr_0_block_7
      nextln:   v143 = bool.icmp.i8.eq v101, 0x0
      nextln:   jump addr_0_block_10(0x1)
      check: addr_0_block_9: // preds: addr_0_block_7
      nextln:   jump addr_0_block_10(0x0)
      check: addr_0_block_10(v144: bool): // preds: addr_0_block_8 addr_0_block_9
      nextln:   v145 = bool.icmp.i8.eq v101, 0x0
      nextln:   v146 = bool.and v73, v145
      nextln:   jumpif v146, addr_0_block_11, addr_0_block_12
      check: addr_0_block_11: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x1, 0x1)
      check: addr_0_block_12: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x0, 0x0)
      check: addr_0_block_13(v147: bool, v148: bool): // preds: addr_0_block_11 addr_0_block_12
      nextln:   v149 = bool.or v144, v147
      nextln:   jumpif v149, addr_0_block_14, addr_0_block_27
      check: addr_0_block_14: // preds: addr_0_block_13
      nextln:   v150 = i52.unsigned_from_bits v97
      nextln:   v151 = int.modulo v150, 0x8
      nextln:   v152 = int.sub v150, v151
      nextln:   v153 = i52.to_bits v152
      nextln:   v154 = bool.icmp.i52.eq v97, v153
      nextln:   v155 = i64.load v97
      nextln:   jumpif v144, addr_0_block_15, addr_0_block_16
      nextln:   jump addr_0_block_28(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v155, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, 0x0, 0x0)
      check: addr_0_block_15: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_16: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_17: // preds: addr_0_block_15 addr_0_block_16
      nextln:   jumpif v147, addr_0_block_18, addr_0_block_19
      check: addr_0_block_18: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_19: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_20: // preds: addr_0_block_18 addr_0_block_19
      nextln:   v1357 = i52.unsigned_from_bits v97
      nextln:   v1358 = int.modulo v1357, 0x8
      nextln:   v1359 = int.sub v1357, v1358
      nextln:   v1360 = i52.to_bits v1359
      nextln:   v1361 = bool.icmp.i52.eq v97, v1360
      nextln:   v1362 = bool.icmp.i52.eq v97, 0x13000000
      nextln:   jumpif v1362, addr_0_block_21, addr_0_block_25
      check: addr_0_block_21: // preds: addr_0_block_20
      nextln:   v1363 = i64.unsigned_from_bits v155
      nextln:   v1364 = bool.icmp.int.eq v1363, 0x4
      nextln:   jumpif v1364, addr_0_block_22, addr_0_block_23
      nextln:   jump addr_0_block_26
      check: addr_0_block_22: // no preds!
      nextln:   jump addr_0_block_24
      check: addr_0_block_23: // no preds!
      nextln:   v1365 = i8.trunc.i64 v155
      nextln:   v1366 = i8.unsigned_from_bits v1365
      nextln:   jump addr_0_block_24
      check: addr_0_block_24: // preds: addr_0_block_22 addr_0_block_23
      check: addr_0_block_25: // preds: addr_0_block_20
      nextln:   store.i64 v155, v97
      nextln:   jump addr_0_block_26
      check: addr_0_block_26: // preds: addr_0_block_21 addr_0_block_25
      check: addr_0_block_27: // preds: addr_0_block_13
      nextln:   jump addr_0_block_28(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_28(v156: i8, v157: i1, v158: i16, v159: i8, v160: bool, v161: bool, v162: bool, v163: int, v164: i64, v165: i8, v166: i8, v167: i52, v168: i1, v169: bool, v170: bool, v171: int, v172: i1, v173: bool, v174: i4, v175: i2, v176: i4, v177: i8, v178: i8, v179: i2, v180: i2, v181: bool, v182: i2, v183: i2, v184: bool, v185: bool, v186: bool, v187: bool, v188: i52, v189: i1, v190: i64, v191: i2, v192: bool): // preds: addr_0_block_14 addr_0_block_27
      nextln:   v193 = bool.icmp.i8.ne v101, 0x0
      nextln:   v194 = bool.bitwise_not v193
      nextln:   v195 = bool.and v194, 0x1
      nextln:   v196 = bool.icmp.i8.ne v101, 0x0
      nextln:   v197 = bool.bitwise_not v196
      nextln:   v198 = bool.and 0x1, v197
      nextln:   jumpif v198, addr_0_block_29, addr_0_block_30
      check: addr_0_block_29: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_30: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_31: // preds: addr_0_block_29 addr_0_block_30
      nextln:   v199 = bool.icmp.i8.ne v101, 0x0
      nextln:   jumpif v199, addr_0_block_32, addr_0_block_33
      check: addr_0_block_32: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_33: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_34: // preds: addr_0_block_32 addr_0_block_33
      nextln:   jumpif v122, addr_0_block_35, addr_0_block_36
      check: addr_0_block_35: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_36: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_37: // preds: addr_0_block_35 addr_0_block_36
      nextln:   v200 = i52.unsigned_from_bits v124
      nextln:   v201 = int.modulo v200, 0x1
      nextln:   v202 = int.sub v200, v201
      nextln:   v203 = i52.to_bits v202
      nextln:   v204 = bool.icmp.i52.eq v124, v203
      nextln:   v205 = bool.icmp.i52.eq v124, 0x13000000
      nextln:   jumpif v205, addr_0_block_38, addr_0_block_42
      check: addr_0_block_38: // preds: addr_0_block_37
      nextln:   v206 = i8.unsigned_from_bits v12
      nextln:   v207 = bool.icmp.int.eq v206, 0x4
      nextln:   jumpif v207, addr_0_block_39, addr_0_block_40
      nextln:   jump addr_0_block_43
      check: addr_0_block_39: // no preds!
      nextln:   jump addr_0_block_41
      check: addr_0_block_40: // no preds!
      nextln:   v1367 = i8.unsigned_from_bits v12
      nextln:   jump addr_0_block_41
      check: addr_0_block_41: // preds: addr_0_block_39 addr_0_block_40
      check: addr_0_block_42: // preds: addr_0_block_37
      nextln:   store.i8 v12, v124
      nextln:   jump addr_0_block_43
      check: addr_0_block_43: // preds: addr_0_block_38 addr_0_block_42
      nextln:   v208 = bool.bitwise_not v9
      nextln:   jumpif v208, addr_0_block_44, addr_0_block_45
      check: addr_0_block_44: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v9, 0xc)
      check: addr_0_block_45: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v9, 0x0)
      check: addr_0_block_46(v209: i64, v210: i8): // preds: addr_0_block_44 addr_0_block_45
      nextln:   v211 = i64.lshr v2, 0x8
      nextln:   v212 = i8.trunc.i64 v211
      nextln:   v213 = i64.wrapping_add v4, 0x1
      nextln:   v214 = i64.unsigned_from_bits v213
      nextln:   v215 = int.modulo v214, 0x1
      nextln:   v216 = int.sub v214, v215
      nextln:   v217 = i64.to_bits v216
      nextln:   v218 = bool.icmp.i64.eq v213, v217
      nextln:   v219 = i64.lshr v213, 0x30
      nextln:   v220 = i16.trunc.i64 v219
      nextln:   v221 = bool.icmp.i16.eq v220, 0x0
      nextln:   v222 = bool.bitwise_not v221
      nextln:   jumpif v222, addr_0_block_47, addr_0_block_48
      check: addr_0_block_47: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_48: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_49(v1347: i52, v1348: int, v1349: bool, v1350: bool): // preds: addr_0_block_48
      nextln:   v1351 = i52.trunc.i64 v213
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1351, 0x1, 0x0)
      check: addr_0_block_50(v223: i3, v224: i1, v225: i1, v226: i1, v227: i1, v228: i4, v229: i1, v230: bool, v231: int, v232: int, v233: bool, v234: bool, v235: i8, v236: i8, v237: i52, v238: i1, v239: bool, v240: bool, v241: int, v242: i1, v243: bool, v244: i4, v245: i2, v246: i4, v247: i8, v248: i8, v249: i2, v250: i2, v251: bool, v252: i2, v253: i2, v254: bool, v255: bool, v256: bool, v257: bool, v258: i52, v259: i1, v260: i64, v261: i1, v262: i8, v263: i8, v264: i52, v265: i1, v266: bool, v267: bool, v268: int, v269: i1, v270: bool, v271: i4, v272: i2, v273: i4, v274: i8, v275: i8, v276: i2, v277: i2, v278: bool, v279: i2, v280: i2, v281: bool, v282: bool, v283: bool, v284: bool, v285: i52, v286: i1, v287: i64): // preds: addr_0_block_47 addr_0_block_49
      nextln:   v288 = bool.icmp.i8.ne v262, 0x0
      nextln:   v289 = bool.bitwise_not v288
      nextln:   v290 = bool.bitwise_not v9
      nextln:   v291 = bool.and v290, 0x1
      nextln:   v292 = bool.or v291, 0x0
      nextln:   v293 = bool.icmp.i8.ne v262, 0x0
      nextln:   v294 = bool.bitwise_not v293
      nextln:   v295 = bool.and v292, v294
      nextln:   v296 = bool.icmp.i8.eq v274, 0x1
      nextln:   v297 = bool.and v295, v296
      nextln:   jumpif v297, addr_0_block_51, addr_0_block_52
      check: addr_0_block_51: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_52: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_53: // preds: addr_0_block_51 addr_0_block_52
      nextln:   v298 = bool.icmp.i8.ne v262, 0x0
      nextln:   v299 = bool.bitwise_not v298
      nextln:   v300 = bool.icmp.i8.ne v262, 0x0
      nextln:   v301 = bool.bitwise_not v300
      nextln:   v302 = bool.icmp.i8.eq v274, 0x1
      nextln:   v303 = bool.and v301, v302
      nextln:   jumpif v233, addr_0_block_54, addr_0_block_55
      check: addr_0_block_54: // preds: addr_0_block_53
      nextln:   v304 = bool.icmp.i8.eq v262, 0x0
      nextln:   jump addr_0_block_56(0x1)
      check: addr_0_block_55: // preds: addr_0_block_53
      nextln:   jump addr_0_block_56(0x0)
      check: addr_0_block_56(v305: bool): // preds: addr_0_block_54 addr_0_block_55
      nextln:   v306 = bool.icmp.i8.eq v262, 0x0
      nextln:   v307 = bool.and v234, v306
      nextln:   jumpif v307, addr_0_block_57, addr_0_block_58
      check: addr_0_block_57: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x1, 0x1)
      check: addr_0_block_58: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x0, 0x0)
      check: addr_0_block_59(v308: bool, v309: bool): // preds: addr_0_block_57 addr_0_block_58
      nextln:   v310 = bool.or v305, v308
      nextln:   jumpif v310, addr_0_block_60, addr_0_block_73
      check: addr_0_block_60: // preds: addr_0_block_59
      nextln:   v311 = i52.unsigned_from_bits v258
      nextln:   v312 = int.modulo v311, 0x8
      nextln:   v313 = int.sub v311, v312
      nextln:   v314 = i52.to_bits v313
      nextln:   v315 = bool.icmp.i52.eq v258, v314
      nextln:   v316 = i64.load v258
      nextln:   jumpif v305, addr_0_block_61, addr_0_block_62
      nextln:   jump addr_0_block_74(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v316, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244, v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v255, v256, v257, v258, v259, v260, 0x0, 0x0)
      check: addr_0_block_61: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_62: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_63: // preds: addr_0_block_61 addr_0_block_62
      nextln:   jumpif v308, addr_0_block_64, addr_0_block_65
      check: addr_0_block_64: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_65: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_66: // preds: addr_0_block_64 addr_0_block_65
      nextln:   v1368 = i52.unsigned_from_bits v258
      nextln:   v1369 = int.modulo v1368, 0x8
      nextln:   v1370 = int.sub v1368, v1369
      nextln:   v1371 = i52.to_bits v1370
      nextln:   v1372 = bool.icmp.i52.eq v258, v1371
      nextln:   v1373 = bool.icmp.i52.eq v258, 0x13000000
      nextln:   jumpif v1373, addr_0_block_67, addr_0_block_71
      check: addr_0_block_67: // preds: addr_0_block_66
      nextln:   v1374 = i64.unsigned_from_bits v316
      nextln:   v1375 = bool.icmp.int.eq v1374, 0x4
      nextln:   jumpif v1375, addr_0_block_68, addr_0_block_69
      nextln:   jump addr_0_block_72
      check: addr_0_block_68: // no preds!
      nextln:   jump addr_0_block_70
      check: addr_0_block_69: // no preds!
      nextln:   v1376 = i8.trunc.i64 v316
      nextln:   v1377 = i8.unsigned_from_bits v1376
      nextln:   jump addr_0_block_70
      check: addr_0_block_70: // preds: addr_0_block_68 addr_0_block_69
      check: addr_0_block_71: // preds: addr_0_block_66
      nextln:   store.i64 v316, v258
      nextln:   jump addr_0_block_72
      check: addr_0_block_72: // preds: addr_0_block_67 addr_0_block_71
      check: addr_0_block_73: // preds: addr_0_block_59
      nextln:   jump addr_0_block_74(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_74(v317: i8, v318: i1, v319: i16, v320: i8, v321: bool, v322: bool, v323: bool, v324: int, v325: i64, v326: i8, v327: i8, v328: i52, v329: i1, v330: bool, v331: bool, v332: int, v333: i1, v334: bool, v335: i4, v336: i2, v337: i4, v338: i8, v339: i8, v340: i2, v341: i2, v342: bool, v343: i2, v344: i2, v345: bool, v346: bool, v347: bool, v348: bool, v349: i52, v350: i1, v351: i64, v352: i2, v353: bool): // preds: addr_0_block_60 addr_0_block_73
      nextln:   v354 = bool.icmp.i8.ne v262, 0x0
      nextln:   v355 = bool.bitwise_not v354
      nextln:   v356 = bool.and v355, 0x1
      nextln:   v357 = bool.icmp.i8.ne v262, 0x0
      nextln:   v358 = bool.bitwise_not v357
      nextln:   v359 = bool.and 0x1, v358
      nextln:   jumpif v359, addr_0_block_75, addr_0_block_76
      check: addr_0_block_75: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_76: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_77: // preds: addr_0_block_75 addr_0_block_76
      nextln:   v360 = bool.icmp.i8.ne v262, 0x0
      nextln:   jumpif v360, addr_0_block_78, addr_0_block_79
      check: addr_0_block_78: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_79: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_80: // preds: addr_0_block_78 addr_0_block_79
      nextln:   jumpif v283, addr_0_block_81, addr_0_block_82
      check: addr_0_block_81: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_82: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_83: // preds: addr_0_block_81 addr_0_block_82
      nextln:   v361 = i52.unsigned_from_bits v285
      nextln:   v362 = int.modulo v361, 0x1
      nextln:   v363 = int.sub v361, v362
      nextln:   v364 = i52.to_bits v363
      nextln:   v365 = bool.icmp.i52.eq v285, v364
      nextln:   v366 = bool.icmp.i52.eq v285, 0x13000000
      nextln:   jumpif v366, addr_0_block_84, addr_0_block_88
      check: addr_0_block_84: // preds: addr_0_block_83
      nextln:   v367 = i8.unsigned_from_bits v212
      nextln:   v368 = bool.icmp.int.eq v367, 0x4
      nextln:   jumpif v368, addr_0_block_85, addr_0_block_86
      nextln:   jump addr_0_block_89
      check: addr_0_block_85: // no preds!
      nextln:   jump addr_0_block_87
      check: addr_0_block_86: // no preds!
      nextln:   v1378 = i8.unsigned_from_bits v212
      nextln:   jump addr_0_block_87
      check: addr_0_block_87: // preds: addr_0_block_85 addr_0_block_86
      check: addr_0_block_88: // preds: addr_0_block_83
      nextln:   store.i8 v212, v285
      nextln:   jump addr_0_block_89
      check: addr_0_block_89: // preds: addr_0_block_84 addr_0_block_88
      nextln:   v369 = i64.lshr v2, 0x10
      nextln:   v370 = i8.trunc.i64 v369
      nextln:   v371 = i64.wrapping_add v4, 0x2
      nextln:   v372 = i64.unsigned_from_bits v371
      nextln:   v373 = int.modulo v372, 0x1
      nextln:   v374 = int.sub v372, v373
      nextln:   v375 = i64.to_bits v374
      nextln:   v376 = bool.icmp.i64.eq v371, v375
      nextln:   v377 = i64.lshr v371, 0x30
      nextln:   v378 = i16.trunc.i64 v377
      nextln:   v379 = bool.icmp.i16.eq v378, 0x0
      nextln:   v380 = bool.bitwise_not v379
      nextln:   jumpif v380, addr_0_block_90, addr_0_block_91
      check: addr_0_block_90: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_91: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_92(v1342: i52, v1343: int, v1344: bool, v1345: bool): // preds: addr_0_block_91
      nextln:   v1346 = i52.trunc.i64 v371
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1346, 0x1, 0x0)
      check: addr_0_block_93(v381: i3, v382: i1, v383: i1, v384: i1, v385: i1, v386: i4, v387: i1, v388: bool, v389: int, v390: int, v391: bool, v392: bool, v393: i8, v394: i8, v395: i52, v396: i1, v397: bool, v398: bool, v399: int, v400: i1, v401: bool, v402: i4, v403: i2, v404: i4, v405: i8, v406: i8, v407: i2, v408: i2, v409: bool, v410: i2, v411: i2, v412: bool, v413: bool, v414: bool, v415: bool, v416: i52, v417: i1, v418: i64, v419: i1, v420: i8, v421: i8, v422: i52, v423: i1, v424: bool, v425: bool, v426: int, v427: i1, v428: bool, v429: i4, v430: i2, v431: i4, v432: i8, v433: i8, v434: i2, v435: i2, v436: bool, v437: i2, v438: i2, v439: bool, v440: bool, v441: bool, v442: bool, v443: i52, v444: i1, v445: i64): // preds: addr_0_block_90 addr_0_block_92
      nextln:   v446 = bool.icmp.i8.ne v420, 0x0
      nextln:   v447 = bool.bitwise_not v446
      nextln:   v448 = bool.bitwise_not v9
      nextln:   v449 = bool.and v448, 0x1
      nextln:   v450 = bool.or v449, 0x0
      nextln:   v451 = bool.icmp.i8.ne v420, 0x0
      nextln:   v452 = bool.bitwise_not v451
      nextln:   v453 = bool.and v450, v452
      nextln:   v454 = bool.icmp.i8.eq v432, 0x1
      nextln:   v455 = bool.and v453, v454
      nextln:   jumpif v455, addr_0_block_94, addr_0_block_95
      check: addr_0_block_94: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_95: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_96: // preds: addr_0_block_94 addr_0_block_95
      nextln:   v456 = bool.icmp.i8.ne v420, 0x0
      nextln:   v457 = bool.bitwise_not v456
      nextln:   v458 = bool.icmp.i8.ne v420, 0x0
      nextln:   v459 = bool.bitwise_not v458
      nextln:   v460 = bool.icmp.i8.eq v432, 0x1
      nextln:   v461 = bool.and v459, v460
      nextln:   jumpif v391, addr_0_block_97, addr_0_block_98
      check: addr_0_block_97: // preds: addr_0_block_96
      nextln:   v462 = bool.icmp.i8.eq v420, 0x0
      nextln:   jump addr_0_block_99(0x1)
      check: addr_0_block_98: // preds: addr_0_block_96
      nextln:   jump addr_0_block_99(0x0)
      check: addr_0_block_99(v463: bool): // preds: addr_0_block_97 addr_0_block_98
      nextln:   v464 = bool.icmp.i8.eq v420, 0x0
      nextln:   v465 = bool.and v392, v464
      nextln:   jumpif v465, addr_0_block_100, addr_0_block_101
      check: addr_0_block_100: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x1, 0x1)
      check: addr_0_block_101: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x0, 0x0)
      check: addr_0_block_102(v466: bool, v467: bool): // preds: addr_0_block_100 addr_0_block_101
      nextln:   v468 = bool.or v463, v466
      nextln:   jumpif v468, addr_0_block_103, addr_0_block_116
      check: addr_0_block_103: // preds: addr_0_block_102
      nextln:   v469 = i52.unsigned_from_bits v416
      nextln:   v470 = int.modulo v469, 0x8
      nextln:   v471 = int.sub v469, v470
      nextln:   v472 = i52.to_bits v471
      nextln:   v473 = bool.icmp.i52.eq v416, v472
      nextln:   v474 = i64.load v416
      nextln:   jumpif v463, addr_0_block_104, addr_0_block_105
      nextln:   jump addr_0_block_117(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v474, v393, v394, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410, v411, v412, v413, v414, v415, v416, v417, v418, 0x0, 0x0)
      check: addr_0_block_104: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_105: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_106: // preds: addr_0_block_104 addr_0_block_105
      nextln:   jumpif v466, addr_0_block_107, addr_0_block_108
      check: addr_0_block_107: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_108: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_109: // preds: addr_0_block_107 addr_0_block_108
      nextln:   v1379 = i52.unsigned_from_bits v416
      nextln:   v1380 = int.modulo v1379, 0x8
      nextln:   v1381 = int.sub v1379, v1380
      nextln:   v1382 = i52.to_bits v1381
      nextln:   v1383 = bool.icmp.i52.eq v416, v1382
      nextln:   v1384 = bool.icmp.i52.eq v416, 0x13000000
      nextln:   jumpif v1384, addr_0_block_110, addr_0_block_114
      check: addr_0_block_110: // preds: addr_0_block_109
      nextln:   v1385 = i64.unsigned_from_bits v474
      nextln:   v1386 = bool.icmp.int.eq v1385, 0x4
      nextln:   jumpif v1386, addr_0_block_111, addr_0_block_112
      nextln:   jump addr_0_block_115
      check: addr_0_block_111: // no preds!
      nextln:   jump addr_0_block_113
      check: addr_0_block_112: // no preds!
      nextln:   v1387 = i8.trunc.i64 v474
      nextln:   v1388 = i8.unsigned_from_bits v1387
      nextln:   jump addr_0_block_113
      check: addr_0_block_113: // preds: addr_0_block_111 addr_0_block_112
      check: addr_0_block_114: // preds: addr_0_block_109
      nextln:   store.i64 v474, v416
      nextln:   jump addr_0_block_115
      check: addr_0_block_115: // preds: addr_0_block_110 addr_0_block_114
      check: addr_0_block_116: // preds: addr_0_block_102
      nextln:   jump addr_0_block_117(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_117(v475: i8, v476: i1, v477: i16, v478: i8, v479: bool, v480: bool, v481: bool, v482: int, v483: i64, v484: i8, v485: i8, v486: i52, v487: i1, v488: bool, v489: bool, v490: int, v491: i1, v492: bool, v493: i4, v494: i2, v495: i4, v496: i8, v497: i8, v498: i2, v499: i2, v500: bool, v501: i2, v502: i2, v503: bool, v504: bool, v505: bool, v506: bool, v507: i52, v508: i1, v509: i64, v510: i2, v511: bool): // preds: addr_0_block_103 addr_0_block_116
      nextln:   v512 = bool.icmp.i8.ne v420, 0x0
      nextln:   v513 = bool.bitwise_not v512
      nextln:   v514 = bool.and v513, 0x1
      nextln:   v515 = bool.icmp.i8.ne v420, 0x0
      nextln:   v516 = bool.bitwise_not v515
      nextln:   v517 = bool.and 0x1, v516
      nextln:   jumpif v517, addr_0_block_118, addr_0_block_119
      check: addr_0_block_118: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_119: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_120: // preds: addr_0_block_118 addr_0_block_119
      nextln:   v518 = bool.icmp.i8.ne v420, 0x0
      nextln:   jumpif v518, addr_0_block_121, addr_0_block_122
      check: addr_0_block_121: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_122: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_123: // preds: addr_0_block_121 addr_0_block_122
      nextln:   jumpif v441, addr_0_block_124, addr_0_block_125
      check: addr_0_block_124: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_125: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_126: // preds: addr_0_block_124 addr_0_block_125
      nextln:   v519 = i52.unsigned_from_bits v443
      nextln:   v520 = int.modulo v519, 0x1
      nextln:   v521 = int.sub v519, v520
      nextln:   v522 = i52.to_bits v521
      nextln:   v523 = bool.icmp.i52.eq v443, v522
      nextln:   v524 = bool.icmp.i52.eq v443, 0x13000000
      nextln:   jumpif v524, addr_0_block_127, addr_0_block_131
      check: addr_0_block_127: // preds: addr_0_block_126
      nextln:   v525 = i8.unsigned_from_bits v370
      nextln:   v526 = bool.icmp.int.eq v525, 0x4
      nextln:   jumpif v526, addr_0_block_128, addr_0_block_129
      nextln:   jump addr_0_block_132
      check: addr_0_block_128: // no preds!
      nextln:   jump addr_0_block_130
      check: addr_0_block_129: // no preds!
      nextln:   v1389 = i8.unsigned_from_bits v370
      nextln:   jump addr_0_block_130
      check: addr_0_block_130: // preds: addr_0_block_128 addr_0_block_129
      check: addr_0_block_131: // preds: addr_0_block_126
      nextln:   store.i8 v370, v443
      nextln:   jump addr_0_block_132
      check: addr_0_block_132: // preds: addr_0_block_127 addr_0_block_131
      nextln:   v527 = i64.lshr v2, 0x18
      nextln:   v528 = i8.trunc.i64 v527
      nextln:   v529 = i64.wrapping_add v4, 0x3
      nextln:   v530 = i64.unsigned_from_bits v529
      nextln:   v531 = int.modulo v530, 0x1
      nextln:   v532 = int.sub v530, v531
      nextln:   v533 = i64.to_bits v532
      nextln:   v534 = bool.icmp.i64.eq v529, v533
      nextln:   v535 = i64.lshr v529, 0x30
      nextln:   v536 = i16.trunc.i64 v535
      nextln:   v537 = bool.icmp.i16.eq v536, 0x0
      nextln:   v538 = bool.bitwise_not v537
      nextln:   jumpif v538, addr_0_block_133, addr_0_block_134
      check: addr_0_block_133: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_134: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_135(v1337: i52, v1338: int, v1339: bool, v1340: bool): // preds: addr_0_block_134
      nextln:   v1341 = i52.trunc.i64 v529
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1341, 0x1, 0x0)
      check: addr_0_block_136(v539: i3, v540: i1, v541: i1, v542: i1, v543: i1, v544: i4, v545: i1, v546: bool, v547: int, v548: int, v549: bool, v550: bool, v551: i8, v552: i8, v553: i52, v554: i1, v555: bool, v556: bool, v557: int, v558: i1, v559: bool, v560: i4, v561: i2, v562: i4, v563: i8, v564: i8, v565: i2, v566: i2, v567: bool, v568: i2, v569: i2, v570: bool, v571: bool, v572: bool, v573: bool, v574: i52, v575: i1, v576: i64, v577: i1, v578: i8, v579: i8, v580: i52, v581: i1, v582: bool, v583: bool, v584: int, v585: i1, v586: bool, v587: i4, v588: i2, v589: i4, v590: i8, v591: i8, v592: i2, v593: i2, v594: bool, v595: i2, v596: i2, v597: bool, v598: bool, v599: bool, v600: bool, v601: i52, v602: i1, v603: i64): // preds: addr_0_block_133 addr_0_block_135
      nextln:   v604 = bool.icmp.i8.ne v578, 0x0
      nextln:   v605 = bool.bitwise_not v604
      nextln:   v606 = bool.bitwise_not v9
      nextln:   v607 = bool.and v606, 0x1
      nextln:   v608 = bool.or v607, 0x0
      nextln:   v609 = bool.icmp.i8.ne v578, 0x0
      nextln:   v610 = bool.bitwise_not v609
      nextln:   v611 = bool.and v608, v610
      nextln:   v612 = bool.icmp.i8.eq v590, 0x1
      nextln:   v613 = bool.and v611, v612
      nextln:   jumpif v613, addr_0_block_137, addr_0_block_138
      check: addr_0_block_137: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_138: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_139: // preds: addr_0_block_137 addr_0_block_138
      nextln:   v614 = bool.icmp.i8.ne v578, 0x0
      nextln:   v615 = bool.bitwise_not v614
      nextln:   v616 = bool.icmp.i8.ne v578, 0x0
      nextln:   v617 = bool.bitwise_not v616
      nextln:   v618 = bool.icmp.i8.eq v590, 0x1
      nextln:   v619 = bool.and v617, v618
      nextln:   jumpif v549, addr_0_block_140, addr_0_block_141
      check: addr_0_block_140: // preds: addr_0_block_139
      nextln:   v620 = bool.icmp.i8.eq v578, 0x0
      nextln:   jump addr_0_block_142(0x1)
      check: addr_0_block_141: // preds: addr_0_block_139
      nextln:   jump addr_0_block_142(0x0)
      check: addr_0_block_142(v621: bool): // preds: addr_0_block_140 addr_0_block_141
      nextln:   v622 = bool.icmp.i8.eq v578, 0x0
      nextln:   v623 = bool.and v550, v622
      nextln:   jumpif v623, addr_0_block_143, addr_0_block_144
      check: addr_0_block_143: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x1, 0x1)
      check: addr_0_block_144: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x0, 0x0)
      check: addr_0_block_145(v624: bool, v625: bool): // preds: addr_0_block_143 addr_0_block_144
      nextln:   v626 = bool.or v621, v624
      nextln:   jumpif v626, addr_0_block_146, addr_0_block_159
      check: addr_0_block_146: // preds: addr_0_block_145
      nextln:   v627 = i52.unsigned_from_bits v574
      nextln:   v628 = int.modulo v627, 0x8
      nextln:   v629 = int.sub v627, v628
      nextln:   v630 = i52.to_bits v629
      nextln:   v631 = bool.icmp.i52.eq v574, v630
      nextln:   v632 = i64.load v574
      nextln:   jumpif v621, addr_0_block_147, addr_0_block_148
      nextln:   jump addr_0_block_160(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v632, v551, v552, v553, v554, v555, v556, v557, v558, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569, v570, v571, v572, v573, v574, v575, v576, 0x0, 0x0)
      check: addr_0_block_147: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_148: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_149: // preds: addr_0_block_147 addr_0_block_148
      nextln:   jumpif v624, addr_0_block_150, addr_0_block_151
      check: addr_0_block_150: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_151: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_152: // preds: addr_0_block_150 addr_0_block_151
      nextln:   v1390 = i52.unsigned_from_bits v574
      nextln:   v1391 = int.modulo v1390, 0x8
      nextln:   v1392 = int.sub v1390, v1391
      nextln:   v1393 = i52.to_bits v1392
      nextln:   v1394 = bool.icmp.i52.eq v574, v1393
      nextln:   v1395 = bool.icmp.i52.eq v574, 0x13000000
      nextln:   jumpif v1395, addr_0_block_153, addr_0_block_157
      check: addr_0_block_153: // preds: addr_0_block_152
      nextln:   v1396 = i64.unsigned_from_bits v632
      nextln:   v1397 = bool.icmp.int.eq v1396, 0x4
      nextln:   jumpif v1397, addr_0_block_154, addr_0_block_155
      nextln:   jump addr_0_block_158
      check: addr_0_block_154: // no preds!
      nextln:   jump addr_0_block_156
      check: addr_0_block_155: // no preds!
      nextln:   v1398 = i8.trunc.i64 v632
      nextln:   v1399 = i8.unsigned_from_bits v1398
      nextln:   jump addr_0_block_156
      check: addr_0_block_156: // preds: addr_0_block_154 addr_0_block_155
      check: addr_0_block_157: // preds: addr_0_block_152
      nextln:   store.i64 v632, v574
      nextln:   jump addr_0_block_158
      check: addr_0_block_158: // preds: addr_0_block_153 addr_0_block_157
      check: addr_0_block_159: // preds: addr_0_block_145
      nextln:   jump addr_0_block_160(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_160(v633: i8, v634: i1, v635: i16, v636: i8, v637: bool, v638: bool, v639: bool, v640: int, v641: i64, v642: i8, v643: i8, v644: i52, v645: i1, v646: bool, v647: bool, v648: int, v649: i1, v650: bool, v651: i4, v652: i2, v653: i4, v654: i8, v655: i8, v656: i2, v657: i2, v658: bool, v659: i2, v660: i2, v661: bool, v662: bool, v663: bool, v664: bool, v665: i52, v666: i1, v667: i64, v668: i2, v669: bool): // preds: addr_0_block_146 addr_0_block_159
      nextln:   v670 = bool.icmp.i8.ne v578, 0x0
      nextln:   v671 = bool.bitwise_not v670
      nextln:   v672 = bool.and v671, 0x1
      nextln:   v673 = bool.icmp.i8.ne v578, 0x0
      nextln:   v674 = bool.bitwise_not v673
      nextln:   v675 = bool.and 0x1, v674
      nextln:   jumpif v675, addr_0_block_161, addr_0_block_162
      check: addr_0_block_161: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_162: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_163: // preds: addr_0_block_161 addr_0_block_162
      nextln:   v676 = bool.icmp.i8.ne v578, 0x0
      nextln:   jumpif v676, addr_0_block_164, addr_0_block_165
      check: addr_0_block_164: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_165: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_166: // preds: addr_0_block_164 addr_0_block_165
      nextln:   jumpif v599, addr_0_block_167, addr_0_block_168
      check: addr_0_block_167: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_168: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_169: // preds: addr_0_block_167 addr_0_block_168
      nextln:   v677 = i52.unsigned_from_bits v601
      nextln:   v678 = int.modulo v677, 0x1
      nextln:   v679 = int.sub v677, v678
      nextln:   v680 = i52.to_bits v679
      nextln:   v681 = bool.icmp.i52.eq v601, v680
      nextln:   v682 = bool.icmp.i52.eq v601, 0x13000000
      nextln:   jumpif v682, addr_0_block_170, addr_0_block_174
      check: addr_0_block_170: // preds: addr_0_block_169
      nextln:   v683 = i8.unsigned_from_bits v528
      nextln:   v684 = bool.icmp.int.eq v683, 0x4
      nextln:   jumpif v684, addr_0_block_171, addr_0_block_172
      nextln:   jump addr_0_block_175
      check: addr_0_block_171: // no preds!
      nextln:   jump addr_0_block_173
      check: addr_0_block_172: // no preds!
      nextln:   v1400 = i8.unsigned_from_bits v528
      nextln:   jump addr_0_block_173
      check: addr_0_block_173: // preds: addr_0_block_171 addr_0_block_172
      check: addr_0_block_174: // preds: addr_0_block_169
      nextln:   store.i8 v528, v601
      nextln:   jump addr_0_block_175
      check: addr_0_block_175: // preds: addr_0_block_170 addr_0_block_174
      nextln:   v685 = i64.lshr v2, 0x20
      nextln:   v686 = i8.trunc.i64 v685
      nextln:   v687 = i64.wrapping_add v4, 0x4
      nextln:   v688 = i64.unsigned_from_bits v687
      nextln:   v689 = int.modulo v688, 0x1
      nextln:   v690 = int.sub v688, v689
      nextln:   v691 = i64.to_bits v690
      nextln:   v692 = bool.icmp.i64.eq v687, v691
      nextln:   v693 = i64.lshr v687, 0x30
      nextln:   v694 = i16.trunc.i64 v693
      nextln:   v695 = bool.icmp.i16.eq v694, 0x0
      nextln:   v696 = bool.bitwise_not v695
      nextln:   jumpif v696, addr_0_block_176, addr_0_block_177
      check: addr_0_block_176: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_177: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_178(v1332: i52, v1333: int, v1334: bool, v1335: bool): // preds: addr_0_block_177
      nextln:   v1336 = i52.trunc.i64 v687
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1336, 0x1, 0x0)
      check: addr_0_block_179(v697: i3, v698: i1, v699: i1, v700: i1, v701: i1, v702: i4, v703: i1, v704: bool, v705: int, v706: int, v707: bool, v708: bool, v709: i8, v710: i8, v711: i52, v712: i1, v713: bool, v714: bool, v715: int, v716: i1, v717: bool, v718: i4, v719: i2, v720: i4, v721: i8, v722: i8, v723: i2, v724: i2, v725: bool, v726: i2, v727: i2, v728: bool, v729: bool, v730: bool, v731: bool, v732: i52, v733: i1, v734: i64, v735: i1, v736: i8, v737: i8, v738: i52, v739: i1, v740: bool, v741: bool, v742: int, v743: i1, v744: bool, v745: i4, v746: i2, v747: i4, v748: i8, v749: i8, v750: i2, v751: i2, v752: bool, v753: i2, v754: i2, v755: bool, v756: bool, v757: bool, v758: bool, v759: i52, v760: i1, v761: i64): // preds: addr_0_block_176 addr_0_block_178
      nextln:   v762 = bool.icmp.i8.ne v736, 0x0
      nextln:   v763 = bool.bitwise_not v762
      nextln:   v764 = bool.bitwise_not v9
      nextln:   v765 = bool.and v764, 0x1
      nextln:   v766 = bool.or v765, 0x0
      nextln:   v767 = bool.icmp.i8.ne v736, 0x0
      nextln:   v768 = bool.bitwise_not v767
      nextln:   v769 = bool.and v766, v768
      nextln:   v770 = bool.icmp.i8.eq v748, 0x1
      nextln:   v771 = bool.and v769, v770
      nextln:   jumpif v771, addr_0_block_180, addr_0_block_181
      check: addr_0_block_180: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_181: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_182: // preds: addr_0_block_180 addr_0_block_181
      nextln:   v772 = bool.icmp.i8.ne v736, 0x0
      nextln:   v773 = bool.bitwise_not v772
      nextln:   v774 = bool.icmp.i8.ne v736, 0x0
      nextln:   v775 = bool.bitwise_not v774
      nextln:   v776 = bool.icmp.i8.eq v748, 0x1
      nextln:   v777 = bool.and v775, v776
      nextln:   jumpif v707, addr_0_block_183, addr_0_block_184
      check: addr_0_block_183: // preds: addr_0_block_182
      nextln:   v778 = bool.icmp.i8.eq v736, 0x0
      nextln:   jump addr_0_block_185(0x1)
      check: addr_0_block_184: // preds: addr_0_block_182
      nextln:   jump addr_0_block_185(0x0)
      check: addr_0_block_185(v779: bool): // preds: addr_0_block_183 addr_0_block_184
      nextln:   v780 = bool.icmp.i8.eq v736, 0x0
      nextln:   v781 = bool.and v708, v780
      nextln:   jumpif v781, addr_0_block_186, addr_0_block_187
      check: addr_0_block_186: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x1, 0x1)
      check: addr_0_block_187: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x0, 0x0)
      check: addr_0_block_188(v782: bool, v783: bool): // preds: addr_0_block_186 addr_0_block_187
      nextln:   v784 = bool.or v779, v782
      nextln:   jumpif v784, addr_0_block_189, addr_0_block_202
      check: addr_0_block_189: // preds: addr_0_block_188
      nextln:   v785 = i52.unsigned_from_bits v732
      nextln:   v786 = int.modulo v785, 0x8
      nextln:   v787 = int.sub v785, v786
      nextln:   v788 = i52.to_bits v787
      nextln:   v789 = bool.icmp.i52.eq v732, v788
      nextln:   v790 = i64.load v732
      nextln:   jumpif v779, addr_0_block_190, addr_0_block_191
      nextln:   jump addr_0_block_203(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v790, v709, v710, v711, v712, v713, v714, v715, v716, v717, v718, v719, v720, v721, v722, v723, v724, v725, v726, v727, v728, v729, v730, v731, v732, v733, v734, 0x0, 0x0)
      check: addr_0_block_190: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_191: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_192: // preds: addr_0_block_190 addr_0_block_191
      nextln:   jumpif v782, addr_0_block_193, addr_0_block_194
      check: addr_0_block_193: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_194: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_195: // preds: addr_0_block_193 addr_0_block_194
      nextln:   v1401 = i52.unsigned_from_bits v732
      nextln:   v1402 = int.modulo v1401, 0x8
      nextln:   v1403 = int.sub v1401, v1402
      nextln:   v1404 = i52.to_bits v1403
      nextln:   v1405 = bool.icmp.i52.eq v732, v1404
      nextln:   v1406 = bool.icmp.i52.eq v732, 0x13000000
      nextln:   jumpif v1406, addr_0_block_196, addr_0_block_200
      check: addr_0_block_196: // preds: addr_0_block_195
      nextln:   v1407 = i64.unsigned_from_bits v790
      nextln:   v1408 = bool.icmp.int.eq v1407, 0x4
      nextln:   jumpif v1408, addr_0_block_197, addr_0_block_198
      nextln:   jump addr_0_block_201
      check: addr_0_block_197: // no preds!
      nextln:   jump addr_0_block_199
      check: addr_0_block_198: // no preds!
      nextln:   v1409 = i8.trunc.i64 v790
      nextln:   v1410 = i8.unsigned_from_bits v1409
      nextln:   jump addr_0_block_199
      check: addr_0_block_199: // preds: addr_0_block_197 addr_0_block_198
      check: addr_0_block_200: // preds: addr_0_block_195
      nextln:   store.i64 v790, v732
      nextln:   jump addr_0_block_201
      check: addr_0_block_201: // preds: addr_0_block_196 addr_0_block_200
      check: addr_0_block_202: // preds: addr_0_block_188
      nextln:   jump addr_0_block_203(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_203(v791: i8, v792: i1, v793: i16, v794: i8, v795: bool, v796: bool, v797: bool, v798: int, v799: i64, v800: i8, v801: i8, v802: i52, v803: i1, v804: bool, v805: bool, v806: int, v807: i1, v808: bool, v809: i4, v810: i2, v811: i4, v812: i8, v813: i8, v814: i2, v815: i2, v816: bool, v817: i2, v818: i2, v819: bool, v820: bool, v821: bool, v822: bool, v823: i52, v824: i1, v825: i64, v826: i2, v827: bool): // preds: addr_0_block_189 addr_0_block_202
      nextln:   v828 = bool.icmp.i8.ne v736, 0x0
      nextln:   v829 = bool.bitwise_not v828
      nextln:   v830 = bool.and v829, 0x1
      nextln:   v831 = bool.icmp.i8.ne v736, 0x0
      nextln:   v832 = bool.bitwise_not v831
      nextln:   v833 = bool.and 0x1, v832
      nextln:   jumpif v833, addr_0_block_204, addr_0_block_205
      check: addr_0_block_204: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_205: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_206: // preds: addr_0_block_204 addr_0_block_205
      nextln:   v834 = bool.icmp.i8.ne v736, 0x0
      nextln:   jumpif v834, addr_0_block_207, addr_0_block_208
      check: addr_0_block_207: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_208: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_209: // preds: addr_0_block_207 addr_0_block_208
      nextln:   jumpif v757, addr_0_block_210, addr_0_block_211
      check: addr_0_block_210: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_211: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_212: // preds: addr_0_block_210 addr_0_block_211
      nextln:   v835 = i52.unsigned_from_bits v759
      nextln:   v836 = int.modulo v835, 0x1
      nextln:   v837 = int.sub v835, v836
      nextln:   v838 = i52.to_bits v837
      nextln:   v839 = bool.icmp.i52.eq v759, v838
      nextln:   v840 = bool.icmp.i52.eq v759, 0x13000000
      nextln:   jumpif v840, addr_0_block_213, addr_0_block_217
      check: addr_0_block_213: // preds: addr_0_block_212
      nextln:   v841 = i8.unsigned_from_bits v686
      nextln:   v842 = bool.icmp.int.eq v841, 0x4
      nextln:   jumpif v842, addr_0_block_214, addr_0_block_215
      nextln:   jump addr_0_block_218
      check: addr_0_block_214: // no preds!
      nextln:   jump addr_0_block_216
      check: addr_0_block_215: // no preds!
      nextln:   v1411 = i8.unsigned_from_bits v686
      nextln:   jump addr_0_block_216
      check: addr_0_block_216: // preds: addr_0_block_214 addr_0_block_215
      check: addr_0_block_217: // preds: addr_0_block_212
      nextln:   store.i8 v686, v759
      nextln:   jump addr_0_block_218
      check: addr_0_block_218: // preds: addr_0_block_213 addr_0_block_217
      nextln:   v843 = i64.lshr v2, 0x28
      nextln:   v844 = i8.trunc.i64 v843
      nextln:   v845 = i64.wrapping_add v4, 0x5
      nextln:   v846 = i64.unsigned_from_bits v845
      nextln:   v847 = int.modulo v846, 0x1
      nextln:   v848 = int.sub v846, v847
      nextln:   v849 = i64.to_bits v848
      nextln:   v850 = bool.icmp.i64.eq v845, v849
      nextln:   v851 = i64.lshr v845, 0x30
      nextln:   v852 = i16.trunc.i64 v851
      nextln:   v853 = bool.icmp.i16.eq v852, 0x0
      nextln:   v854 = bool.bitwise_not v853
      nextln:   jumpif v854, addr_0_block_219, addr_0_block_220
      check: addr_0_block_219: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_220: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_221(v1327: i52, v1328: int, v1329: bool, v1330: bool): // preds: addr_0_block_220
      nextln:   v1331 = i52.trunc.i64 v845
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1331, 0x1, 0x0)
      check: addr_0_block_222(v855: i3, v856: i1, v857: i1, v858: i1, v859: i1, v860: i4, v861: i1, v862: bool, v863: int, v864: int, v865: bool, v866: bool, v867: i8, v868: i8, v869: i52, v870: i1, v871: bool, v872: bool, v873: int, v874: i1, v875: bool, v876: i4, v877: i2, v878: i4, v879: i8, v880: i8, v881: i2, v882: i2, v883: bool, v884: i2, v885: i2, v886: bool, v887: bool, v888: bool, v889: bool, v890: i52, v891: i1, v892: i64, v893: i1, v894: i8, v895: i8, v896: i52, v897: i1, v898: bool, v899: bool, v900: int, v901: i1, v902: bool, v903: i4, v904: i2, v905: i4, v906: i8, v907: i8, v908: i2, v909: i2, v910: bool, v911: i2, v912: i2, v913: bool, v914: bool, v915: bool, v916: bool, v917: i52, v918: i1, v919: i64): // preds: addr_0_block_219 addr_0_block_221
      nextln:   v920 = bool.icmp.i8.ne v894, 0x0
      nextln:   v921 = bool.bitwise_not v920
      nextln:   v922 = bool.bitwise_not v9
      nextln:   v923 = bool.and v922, 0x1
      nextln:   v924 = bool.or v923, 0x0
      nextln:   v925 = bool.icmp.i8.ne v894, 0x0
      nextln:   v926 = bool.bitwise_not v925
      nextln:   v927 = bool.and v924, v926
      nextln:   v928 = bool.icmp.i8.eq v906, 0x1
      nextln:   v929 = bool.and v927, v928
      nextln:   jumpif v929, addr_0_block_223, addr_0_block_224
      check: addr_0_block_223: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_224: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_225: // preds: addr_0_block_223 addr_0_block_224
      nextln:   v930 = bool.icmp.i8.ne v894, 0x0
      nextln:   v931 = bool.bitwise_not v930
      nextln:   v932 = bool.icmp.i8.ne v894, 0x0
      nextln:   v933 = bool.bitwise_not v932
      nextln:   v934 = bool.icmp.i8.eq v906, 0x1
      nextln:   v935 = bool.and v933, v934
      nextln:   jumpif v865, addr_0_block_226, addr_0_block_227
      check: addr_0_block_226: // preds: addr_0_block_225
      nextln:   v936 = bool.icmp.i8.eq v894, 0x0
      nextln:   jump addr_0_block_228(0x1)
      check: addr_0_block_227: // preds: addr_0_block_225
      nextln:   jump addr_0_block_228(0x0)
      check: addr_0_block_228(v937: bool): // preds: addr_0_block_226 addr_0_block_227
      nextln:   v938 = bool.icmp.i8.eq v894, 0x0
      nextln:   v939 = bool.and v866, v938
      nextln:   jumpif v939, addr_0_block_229, addr_0_block_230
      check: addr_0_block_229: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x1, 0x1)
      check: addr_0_block_230: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x0, 0x0)
      check: addr_0_block_231(v940: bool, v941: bool): // preds: addr_0_block_229 addr_0_block_230
      nextln:   v942 = bool.or v937, v940
      nextln:   jumpif v942, addr_0_block_232, addr_0_block_245
      check: addr_0_block_232: // preds: addr_0_block_231
      nextln:   v943 = i52.unsigned_from_bits v890
      nextln:   v944 = int.modulo v943, 0x8
      nextln:   v945 = int.sub v943, v944
      nextln:   v946 = i52.to_bits v945
      nextln:   v947 = bool.icmp.i52.eq v890, v946
      nextln:   v948 = i64.load v890
      nextln:   jumpif v937, addr_0_block_233, addr_0_block_234
      nextln:   jump addr_0_block_246(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v948, v867, v868, v869, v870, v871, v872, v873, v874, v875, v876, v877, v878, v879, v880, v881, v882, v883, v884, v885, v886, v887, v888, v889, v890, v891, v892, 0x0, 0x0)
      check: addr_0_block_233: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_234: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_235: // preds: addr_0_block_233 addr_0_block_234
      nextln:   jumpif v940, addr_0_block_236, addr_0_block_237
      check: addr_0_block_236: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_237: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_238: // preds: addr_0_block_236 addr_0_block_237
      nextln:   v1412 = i52.unsigned_from_bits v890
      nextln:   v1413 = int.modulo v1412, 0x8
      nextln:   v1414 = int.sub v1412, v1413
      nextln:   v1415 = i52.to_bits v1414
      nextln:   v1416 = bool.icmp.i52.eq v890, v1415
      nextln:   v1417 = bool.icmp.i52.eq v890, 0x13000000
      nextln:   jumpif v1417, addr_0_block_239, addr_0_block_243
      check: addr_0_block_239: // preds: addr_0_block_238
      nextln:   v1418 = i64.unsigned_from_bits v948
      nextln:   v1419 = bool.icmp.int.eq v1418, 0x4
      nextln:   jumpif v1419, addr_0_block_240, addr_0_block_241
      nextln:   jump addr_0_block_244
      check: addr_0_block_240: // no preds!
      nextln:   jump addr_0_block_242
      check: addr_0_block_241: // no preds!
      nextln:   v1420 = i8.trunc.i64 v948
      nextln:   v1421 = i8.unsigned_from_bits v1420
      nextln:   jump addr_0_block_242
      check: addr_0_block_242: // preds: addr_0_block_240 addr_0_block_241
      check: addr_0_block_243: // preds: addr_0_block_238
      nextln:   store.i64 v948, v890
      nextln:   jump addr_0_block_244
      check: addr_0_block_244: // preds: addr_0_block_239 addr_0_block_243
      check: addr_0_block_245: // preds: addr_0_block_231
      nextln:   jump addr_0_block_246(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_246(v949: i8, v950: i1, v951: i16, v952: i8, v953: bool, v954: bool, v955: bool, v956: int, v957: i64, v958: i8, v959: i8, v960: i52, v961: i1, v962: bool, v963: bool, v964: int, v965: i1, v966: bool, v967: i4, v968: i2, v969: i4, v970: i8, v971: i8, v972: i2, v973: i2, v974: bool, v975: i2, v976: i2, v977: bool, v978: bool, v979: bool, v980: bool, v981: i52, v982: i1, v983: i64, v984: i2, v985: bool): // preds: addr_0_block_232 addr_0_block_245
      nextln:   v986 = bool.icmp.i8.ne v894, 0x0
      nextln:   v987 = bool.bitwise_not v986
      nextln:   v988 = bool.and v987, 0x1
      nextln:   v989 = bool.icmp.i8.ne v894, 0x0
      nextln:   v990 = bool.bitwise_not v989
      nextln:   v991 = bool.and 0x1, v990
      nextln:   jumpif v991, addr_0_block_247, addr_0_block_248
      check: addr_0_block_247: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_248: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_249: // preds: addr_0_block_247 addr_0_block_248
      nextln:   v992 = bool.icmp.i8.ne v894, 0x0
      nextln:   jumpif v992, addr_0_block_250, addr_0_block_251
      check: addr_0_block_250: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_251: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_252: // preds: addr_0_block_250 addr_0_block_251
      nextln:   jumpif v915, addr_0_block_253, addr_0_block_254
      check: addr_0_block_253: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_254: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_255: // preds: addr_0_block_253 addr_0_block_254
      nextln:   v993 = i52.unsigned_from_bits v917
      nextln:   v994 = int.modulo v993, 0x1
      nextln:   v995 = int.sub v993, v994
      nextln:   v996 = i52.to_bits v995
      nextln:   v997 = bool.icmp.i52.eq v917, v996
      nextln:   v998 = bool.icmp.i52.eq v917, 0x13000000
      nextln:   jumpif v998, addr_0_block_256, addr_0_block_260
      check: addr_0_block_256: // preds: addr_0_block_255
      nextln:   v999 = i8.unsigned_from_bits v844
      nextln:   v1000 = bool.icmp.int.eq v999, 0x4
      nextln:   jumpif v1000, addr_0_block_257, addr_0_block_258
      nextln:   jump addr_0_block_261
      check: addr_0_block_257: // no preds!
      nextln:   jump addr_0_block_259
      check: addr_0_block_258: // no preds!
      nextln:   v1422 = i8.unsigned_from_bits v844
      nextln:   jump addr_0_block_259
      check: addr_0_block_259: // preds: addr_0_block_257 addr_0_block_258
      check: addr_0_block_260: // preds: addr_0_block_255
      nextln:   store.i8 v844, v917
      nextln:   jump addr_0_block_261
      check: addr_0_block_261: // preds: addr_0_block_256 addr_0_block_260
      nextln:   v1001 = i64.lshr v2, 0x30
      nextln:   v1002 = i8.trunc.i64 v1001
      nextln:   v1003 = i64.wrapping_add v4, 0x6
      nextln:   v1004 = i64.unsigned_from_bits v1003
      nextln:   v1005 = int.modulo v1004, 0x1
      nextln:   v1006 = int.sub v1004, v1005
      nextln:   v1007 = i64.to_bits v1006
      nextln:   v1008 = bool.icmp.i64.eq v1003, v1007
      nextln:   v1009 = i64.lshr v1003, 0x30
      nextln:   v1010 = i16.trunc.i64 v1009
      nextln:   v1011 = bool.icmp.i16.eq v1010, 0x0
      nextln:   v1012 = bool.bitwise_not v1011
      nextln:   jumpif v1012, addr_0_block_262, addr_0_block_263
      check: addr_0_block_262: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_263: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_264(v1322: i52, v1323: int, v1324: bool, v1325: bool): // preds: addr_0_block_263
      nextln:   v1326 = i52.trunc.i64 v1003
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1326, 0x1, 0x0)
      check: addr_0_block_265(v1013: i3, v1014: i1, v1015: i1, v1016: i1, v1017: i1, v1018: i4, v1019: i1, v1020: bool, v1021: int, v1022: int, v1023: bool, v1024: bool, v1025: i8, v1026: i8, v1027: i52, v1028: i1, v1029: bool, v1030: bool, v1031: int, v1032: i1, v1033: bool, v1034: i4, v1035: i2, v1036: i4, v1037: i8, v1038: i8, v1039: i2, v1040: i2, v1041: bool, v1042: i2, v1043: i2, v1044: bool, v1045: bool, v1046: bool, v1047: bool, v1048: i52, v1049: i1, v1050: i64, v1051: i1, v1052: i8, v1053: i8, v1054: i52, v1055: i1, v1056: bool, v1057: bool, v1058: int, v1059: i1, v1060: bool, v1061: i4, v1062: i2, v1063: i4, v1064: i8, v1065: i8, v1066: i2, v1067: i2, v1068: bool, v1069: i2, v1070: i2, v1071: bool, v1072: bool, v1073: bool, v1074: bool, v1075: i52, v1076: i1, v1077: i64): // preds: addr_0_block_262 addr_0_block_264
      nextln:   v1078 = bool.icmp.i8.ne v1052, 0x0
      nextln:   v1079 = bool.bitwise_not v1078
      nextln:   v1080 = bool.bitwise_not v9
      nextln:   v1081 = bool.and v1080, 0x1
      nextln:   v1082 = bool.or v1081, 0x0
      nextln:   v1083 = bool.icmp.i8.ne v1052, 0x0
      nextln:   v1084 = bool.bitwise_not v1083
      nextln:   v1085 = bool.and v1082, v1084
      nextln:   v1086 = bool.icmp.i8.eq v1064, 0x1
      nextln:   v1087 = bool.and v1085, v1086
      nextln:   jumpif v1087, addr_0_block_266, addr_0_block_267
      check: addr_0_block_266: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_267: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_268: // preds: addr_0_block_266 addr_0_block_267
      nextln:   v1088 = bool.icmp.i8.ne v1052, 0x0
      nextln:   v1089 = bool.bitwise_not v1088
      nextln:   v1090 = bool.icmp.i8.ne v1052, 0x0
      nextln:   v1091 = bool.bitwise_not v1090
      nextln:   v1092 = bool.icmp.i8.eq v1064, 0x1
      nextln:   v1093 = bool.and v1091, v1092
      nextln:   jumpif v1023, addr_0_block_269, addr_0_block_270
      check: addr_0_block_269: // preds: addr_0_block_268
      nextln:   v1094 = bool.icmp.i8.eq v1052, 0x0
      nextln:   jump addr_0_block_271(0x1)
      check: addr_0_block_270: // preds: addr_0_block_268
      nextln:   jump addr_0_block_271(0x0)
      check: addr_0_block_271(v1095: bool): // preds: addr_0_block_269 addr_0_block_270
      nextln:   v1096 = bool.icmp.i8.eq v1052, 0x0
      nextln:   v1097 = bool.and v1024, v1096
      nextln:   jumpif v1097, addr_0_block_272, addr_0_block_273
      check: addr_0_block_272: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x1, 0x1)
      check: addr_0_block_273: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x0, 0x0)
      check: addr_0_block_274(v1098: bool, v1099: bool): // preds: addr_0_block_272 addr_0_block_273
      nextln:   v1100 = bool.or v1095, v1098
      nextln:   jumpif v1100, addr_0_block_275, addr_0_block_288
      check: addr_0_block_275: // preds: addr_0_block_274
      nextln:   v1101 = i52.unsigned_from_bits v1048
      nextln:   v1102 = int.modulo v1101, 0x8
      nextln:   v1103 = int.sub v1101, v1102
      nextln:   v1104 = i52.to_bits v1103
      nextln:   v1105 = bool.icmp.i52.eq v1048, v1104
      nextln:   v1106 = i64.load v1048
      nextln:   jumpif v1095, addr_0_block_276, addr_0_block_277
      nextln:   jump addr_0_block_289(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1106, v1025, v1026, v1027, v1028, v1029, v1030, v1031, v1032, v1033, v1034, v1035, v1036, v1037, v1038, v1039, v1040, v1041, v1042, v1043, v1044, v1045, v1046, v1047, v1048, v1049, v1050, 0x0, 0x0)
      check: addr_0_block_276: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_277: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_278: // preds: addr_0_block_276 addr_0_block_277
      nextln:   jumpif v1098, addr_0_block_279, addr_0_block_280
      check: addr_0_block_279: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_280: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_281: // preds: addr_0_block_279 addr_0_block_280
      nextln:   v1423 = i52.unsigned_from_bits v1048
      nextln:   v1424 = int.modulo v1423, 0x8
      nextln:   v1425 = int.sub v1423, v1424
      nextln:   v1426 = i52.to_bits v1425
      nextln:   v1427 = bool.icmp.i52.eq v1048, v1426
      nextln:   v1428 = bool.icmp.i52.eq v1048, 0x13000000
      nextln:   jumpif v1428, addr_0_block_282, addr_0_block_286
      check: addr_0_block_282: // preds: addr_0_block_281
      nextln:   v1429 = i64.unsigned_from_bits v1106
      nextln:   v1430 = bool.icmp.int.eq v1429, 0x4
      nextln:   jumpif v1430, addr_0_block_283, addr_0_block_284
      nextln:   jump addr_0_block_287
      check: addr_0_block_283: // no preds!
      nextln:   jump addr_0_block_285
      check: addr_0_block_284: // no preds!
      nextln:   v1431 = i8.trunc.i64 v1106
      nextln:   v1432 = i8.unsigned_from_bits v1431
      nextln:   jump addr_0_block_285
      check: addr_0_block_285: // preds: addr_0_block_283 addr_0_block_284
      check: addr_0_block_286: // preds: addr_0_block_281
      nextln:   store.i64 v1106, v1048
      nextln:   jump addr_0_block_287
      check: addr_0_block_287: // preds: addr_0_block_282 addr_0_block_286
      check: addr_0_block_288: // preds: addr_0_block_274
      nextln:   jump addr_0_block_289(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_289(v1107: i8, v1108: i1, v1109: i16, v1110: i8, v1111: bool, v1112: bool, v1113: bool, v1114: int, v1115: i64, v1116: i8, v1117: i8, v1118: i52, v1119: i1, v1120: bool, v1121: bool, v1122: int, v1123: i1, v1124: bool, v1125: i4, v1126: i2, v1127: i4, v1128: i8, v1129: i8, v1130: i2, v1131: i2, v1132: bool, v1133: i2, v1134: i2, v1135: bool, v1136: bool, v1137: bool, v1138: bool, v1139: i52, v1140: i1, v1141: i64, v1142: i2, v1143: bool): // preds: addr_0_block_275 addr_0_block_288
      nextln:   v1144 = bool.icmp.i8.ne v1052, 0x0
      nextln:   v1145 = bool.bitwise_not v1144
      nextln:   v1146 = bool.and v1145, 0x1
      nextln:   v1147 = bool.icmp.i8.ne v1052, 0x0
      nextln:   v1148 = bool.bitwise_not v1147
      nextln:   v1149 = bool.and 0x1, v1148
      nextln:   jumpif v1149, addr_0_block_290, addr_0_block_291
      check: addr_0_block_290: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_291: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_292: // preds: addr_0_block_290 addr_0_block_291
      nextln:   v1150 = bool.icmp.i8.ne v1052, 0x0
      nextln:   jumpif v1150, addr_0_block_293, addr_0_block_294
      check: addr_0_block_293: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_294: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_295: // preds: addr_0_block_293 addr_0_block_294
      nextln:   jumpif v1073, addr_0_block_296, addr_0_block_297
      check: addr_0_block_296: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_297: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_298: // preds: addr_0_block_296 addr_0_block_297
      nextln:   v1151 = i52.unsigned_from_bits v1075
      nextln:   v1152 = int.modulo v1151, 0x1
      nextln:   v1153 = int.sub v1151, v1152
      nextln:   v1154 = i52.to_bits v1153
      nextln:   v1155 = bool.icmp.i52.eq v1075, v1154
      nextln:   v1156 = bool.icmp.i52.eq v1075, 0x13000000
      nextln:   jumpif v1156, addr_0_block_299, addr_0_block_303
      check: addr_0_block_299: // preds: addr_0_block_298
      nextln:   v1157 = i8.unsigned_from_bits v1002
      nextln:   v1158 = bool.icmp.int.eq v1157, 0x4
      nextln:   jumpif v1158, addr_0_block_300, addr_0_block_301
      nextln:   jump addr_0_block_304
      check: addr_0_block_300: // no preds!
      nextln:   jump addr_0_block_302
      check: addr_0_block_301: // no preds!
      nextln:   v1433 = i8.unsigned_from_bits v1002
      nextln:   jump addr_0_block_302
      check: addr_0_block_302: // preds: addr_0_block_300 addr_0_block_301
      check: addr_0_block_303: // preds: addr_0_block_298
      nextln:   store.i8 v1002, v1075
      nextln:   jump addr_0_block_304
      check: addr_0_block_304: // preds: addr_0_block_299 addr_0_block_303
      nextln:   v1159 = i64.lshr v2, 0x38
      nextln:   v1160 = i8.trunc.i64 v1159
      nextln:   v1161 = i64.wrapping_add v4, 0x7
      nextln:   v1162 = i64.unsigned_from_bits v1161
      nextln:   v1163 = int.modulo v1162, 0x1
      nextln:   v1164 = int.sub v1162, v1163
      nextln:   v1165 = i64.to_bits v1164
      nextln:   v1166 = bool.icmp.i64.eq v1161, v1165
      nextln:   v1167 = i64.lshr v1161, 0x30
      nextln:   v1168 = i16.trunc.i64 v1167
      nextln:   v1169 = bool.icmp.i16.eq v1168, 0x0
      nextln:   v1170 = bool.bitwise_not v1169
      nextln:   jumpif v1170, addr_0_block_305, addr_0_block_306
      check: addr_0_block_305: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_306: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_307(v1317: i52, v1318: int, v1319: bool, v1320: bool): // preds: addr_0_block_306
      nextln:   v1321 = i52.trunc.i64 v1161
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1321, 0x1, 0x0)
      check: addr_0_block_308(v1171: i3, v1172: i1, v1173: i1, v1174: i1, v1175: i1, v1176: i4, v1177: i1, v1178: bool, v1179: int, v1180: int, v1181: bool, v1182: bool, v1183: i8, v1184: i8, v1185: i52, v1186: i1, v1187: bool, v1188: bool, v1189: int, v1190: i1, v1191: bool, v1192: i4, v1193: i2, v1194: i4, v1195: i8, v1196: i8, v1197: i2, v1198: i2, v1199: bool, v1200: i2, v1201: i2, v1202: bool, v1203: bool, v1204: bool, v1205: bool, v1206: i52, v1207: i1, v1208: i64, v1209: i1, v1210: i8, v1211: i8, v1212: i52, v1213: i1, v1214: bool, v1215: bool, v1216: int, v1217: i1, v1218: bool, v1219: i4, v1220: i2, v1221: i4, v1222: i8, v1223: i8, v1224: i2, v1225: i2, v1226: bool, v1227: i2, v1228: i2, v1229: bool, v1230: bool, v1231: bool, v1232: bool, v1233: i52, v1234: i1, v1235: i64): // preds: addr_0_block_305 addr_0_block_307
      nextln:   v1236 = bool.icmp.i8.ne v1210, 0x0
      nextln:   v1237 = bool.bitwise_not v1236
      nextln:   v1238 = bool.bitwise_not v9
      nextln:   v1239 = bool.and v1238, 0x1
      nextln:   v1240 = bool.or v1239, 0x0
      nextln:   v1241 = bool.icmp.i8.ne v1210, 0x0
      nextln:   v1242 = bool.bitwise_not v1241
      nextln:   v1243 = bool.and v1240, v1242
      nextln:   v1244 = bool.icmp.i8.eq v1222, 0x1
      nextln:   v1245 = bool.and v1243, v1244
      nextln:   jumpif v1245, addr_0_block_309, addr_0_block_310
      check: addr_0_block_309: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_310: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_311: // preds: addr_0_block_309 addr_0_block_310
      nextln:   v1246 = bool.icmp.i8.ne v1210, 0x0
      nextln:   v1247 = bool.bitwise_not v1246
      nextln:   v1248 = bool.icmp.i8.ne v1210, 0x0
      nextln:   v1249 = bool.bitwise_not v1248
      nextln:   v1250 = bool.icmp.i8.eq v1222, 0x1
      nextln:   v1251 = bool.and v1249, v1250
      nextln:   jumpif v1181, addr_0_block_312, addr_0_block_313
      check: addr_0_block_312: // preds: addr_0_block_311
      nextln:   v1252 = bool.icmp.i8.eq v1210, 0x0
      nextln:   jump addr_0_block_314(0x1)
      check: addr_0_block_313: // preds: addr_0_block_311
      nextln:   jump addr_0_block_314(0x0)
      check: addr_0_block_314(v1253: bool): // preds: addr_0_block_312 addr_0_block_313
      nextln:   v1254 = bool.icmp.i8.eq v1210, 0x0
      nextln:   v1255 = bool.and v1182, v1254
      nextln:   jumpif v1255, addr_0_block_315, addr_0_block_316
      check: addr_0_block_315: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x1, 0x1)
      check: addr_0_block_316: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x0, 0x0)
      check: addr_0_block_317(v1256: bool, v1257: bool): // preds: addr_0_block_315 addr_0_block_316
      nextln:   v1258 = bool.or v1253, v1256
      nextln:   jumpif v1258, addr_0_block_318, addr_0_block_331
      check: addr_0_block_318: // preds: addr_0_block_317
      nextln:   v1259 = i52.unsigned_from_bits v1206
      nextln:   v1260 = int.modulo v1259, 0x8
      nextln:   v1261 = int.sub v1259, v1260
      nextln:   v1262 = i52.to_bits v1261
      nextln:   v1263 = bool.icmp.i52.eq v1206, v1262
      nextln:   v1264 = i64.load v1206
      nextln:   jumpif v1253, addr_0_block_319, addr_0_block_320
      nextln:   jump addr_0_block_332(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1264, v1183, v1184, v1185, v1186, v1187, v1188, v1189, v1190, v1191, v1192, v1193, v1194, v1195, v1196, v1197, v1198, v1199, v1200, v1201, v1202, v1203, v1204, v1205, v1206, v1207, v1208, 0x0, 0x0)
      check: addr_0_block_319: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_320: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_321: // preds: addr_0_block_319 addr_0_block_320
      nextln:   jumpif v1256, addr_0_block_322, addr_0_block_323
      check: addr_0_block_322: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_323: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_324: // preds: addr_0_block_322 addr_0_block_323
      nextln:   v1434 = i52.unsigned_from_bits v1206
      nextln:   v1435 = int.modulo v1434, 0x8
      nextln:   v1436 = int.sub v1434, v1435
      nextln:   v1437 = i52.to_bits v1436
      nextln:   v1438 = bool.icmp.i52.eq v1206, v1437
      nextln:   v1439 = bool.icmp.i52.eq v1206, 0x13000000
      nextln:   jumpif v1439, addr_0_block_325, addr_0_block_329
      check: addr_0_block_325: // preds: addr_0_block_324
      nextln:   v1440 = i64.unsigned_from_bits v1264
      nextln:   v1441 = bool.icmp.int.eq v1440, 0x4
      nextln:   jumpif v1441, addr_0_block_326, addr_0_block_327
      nextln:   jump addr_0_block_330
      check: addr_0_block_326: // no preds!
      nextln:   jump addr_0_block_328
      check: addr_0_block_327: // no preds!
      nextln:   v1442 = i8.trunc.i64 v1264
      nextln:   v1443 = i8.unsigned_from_bits v1442
      nextln:   jump addr_0_block_328
      check: addr_0_block_328: // preds: addr_0_block_326 addr_0_block_327
      check: addr_0_block_329: // preds: addr_0_block_324
      nextln:   store.i64 v1264, v1206
      nextln:   jump addr_0_block_330
      check: addr_0_block_330: // preds: addr_0_block_325 addr_0_block_329
      check: addr_0_block_331: // preds: addr_0_block_317
      nextln:   jump addr_0_block_332(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_332(v1265: i8, v1266: i1, v1267: i16, v1268: i8, v1269: bool, v1270: bool, v1271: bool, v1272: int, v1273: i64, v1274: i8, v1275: i8, v1276: i52, v1277: i1, v1278: bool, v1279: bool, v1280: int, v1281: i1, v1282: bool, v1283: i4, v1284: i2, v1285: i4, v1286: i8, v1287: i8, v1288: i2, v1289: i2, v1290: bool, v1291: i2, v1292: i2, v1293: bool, v1294: bool, v1295: bool, v1296: bool, v1297: i52, v1298: i1, v1299: i64, v1300: i2, v1301: bool): // preds: addr_0_block_318 addr_0_block_331
      nextln:   v1302 = bool.icmp.i8.ne v1210, 0x0
      nextln:   v1303 = bool.bitwise_not v1302
      nextln:   v1304 = bool.and v1303, 0x1
      nextln:   v1305 = bool.icmp.i8.ne v1210, 0x0
      nextln:   v1306 = bool.bitwise_not v1305
      nextln:   v1307 = bool.and 0x1, v1306
      nextln:   jumpif v1307, addr_0_block_333, addr_0_block_334
      check: addr_0_block_333: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_334: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_335: // preds: addr_0_block_333 addr_0_block_334
      nextln:   v1308 = bool.icmp.i8.ne v1210, 0x0
      nextln:   jumpif v1308, addr_0_block_336, addr_0_block_337
      check: addr_0_block_336: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_337: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_338: // preds: addr_0_block_336 addr_0_block_337
      nextln:   jumpif v1231, addr_0_block_339, addr_0_block_340
      check: addr_0_block_339: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_340: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_341: // preds: addr_0_block_339 addr_0_block_340
      nextln:   v1309 = i52.unsigned_from_bits v1233
      nextln:   v1310 = int.modulo v1309, 0x1
      nextln:   v1311 = int.sub v1309, v1310
      nextln:   v1312 = i52.to_bits v1311
      nextln:   v1313 = bool.icmp.i52.eq v1233, v1312
      nextln:   v1314 = bool.icmp.i52.eq v1233, 0x13000000
      nextln:   jumpif v1314, addr_0_block_342, addr_0_block_346
      check: addr_0_block_342: // preds: addr_0_block_341
      nextln:   v1315 = i8.unsigned_from_bits v1160
      nextln:   v1316 = bool.icmp.int.eq v1315, 0x4
      nextln:   jumpif v1316, addr_0_block_343, addr_0_block_344
      nextln:   jump addr_0_block_347
      check: addr_0_block_343: // no preds!
      nextln:   jump addr_0_block_345
      check: addr_0_block_344: // no preds!
      nextln:   v1444 = i8.unsigned_from_bits v1160
      nextln:   jump addr_0_block_345
      check: addr_0_block_345: // preds: addr_0_block_343 addr_0_block_344
      check: addr_0_block_346: // preds: addr_0_block_341
      nextln:   store.i8 v1160, v1233
      nextln:   jump addr_0_block_347
      check: addr_0_block_347: // preds: addr_0_block_342 addr_0_block_346
      check: addr_0_block_348: // preds: entry
      nextln:   v53 = i64.unsigned_from_bits v4
      nextln:   v54 = int.modulo v53, 0x8
      nextln:   v55 = int.sub v53, v54
      nextln:   v56 = i64.to_bits v55
      nextln:   v57 = bool.icmp.i64.eq v4, v56
      nextln:   v58 = i64.lshr v4, 0x30
      nextln:   v59 = i16.trunc.i64 v58
      nextln:   v60 = bool.icmp.i16.eq v59, 0x0
      nextln:   v61 = bool.bitwise_not v60
      nextln:   jumpif v61, addr_0_block_349, addr_0_block_350
      nextln:   jump addr_0_block_392(v9, 0x0)
      check: addr_0_block_349: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_350: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_351(v1591: i52, v1592: int, v1593: bool, v1594: bool): // preds: addr_0_block_350
      nextln:   v1595 = i52.trunc.i64 v4
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1595, 0x1, 0x0)
      check: addr_0_block_352(v1445: i3, v1446: i1, v1447: i1, v1448: i1, v1449: i1, v1450: i4, v1451: i1, v1452: bool, v1453: int, v1454: int, v1455: bool, v1456: bool, v1457: i8, v1458: i8, v1459: i52, v1460: i1, v1461: bool, v1462: bool, v1463: int, v1464: i1, v1465: bool, v1466: i4, v1467: i2, v1468: i4, v1469: i8, v1470: i8, v1471: i2, v1472: i2, v1473: bool, v1474: i2, v1475: i2, v1476: bool, v1477: bool, v1478: bool, v1479: bool, v1480: i52, v1481: i1, v1482: i64, v1483: i1, v1484: i8, v1485: i8, v1486: i52, v1487: i1, v1488: bool, v1489: bool, v1490: int, v1491: i1, v1492: bool, v1493: i4, v1494: i2, v1495: i4, v1496: i8, v1497: i8, v1498: i2, v1499: i2, v1500: bool, v1501: i2, v1502: i2, v1503: bool, v1504: bool, v1505: bool, v1506: bool, v1507: i52, v1508: i1, v1509: i64): // preds: addr_0_block_349 addr_0_block_351
      nextln:   v1510 = bool.icmp.i8.ne v1484, 0x0
      nextln:   v1511 = bool.bitwise_not v1510
      nextln:   v1512 = bool.bitwise_not v9
      nextln:   v1513 = bool.and v1512, 0x1
      nextln:   v1514 = bool.or v1513, 0x0
      nextln:   v1515 = bool.icmp.i8.ne v1484, 0x0
      nextln:   v1516 = bool.bitwise_not v1515
      nextln:   v1517 = bool.and v1514, v1516
      nextln:   v1518 = bool.icmp.i8.eq v1496, 0x1
      nextln:   v1519 = bool.and v1517, v1518
      nextln:   jumpif v1519, addr_0_block_353, addr_0_block_354
      check: addr_0_block_353: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_354: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_355: // preds: addr_0_block_353 addr_0_block_354
      nextln:   v1520 = bool.icmp.i8.ne v1484, 0x0
      nextln:   v1521 = bool.bitwise_not v1520
      nextln:   v1522 = bool.icmp.i8.ne v1484, 0x0
      nextln:   v1523 = bool.bitwise_not v1522
      nextln:   v1524 = bool.icmp.i8.eq v1496, 0x1
      nextln:   v1525 = bool.and v1523, v1524
      nextln:   jumpif v1455, addr_0_block_356, addr_0_block_357
      check: addr_0_block_356: // preds: addr_0_block_355
      nextln:   v1526 = bool.icmp.i8.eq v1484, 0x0
      nextln:   jump addr_0_block_358(0x1)
      check: addr_0_block_357: // preds: addr_0_block_355
      nextln:   jump addr_0_block_358(0x0)
      check: addr_0_block_358(v1527: bool): // preds: addr_0_block_356 addr_0_block_357
      nextln:   v1528 = bool.icmp.i8.eq v1484, 0x0
      nextln:   v1529 = bool.and v1456, v1528
      nextln:   jumpif v1529, addr_0_block_359, addr_0_block_360
      check: addr_0_block_359: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x1, 0x1)
      check: addr_0_block_360: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x0, 0x0)
      check: addr_0_block_361(v1530: bool, v1531: bool): // preds: addr_0_block_359 addr_0_block_360
      nextln:   v1532 = bool.or v1527, v1530
      nextln:   jumpif v1532, addr_0_block_362, addr_0_block_375
      check: addr_0_block_362: // preds: addr_0_block_361
      nextln:   v1533 = i52.unsigned_from_bits v1480
      nextln:   v1534 = int.modulo v1533, 0x8
      nextln:   v1535 = int.sub v1533, v1534
      nextln:   v1536 = i52.to_bits v1535
      nextln:   v1537 = bool.icmp.i52.eq v1480, v1536
      nextln:   v1538 = i64.load v1480
      nextln:   jumpif v1527, addr_0_block_363, addr_0_block_364
      nextln:   jump addr_0_block_376(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1538, v1457, v1458, v1459, v1460, v1461, v1462, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, v1474, v1475, v1476, v1477, v1478, v1479, v1480, v1481, v1482, 0x0, 0x0)
      check: addr_0_block_363: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_364: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_365: // preds: addr_0_block_363 addr_0_block_364
      nextln:   jumpif v1530, addr_0_block_366, addr_0_block_367
      check: addr_0_block_366: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_367: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_368: // preds: addr_0_block_366 addr_0_block_367
      nextln:   v1596 = i52.unsigned_from_bits v1480
      nextln:   v1597 = int.modulo v1596, 0x8
      nextln:   v1598 = int.sub v1596, v1597
      nextln:   v1599 = i52.to_bits v1598
      nextln:   v1600 = bool.icmp.i52.eq v1480, v1599
      nextln:   v1601 = bool.icmp.i52.eq v1480, 0x13000000
      nextln:   jumpif v1601, addr_0_block_369, addr_0_block_373
      check: addr_0_block_369: // preds: addr_0_block_368
      nextln:   v1602 = i64.unsigned_from_bits v1538
      nextln:   v1603 = bool.icmp.int.eq v1602, 0x4
      nextln:   jumpif v1603, addr_0_block_370, addr_0_block_371
      nextln:   jump addr_0_block_374
      check: addr_0_block_370: // no preds!
      nextln:   jump addr_0_block_372
      check: addr_0_block_371: // no preds!
      nextln:   v1604 = i8.trunc.i64 v1538
      nextln:   v1605 = i8.unsigned_from_bits v1604
      nextln:   jump addr_0_block_372
      check: addr_0_block_372: // preds: addr_0_block_370 addr_0_block_371
      check: addr_0_block_373: // preds: addr_0_block_368
      nextln:   store.i64 v1538, v1480
      nextln:   jump addr_0_block_374
      check: addr_0_block_374: // preds: addr_0_block_369 addr_0_block_373
      check: addr_0_block_375: // preds: addr_0_block_361
      nextln:   jump addr_0_block_376(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_376(v1539: i8, v1540: i1, v1541: i16, v1542: i8, v1543: bool, v1544: bool, v1545: bool, v1546: int, v1547: i64, v1548: i8, v1549: i8, v1550: i52, v1551: i1, v1552: bool, v1553: bool, v1554: int, v1555: i1, v1556: bool, v1557: i4, v1558: i2, v1559: i4, v1560: i8, v1561: i8, v1562: i2, v1563: i2, v1564: bool, v1565: i2, v1566: i2, v1567: bool, v1568: bool, v1569: bool, v1570: bool, v1571: i52, v1572: i1, v1573: i64, v1574: i2, v1575: bool): // preds: addr_0_block_362 addr_0_block_375
      nextln:   v1576 = bool.icmp.i8.ne v1484, 0x0
      nextln:   v1577 = bool.bitwise_not v1576
      nextln:   v1578 = bool.and v1577, 0x1
      nextln:   v1579 = bool.icmp.i8.ne v1484, 0x0
      nextln:   v1580 = bool.bitwise_not v1579
      nextln:   v1581 = bool.and 0x1, v1580
      nextln:   jumpif v1581, addr_0_block_377, addr_0_block_378
      check: addr_0_block_377: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_378: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_379: // preds: addr_0_block_377 addr_0_block_378
      nextln:   v1582 = bool.icmp.i8.ne v1484, 0x0
      nextln:   jumpif v1582, addr_0_block_380, addr_0_block_381
      check: addr_0_block_380: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_381: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_382: // preds: addr_0_block_380 addr_0_block_381
      nextln:   jumpif v1505, addr_0_block_383, addr_0_block_384
      check: addr_0_block_383: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_384: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_385: // preds: addr_0_block_383 addr_0_block_384
      nextln:   v1583 = i52.unsigned_from_bits v1507
      nextln:   v1584 = int.modulo v1583, 0x8
      nextln:   v1585 = int.sub v1583, v1584
      nextln:   v1586 = i52.to_bits v1585
      nextln:   v1587 = bool.icmp.i52.eq v1507, v1586
      nextln:   v1588 = bool.icmp.i52.eq v1507, 0x13000000
      nextln:   jumpif v1588, addr_0_block_386, addr_0_block_390
      check: addr_0_block_386: // preds: addr_0_block_385
      nextln:   v1589 = i64.unsigned_from_bits v2
      nextln:   v1590 = bool.icmp.int.eq v1589, 0x4
      nextln:   jumpif v1590, addr_0_block_387, addr_0_block_388
      nextln:   jump addr_0_block_391
      check: addr_0_block_387: // no preds!
      nextln:   jump addr_0_block_389
      check: addr_0_block_388: // no preds!
      nextln:   v1606 = i8.trunc.i64 v2
      nextln:   v1607 = i8.unsigned_from_bits v1606
      nextln:   jump addr_0_block_389
      check: addr_0_block_389: // preds: addr_0_block_387 addr_0_block_388
      check: addr_0_block_390: // preds: addr_0_block_385
      nextln:   store.i64 v2, v1507
      nextln:   jump addr_0_block_391
      check: addr_0_block_391: // preds: addr_0_block_386 addr_0_block_390
      check: addr_0_block_392(v22: i64, v23: i8): // preds: addr_0_block_0 addr_0_block_348
      nextln:   v24 = i64.wrapping_add v1, 0x8
      nextln:   v25 = i64.unsigned_from_bits v24
      nextln:   v26 = int.modulo v25, 0x8
      nextln:   v27 = int.sub v25, v26
      nextln:   v28 = i64.to_bits v27
      nextln:   v29 = bool.icmp.i64.eq v24, v28
      nextln:   v30 = bool.bitwise_not v29
      nextln:   v31 = bool.bitwise_not v29
      nextln:   jumpif v31, addr_0_block_393, addr_0_block_741
      check: addr_0_block_393: // preds: addr_0_block_392
      nextln:   v32 = i8.trunc.i64 v3
      nextln:   v33 = i64.unsigned_from_bits v24
      nextln:   v34 = int.modulo v33, 0x1
      nextln:   v35 = int.sub v33, v34
      nextln:   v36 = i64.to_bits v35
      nextln:   v37 = bool.icmp.i64.eq v24, v36
      nextln:   v38 = i64.lshr v24, 0x30
      nextln:   v39 = i16.trunc.i64 v38
      nextln:   v40 = bool.icmp.i16.eq v39, 0x0
      nextln:   v41 = bool.bitwise_not v40
      nextln:   jumpif v41, addr_0_block_394, addr_0_block_395
      nextln:   jump addr_0_block_785(v1755, v1756)
      check: addr_0_block_394: // no preds!
      nextln:   jump addr_0_block_396(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_397(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_395: // no preds!
      nextln:   jump addr_0_block_396(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_396(v2898: i52, v2899: int, v2900: bool, v2901: bool): // preds: addr_0_block_395
      nextln:   v2902 = i52.trunc.i64 v24
      nextln:   jump addr_0_block_397(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2902, 0x1, 0x0)
      check: addr_0_block_397(v1608: i3, v1609: i1, v1610: i1, v1611: i1, v1612: i1, v1613: i4, v1614: i1, v1615: bool, v1616: int, v1617: int, v1618: bool, v1619: bool, v1620: i8, v1621: i8, v1622: i52, v1623: i1, v1624: bool, v1625: bool, v1626: int, v1627: i1, v1628: bool, v1629: i4, v1630: i2, v1631: i4, v1632: i8, v1633: i8, v1634: i2, v1635: i2, v1636: bool, v1637: i2, v1638: i2, v1639: bool, v1640: bool, v1641: bool, v1642: bool, v1643: i52, v1644: i1, v1645: i64, v1646: i1, v1647: i8, v1648: i8, v1649: i52, v1650: i1, v1651: bool, v1652: bool, v1653: int, v1654: i1, v1655: bool, v1656: i4, v1657: i2, v1658: i4, v1659: i8, v1660: i8, v1661: i2, v1662: i2, v1663: bool, v1664: i2, v1665: i2, v1666: bool, v1667: bool, v1668: bool, v1669: bool, v1670: i52, v1671: i1, v1672: i64): // preds: addr_0_block_394 addr_0_block_396
      nextln:   v1673 = bool.icmp.i8.ne v1647, 0x0
      nextln:   v1674 = bool.bitwise_not v1673
      nextln:   v1675 = bool.bitwise_not v29
      nextln:   v1676 = bool.and v1675, 0x1
      nextln:   v1677 = bool.or v1676, 0x0
      nextln:   v1678 = bool.icmp.i8.ne v1647, 0x0
      nextln:   v1679 = bool.bitwise_not v1678
      nextln:   v1680 = bool.and v1677, v1679
      nextln:   v1681 = bool.icmp.i8.eq v1659, 0x1
      nextln:   v1682 = bool.and v1680, v1681
      nextln:   jumpif v1682, addr_0_block_398, addr_0_block_399
      check: addr_0_block_398: // preds: addr_0_block_397
      nextln:   jump addr_0_block_400
      check: addr_0_block_399: // preds: addr_0_block_397
      nextln:   jump addr_0_block_400
      check: addr_0_block_400: // preds: addr_0_block_398 addr_0_block_399
      nextln:   v1683 = bool.icmp.i8.ne v1647, 0x0
      nextln:   v1684 = bool.bitwise_not v1683
      nextln:   v1685 = bool.icmp.i8.ne v1647, 0x0
      nextln:   v1686 = bool.bitwise_not v1685
      nextln:   v1687 = bool.icmp.i8.eq v1659, 0x1
      nextln:   v1688 = bool.and v1686, v1687
      nextln:   jumpif v1618, addr_0_block_401, addr_0_block_402
      check: addr_0_block_401: // preds: addr_0_block_400
      nextln:   v1689 = bool.icmp.i8.eq v1647, 0x0
      nextln:   jump addr_0_block_403(0x1)
      check: addr_0_block_402: // preds: addr_0_block_400
      nextln:   jump addr_0_block_403(0x0)
      check: addr_0_block_403(v1690: bool): // preds: addr_0_block_401 addr_0_block_402
      nextln:   v1691 = bool.icmp.i8.eq v1647, 0x0
      nextln:   v1692 = bool.and v1619, v1691
      nextln:   jumpif v1692, addr_0_block_404, addr_0_block_405
      check: addr_0_block_404: // preds: addr_0_block_403
      nextln:   jump addr_0_block_406(0x1, 0x1)
      check: addr_0_block_405: // preds: addr_0_block_403
      nextln:   jump addr_0_block_406(0x0, 0x0)
      check: addr_0_block_406(v1693: bool, v1694: bool): // preds: addr_0_block_404 addr_0_block_405
      nextln:   v1695 = bool.or v1690, v1693
      nextln:   jumpif v1695, addr_0_block_407, addr_0_block_420
      check: addr_0_block_407: // preds: addr_0_block_406
      nextln:   v1696 = i52.unsigned_from_bits v1643
      nextln:   v1697 = int.modulo v1696, 0x8
      nextln:   v1698 = int.sub v1696, v1697
      nextln:   v1699 = i52.to_bits v1698
      nextln:   v1700 = bool.icmp.i52.eq v1643, v1699
      nextln:   v1701 = i64.load v1643
      nextln:   jumpif v1690, addr_0_block_408, addr_0_block_409
      nextln:   jump addr_0_block_421(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1701, v1620, v1621, v1622, v1623, v1624, v1625, v1626, v1627, v1628, v1629, v1630, v1631, v1632, v1633, v1634, v1635, v1636, v1637, v1638, v1639, v1640, v1641, v1642, v1643, v1644, v1645, 0x0, 0x0)
      check: addr_0_block_408: // no preds!
      nextln:   jump addr_0_block_410
      check: addr_0_block_409: // no preds!
      nextln:   jump addr_0_block_410
      check: addr_0_block_410: // preds: addr_0_block_408 addr_0_block_409
      nextln:   jumpif v1693, addr_0_block_411, addr_0_block_412
      check: addr_0_block_411: // preds: addr_0_block_410
      nextln:   jump addr_0_block_413
      check: addr_0_block_412: // preds: addr_0_block_410
      nextln:   jump addr_0_block_413
      check: addr_0_block_413: // preds: addr_0_block_411 addr_0_block_412
      nextln:   v2903 = i52.unsigned_from_bits v1643
      nextln:   v2904 = int.modulo v2903, 0x8
      nextln:   v2905 = int.sub v2903, v2904
      nextln:   v2906 = i52.to_bits v2905
      nextln:   v2907 = bool.icmp.i52.eq v1643, v2906
      nextln:   v2908 = bool.icmp.i52.eq v1643, 0x13000000
      nextln:   jumpif v2908, addr_0_block_414, addr_0_block_418
      check: addr_0_block_414: // preds: addr_0_block_413
      nextln:   v2909 = i64.unsigned_from_bits v1701
      nextln:   v2910 = bool.icmp.int.eq v2909, 0x4
      nextln:   jumpif v2910, addr_0_block_415, addr_0_block_416
      nextln:   jump addr_0_block_419
      check: addr_0_block_415: // no preds!
      nextln:   jump addr_0_block_417
      check: addr_0_block_416: // no preds!
      nextln:   v2911 = i8.trunc.i64 v1701
      nextln:   v2912 = i8.unsigned_from_bits v2911
      nextln:   jump addr_0_block_417
      check: addr_0_block_417: // preds: addr_0_block_415 addr_0_block_416
      check: addr_0_block_418: // preds: addr_0_block_413
      nextln:   store.i64 v1701, v1643
      nextln:   jump addr_0_block_419
      check: addr_0_block_419: // preds: addr_0_block_414 addr_0_block_418
      check: addr_0_block_420: // preds: addr_0_block_406
      nextln:   jump addr_0_block_421(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_421(v1702: i8, v1703: i1, v1704: i16, v1705: i8, v1706: bool, v1707: bool, v1708: bool, v1709: int, v1710: i64, v1711: i8, v1712: i8, v1713: i52, v1714: i1, v1715: bool, v1716: bool, v1717: int, v1718: i1, v1719: bool, v1720: i4, v1721: i2, v1722: i4, v1723: i8, v1724: i8, v1725: i2, v1726: i2, v1727: bool, v1728: i2, v1729: i2, v1730: bool, v1731: bool, v1732: bool, v1733: bool, v1734: i52, v1735: i1, v1736: i64, v1737: i2, v1738: bool): // preds: addr_0_block_407 addr_0_block_420
      nextln:   v1739 = bool.icmp.i8.ne v1647, 0x0
      nextln:   v1740 = bool.bitwise_not v1739
      nextln:   v1741 = bool.and v1740, 0x1
      nextln:   v1742 = bool.icmp.i8.ne v1647, 0x0
      nextln:   v1743 = bool.bitwise_not v1742
      nextln:   v1744 = bool.and 0x1, v1743
      nextln:   jumpif v1744, addr_0_block_422, addr_0_block_423
      check: addr_0_block_422: // preds: addr_0_block_421
      nextln:   jump addr_0_block_424
      check: addr_0_block_423: // preds: addr_0_block_421
      nextln:   jump addr_0_block_424
      check: addr_0_block_424: // preds: addr_0_block_422 addr_0_block_423
      nextln:   v1745 = bool.icmp.i8.ne v1647, 0x0
      nextln:   jumpif v1745, addr_0_block_425, addr_0_block_426
      check: addr_0_block_425: // preds: addr_0_block_424
      nextln:   jump addr_0_block_427
      check: addr_0_block_426: // preds: addr_0_block_424
      nextln:   jump addr_0_block_427
      check: addr_0_block_427: // preds: addr_0_block_425 addr_0_block_426
      nextln:   jumpif v1668, addr_0_block_428, addr_0_block_429
      check: addr_0_block_428: // preds: addr_0_block_427
      nextln:   jump addr_0_block_430
      check: addr_0_block_429: // preds: addr_0_block_427
      nextln:   jump addr_0_block_430
      check: addr_0_block_430: // preds: addr_0_block_428 addr_0_block_429
      nextln:   v1746 = i52.unsigned_from_bits v1670
      nextln:   v1747 = int.modulo v1746, 0x1
      nextln:   v1748 = int.sub v1746, v1747
      nextln:   v1749 = i52.to_bits v1748
      nextln:   v1750 = bool.icmp.i52.eq v1670, v1749
      nextln:   v1751 = bool.icmp.i52.eq v1670, 0x13000000
      nextln:   jumpif v1751, addr_0_block_431, addr_0_block_435
      check: addr_0_block_431: // preds: addr_0_block_430
      nextln:   v1752 = i8.unsigned_from_bits v32
      nextln:   v1753 = bool.icmp.int.eq v1752, 0x4
      nextln:   jumpif v1753, addr_0_block_432, addr_0_block_433
      nextln:   jump addr_0_block_436
      check: addr_0_block_432: // no preds!
      nextln:   jump addr_0_block_434
      check: addr_0_block_433: // no preds!
      nextln:   v2913 = i8.unsigned_from_bits v32
      nextln:   jump addr_0_block_434
      check: addr_0_block_434: // preds: addr_0_block_432 addr_0_block_433
      check: addr_0_block_435: // preds: addr_0_block_430
      nextln:   store.i8 v32, v1670
      nextln:   jump addr_0_block_436
      check: addr_0_block_436: // preds: addr_0_block_431 addr_0_block_435
      nextln:   v1754 = bool.bitwise_not v29
      nextln:   jumpif v1754, addr_0_block_437, addr_0_block_438
      check: addr_0_block_437: // preds: addr_0_block_436
      nextln:   jump addr_0_block_439(v29, 0xc)
      check: addr_0_block_438: // preds: addr_0_block_436
      nextln:   jump addr_0_block_439(v29, 0x0)
      check: addr_0_block_439(v1755: i64, v1756: i8): // preds: addr_0_block_437 addr_0_block_438
      nextln:   v1757 = i64.lshr v3, 0x8
      nextln:   v1758 = i8.trunc.i64 v1757
      nextln:   v1759 = i64.wrapping_add v24, 0x1
      nextln:   v1760 = i64.unsigned_from_bits v1759
      nextln:   v1761 = int.modulo v1760, 0x1
      nextln:   v1762 = int.sub v1760, v1761
      nextln:   v1763 = i64.to_bits v1762
      nextln:   v1764 = bool.icmp.i64.eq v1759, v1763
      nextln:   v1765 = i64.lshr v1759, 0x30
      nextln:   v1766 = i16.trunc.i64 v1765
      nextln:   v1767 = bool.icmp.i16.eq v1766, 0x0
      nextln:   v1768 = bool.bitwise_not v1767
      nextln:   jumpif v1768, addr_0_block_440, addr_0_block_441
      check: addr_0_block_440: // preds: addr_0_block_439
      nextln:   jump addr_0_block_442(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_443(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_441: // preds: addr_0_block_439
      nextln:   jump addr_0_block_442(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_442(v2893: i52, v2894: int, v2895: bool, v2896: bool): // preds: addr_0_block_441
      nextln:   v2897 = i52.trunc.i64 v1759
      nextln:   jump addr_0_block_443(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2897, 0x1, 0x0)
      check: addr_0_block_443(v1769: i3, v1770: i1, v1771: i1, v1772: i1, v1773: i1, v1774: i4, v1775: i1, v1776: bool, v1777: int, v1778: int, v1779: bool, v1780: bool, v1781: i8, v1782: i8, v1783: i52, v1784: i1, v1785: bool, v1786: bool, v1787: int, v1788: i1, v1789: bool, v1790: i4, v1791: i2, v1792: i4, v1793: i8, v1794: i8, v1795: i2, v1796: i2, v1797: bool, v1798: i2, v1799: i2, v1800: bool, v1801: bool, v1802: bool, v1803: bool, v1804: i52, v1805: i1, v1806: i64, v1807: i1, v1808: i8, v1809: i8, v1810: i52, v1811: i1, v1812: bool, v1813: bool, v1814: int, v1815: i1, v1816: bool, v1817: i4, v1818: i2, v1819: i4, v1820: i8, v1821: i8, v1822: i2, v1823: i2, v1824: bool, v1825: i2, v1826: i2, v1827: bool, v1828: bool, v1829: bool, v1830: bool, v1831: i52, v1832: i1, v1833: i64): // preds: addr_0_block_440 addr_0_block_442
      nextln:   v1834 = bool.icmp.i8.ne v1808, 0x0
      nextln:   v1835 = bool.bitwise_not v1834
      nextln:   v1836 = bool.bitwise_not v29
      nextln:   v1837 = bool.and v1836, 0x1
      nextln:   v1838 = bool.or v1837, 0x0
      nextln:   v1839 = bool.icmp.i8.ne v1808, 0x0
      nextln:   v1840 = bool.bitwise_not v1839
      nextln:   v1841 = bool.and v1838, v1840
      nextln:   v1842 = bool.icmp.i8.eq v1820, 0x1
      nextln:   v1843 = bool.and v1841, v1842
      nextln:   jumpif v1843, addr_0_block_444, addr_0_block_445
      check: addr_0_block_444: // preds: addr_0_block_443
      nextln:   jump addr_0_block_446
      check: addr_0_block_445: // preds: addr_0_block_443
      nextln:   jump addr_0_block_446
      check: addr_0_block_446: // preds: addr_0_block_444 addr_0_block_445
      nextln:   v1844 = bool.icmp.i8.ne v1808, 0x0
      nextln:   v1845 = bool.bitwise_not v1844
      nextln:   v1846 = bool.icmp.i8.ne v1808, 0x0
      nextln:   v1847 = bool.bitwise_not v1846
      nextln:   v1848 = bool.icmp.i8.eq v1820, 0x1
      nextln:   v1849 = bool.and v1847, v1848
      nextln:   jumpif v1779, addr_0_block_447, addr_0_block_448
      check: addr_0_block_447: // preds: addr_0_block_446
      nextln:   v1850 = bool.icmp.i8.eq v1808, 0x0
      nextln:   jump addr_0_block_449(0x1)
      check: addr_0_block_448: // preds: addr_0_block_446
      nextln:   jump addr_0_block_449(0x0)
      check: addr_0_block_449(v1851: bool): // preds: addr_0_block_447 addr_0_block_448
      nextln:   v1852 = bool.icmp.i8.eq v1808, 0x0
      nextln:   v1853 = bool.and v1780, v1852
      nextln:   jumpif v1853, addr_0_block_450, addr_0_block_451
      check: addr_0_block_450: // preds: addr_0_block_449
      nextln:   jump addr_0_block_452(0x1, 0x1)
      check: addr_0_block_451: // preds: addr_0_block_449
      nextln:   jump addr_0_block_452(0x0, 0x0)
      check: addr_0_block_452(v1854: bool, v1855: bool): // preds: addr_0_block_450 addr_0_block_451
      nextln:   v1856 = bool.or v1851, v1854
      nextln:   jumpif v1856, addr_0_block_453, addr_0_block_466
      check: addr_0_block_453: // preds: addr_0_block_452
      nextln:   v1857 = i52.unsigned_from_bits v1804
      nextln:   v1858 = int.modulo v1857, 0x8
      nextln:   v1859 = int.sub v1857, v1858
      nextln:   v1860 = i52.to_bits v1859
      nextln:   v1861 = bool.icmp.i52.eq v1804, v1860
      nextln:   v1862 = i64.load v1804
      nextln:   jumpif v1851, addr_0_block_454, addr_0_block_455
      nextln:   jump addr_0_block_467(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1862, v1781, v1782, v1783, v1784, v1785, v1786, v1787, v1788, v1789, v1790, v1791, v1792, v1793, v1794, v1795, v1796, v1797, v1798, v1799, v1800, v1801, v1802, v1803, v1804, v1805, v1806, 0x0, 0x0)
      check: addr_0_block_454: // no preds!
      nextln:   jump addr_0_block_456
      check: addr_0_block_455: // no preds!
      nextln:   jump addr_0_block_456
      check: addr_0_block_456: // preds: addr_0_block_454 addr_0_block_455
      nextln:   jumpif v1854, addr_0_block_457, addr_0_block_458
      check: addr_0_block_457: // preds: addr_0_block_456
      nextln:   jump addr_0_block_459
      check: addr_0_block_458: // preds: addr_0_block_456
      nextln:   jump addr_0_block_459
      check: addr_0_block_459: // preds: addr_0_block_457 addr_0_block_458
      nextln:   v2914 = i52.unsigned_from_bits v1804
      nextln:   v2915 = int.modulo v2914, 0x8
      nextln:   v2916 = int.sub v2914, v2915
      nextln:   v2917 = i52.to_bits v2916
      nextln:   v2918 = bool.icmp.i52.eq v1804, v2917
      nextln:   v2919 = bool.icmp.i52.eq v1804, 0x13000000
      nextln:   jumpif v2919, addr_0_block_460, addr_0_block_464
      check: addr_0_block_460: // preds: addr_0_block_459
      nextln:   v2920 = i64.unsigned_from_bits v1862
      nextln:   v2921 = bool.icmp.int.eq v2920, 0x4
      nextln:   jumpif v2921, addr_0_block_461, addr_0_block_462
      nextln:   jump addr_0_block_465
      check: addr_0_block_461: // no preds!
      nextln:   jump addr_0_block_463
      check: addr_0_block_462: // no preds!
      nextln:   v2922 = i8.trunc.i64 v1862
      nextln:   v2923 = i8.unsigned_from_bits v2922
      nextln:   jump addr_0_block_463
      check: addr_0_block_463: // preds: addr_0_block_461 addr_0_block_462
      check: addr_0_block_464: // preds: addr_0_block_459
      nextln:   store.i64 v1862, v1804
      nextln:   jump addr_0_block_465
      check: addr_0_block_465: // preds: addr_0_block_460 addr_0_block_464
      check: addr_0_block_466: // preds: addr_0_block_452
      nextln:   jump addr_0_block_467(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_467(v1863: i8, v1864: i1, v1865: i16, v1866: i8, v1867: bool, v1868: bool, v1869: bool, v1870: int, v1871: i64, v1872: i8, v1873: i8, v1874: i52, v1875: i1, v1876: bool, v1877: bool, v1878: int, v1879: i1, v1880: bool, v1881: i4, v1882: i2, v1883: i4, v1884: i8, v1885: i8, v1886: i2, v1887: i2, v1888: bool, v1889: i2, v1890: i2, v1891: bool, v1892: bool, v1893: bool, v1894: bool, v1895: i52, v1896: i1, v1897: i64, v1898: i2, v1899: bool): // preds: addr_0_block_453 addr_0_block_466
      nextln:   v1900 = bool.icmp.i8.ne v1808, 0x0
      nextln:   v1901 = bool.bitwise_not v1900
      nextln:   v1902 = bool.and v1901, 0x1
      nextln:   v1903 = bool.icmp.i8.ne v1808, 0x0
      nextln:   v1904 = bool.bitwise_not v1903
      nextln:   v1905 = bool.and 0x1, v1904
      nextln:   jumpif v1905, addr_0_block_468, addr_0_block_469
      check: addr_0_block_468: // preds: addr_0_block_467
      nextln:   jump addr_0_block_470
      check: addr_0_block_469: // preds: addr_0_block_467
      nextln:   jump addr_0_block_470
      check: addr_0_block_470: // preds: addr_0_block_468 addr_0_block_469
      nextln:   v1906 = bool.icmp.i8.ne v1808, 0x0
      nextln:   jumpif v1906, addr_0_block_471, addr_0_block_472
      check: addr_0_block_471: // preds: addr_0_block_470
      nextln:   jump addr_0_block_473
      check: addr_0_block_472: // preds: addr_0_block_470
      nextln:   jump addr_0_block_473
      check: addr_0_block_473: // preds: addr_0_block_471 addr_0_block_472
      nextln:   jumpif v1829, addr_0_block_474, addr_0_block_475
      check: addr_0_block_474: // preds: addr_0_block_473
      nextln:   jump addr_0_block_476
      check: addr_0_block_475: // preds: addr_0_block_473
      nextln:   jump addr_0_block_476
      check: addr_0_block_476: // preds: addr_0_block_474 addr_0_block_475
      nextln:   v1907 = i52.unsigned_from_bits v1831
      nextln:   v1908 = int.modulo v1907, 0x1
      nextln:   v1909 = int.sub v1907, v1908
      nextln:   v1910 = i52.to_bits v1909
      nextln:   v1911 = bool.icmp.i52.eq v1831, v1910
      nextln:   v1912 = bool.icmp.i52.eq v1831, 0x13000000
      nextln:   jumpif v1912, addr_0_block_477, addr_0_block_481
      check: addr_0_block_477: // preds: addr_0_block_476
      nextln:   v1913 = i8.unsigned_from_bits v1758
      nextln:   v1914 = bool.icmp.int.eq v1913, 0x4
      nextln:   jumpif v1914, addr_0_block_478, addr_0_block_479
      nextln:   jump addr_0_block_482
      check: addr_0_block_478: // no preds!
      nextln:   jump addr_0_block_480
      check: addr_0_block_479: // no preds!
      nextln:   v2924 = i8.unsigned_from_bits v1758
      nextln:   jump addr_0_block_480
      check: addr_0_block_480: // preds: addr_0_block_478 addr_0_block_479
      check: addr_0_block_481: // preds: addr_0_block_476
      nextln:   store.i8 v1758, v1831
      nextln:   jump addr_0_block_482
      check: addr_0_block_482: // preds: addr_0_block_477 addr_0_block_481
      nextln:   v1915 = i64.lshr v3, 0x10
      nextln:   v1916 = i8.trunc.i64 v1915
      nextln:   v1917 = i64.wrapping_add v24, 0x2
      nextln:   v1918 = i64.unsigned_from_bits v1917
      nextln:   v1919 = int.modulo v1918, 0x1
      nextln:   v1920 = int.sub v1918, v1919
      nextln:   v1921 = i64.to_bits v1920
      nextln:   v1922 = bool.icmp.i64.eq v1917, v1921
      nextln:   v1923 = i64.lshr v1917, 0x30
      nextln:   v1924 = i16.trunc.i64 v1923
      nextln:   v1925 = bool.icmp.i16.eq v1924, 0x0
      nextln:   v1926 = bool.bitwise_not v1925
      nextln:   jumpif v1926, addr_0_block_483, addr_0_block_484
      check: addr_0_block_483: // preds: addr_0_block_482
      nextln:   jump addr_0_block_485(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_486(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_484: // preds: addr_0_block_482
      nextln:   jump addr_0_block_485(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_485(v2888: i52, v2889: int, v2890: bool, v2891: bool): // preds: addr_0_block_484
      nextln:   v2892 = i52.trunc.i64 v1917
      nextln:   jump addr_0_block_486(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2892, 0x1, 0x0)
      check: addr_0_block_486(v1927: i3, v1928: i1, v1929: i1, v1930: i1, v1931: i1, v1932: i4, v1933: i1, v1934: bool, v1935: int, v1936: int, v1937: bool, v1938: bool, v1939: i8, v1940: i8, v1941: i52, v1942: i1, v1943: bool, v1944: bool, v1945: int, v1946: i1, v1947: bool, v1948: i4, v1949: i2, v1950: i4, v1951: i8, v1952: i8, v1953: i2, v1954: i2, v1955: bool, v1956: i2, v1957: i2, v1958: bool, v1959: bool, v1960: bool, v1961: bool, v1962: i52, v1963: i1, v1964: i64, v1965: i1, v1966: i8, v1967: i8, v1968: i52, v1969: i1, v1970: bool, v1971: bool, v1972: int, v1973: i1, v1974: bool, v1975: i4, v1976: i2, v1977: i4, v1978: i8, v1979: i8, v1980: i2, v1981: i2, v1982: bool, v1983: i2, v1984: i2, v1985: bool, v1986: bool, v1987: bool, v1988: bool, v1989: i52, v1990: i1, v1991: i64): // preds: addr_0_block_483 addr_0_block_485
      nextln:   v1992 = bool.icmp.i8.ne v1966, 0x0
      nextln:   v1993 = bool.bitwise_not v1992
      nextln:   v1994 = bool.bitwise_not v29
      nextln:   v1995 = bool.and v1994, 0x1
      nextln:   v1996 = bool.or v1995, 0x0
      nextln:   v1997 = bool.icmp.i8.ne v1966, 0x0
      nextln:   v1998 = bool.bitwise_not v1997
      nextln:   v1999 = bool.and v1996, v1998
      nextln:   v2000 = bool.icmp.i8.eq v1978, 0x1
      nextln:   v2001 = bool.and v1999, v2000
      nextln:   jumpif v2001, addr_0_block_487, addr_0_block_488
      check: addr_0_block_487: // preds: addr_0_block_486
      nextln:   jump addr_0_block_489
      check: addr_0_block_488: // preds: addr_0_block_486
      nextln:   jump addr_0_block_489
      check: addr_0_block_489: // preds: addr_0_block_487 addr_0_block_488
      nextln:   v2002 = bool.icmp.i8.ne v1966, 0x0
      nextln:   v2003 = bool.bitwise_not v2002
      nextln:   v2004 = bool.icmp.i8.ne v1966, 0x0
      nextln:   v2005 = bool.bitwise_not v2004
      nextln:   v2006 = bool.icmp.i8.eq v1978, 0x1
      nextln:   v2007 = bool.and v2005, v2006
      nextln:   jumpif v1937, addr_0_block_490, addr_0_block_491
      check: addr_0_block_490: // preds: addr_0_block_489
      nextln:   v2008 = bool.icmp.i8.eq v1966, 0x0
      nextln:   jump addr_0_block_492(0x1)
      check: addr_0_block_491: // preds: addr_0_block_489
      nextln:   jump addr_0_block_492(0x0)
      check: addr_0_block_492(v2009: bool): // preds: addr_0_block_490 addr_0_block_491
      nextln:   v2010 = bool.icmp.i8.eq v1966, 0x0
      nextln:   v2011 = bool.and v1938, v2010
      nextln:   jumpif v2011, addr_0_block_493, addr_0_block_494
      check: addr_0_block_493: // preds: addr_0_block_492
      nextln:   jump addr_0_block_495(0x1, 0x1)
      check: addr_0_block_494: // preds: addr_0_block_492
      nextln:   jump addr_0_block_495(0x0, 0x0)
      check: addr_0_block_495(v2012: bool, v2013: bool): // preds: addr_0_block_493 addr_0_block_494
      nextln:   v2014 = bool.or v2009, v2012
      nextln:   jumpif v2014, addr_0_block_496, addr_0_block_509
      check: addr_0_block_496: // preds: addr_0_block_495
      nextln:   v2015 = i52.unsigned_from_bits v1962
      nextln:   v2016 = int.modulo v2015, 0x8
      nextln:   v2017 = int.sub v2015, v2016
      nextln:   v2018 = i52.to_bits v2017
      nextln:   v2019 = bool.icmp.i52.eq v1962, v2018
      nextln:   v2020 = i64.load v1962
      nextln:   jumpif v2009, addr_0_block_497, addr_0_block_498
      nextln:   jump addr_0_block_510(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2020, v1939, v1940, v1941, v1942, v1943, v1944, v1945, v1946, v1947, v1948, v1949, v1950, v1951, v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, v1960, v1961, v1962, v1963, v1964, 0x0, 0x0)
      check: addr_0_block_497: // no preds!
      nextln:   jump addr_0_block_499
      check: addr_0_block_498: // no preds!
      nextln:   jump addr_0_block_499
      check: addr_0_block_499: // preds: addr_0_block_497 addr_0_block_498
      nextln:   jumpif v2012, addr_0_block_500, addr_0_block_501
      check: addr_0_block_500: // preds: addr_0_block_499
      nextln:   jump addr_0_block_502
      check: addr_0_block_501: // preds: addr_0_block_499
      nextln:   jump addr_0_block_502
      check: addr_0_block_502: // preds: addr_0_block_500 addr_0_block_501
      nextln:   v2925 = i52.unsigned_from_bits v1962
      nextln:   v2926 = int.modulo v2925, 0x8
      nextln:   v2927 = int.sub v2925, v2926
      nextln:   v2928 = i52.to_bits v2927
      nextln:   v2929 = bool.icmp.i52.eq v1962, v2928
      nextln:   v2930 = bool.icmp.i52.eq v1962, 0x13000000
      nextln:   jumpif v2930, addr_0_block_503, addr_0_block_507
      check: addr_0_block_503: // preds: addr_0_block_502
      nextln:   v2931 = i64.unsigned_from_bits v2020
      nextln:   v2932 = bool.icmp.int.eq v2931, 0x4
      nextln:   jumpif v2932, addr_0_block_504, addr_0_block_505
      nextln:   jump addr_0_block_508
      check: addr_0_block_504: // no preds!
      nextln:   jump addr_0_block_506
      check: addr_0_block_505: // no preds!
      nextln:   v2933 = i8.trunc.i64 v2020
      nextln:   v2934 = i8.unsigned_from_bits v2933
      nextln:   jump addr_0_block_506
      check: addr_0_block_506: // preds: addr_0_block_504 addr_0_block_505
      check: addr_0_block_507: // preds: addr_0_block_502
      nextln:   store.i64 v2020, v1962
      nextln:   jump addr_0_block_508
      check: addr_0_block_508: // preds: addr_0_block_503 addr_0_block_507
      check: addr_0_block_509: // preds: addr_0_block_495
      nextln:   jump addr_0_block_510(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_510(v2021: i8, v2022: i1, v2023: i16, v2024: i8, v2025: bool, v2026: bool, v2027: bool, v2028: int, v2029: i64, v2030: i8, v2031: i8, v2032: i52, v2033: i1, v2034: bool, v2035: bool, v2036: int, v2037: i1, v2038: bool, v2039: i4, v2040: i2, v2041: i4, v2042: i8, v2043: i8, v2044: i2, v2045: i2, v2046: bool, v2047: i2, v2048: i2, v2049: bool, v2050: bool, v2051: bool, v2052: bool, v2053: i52, v2054: i1, v2055: i64, v2056: i2, v2057: bool): // preds: addr_0_block_496 addr_0_block_509
      nextln:   v2058 = bool.icmp.i8.ne v1966, 0x0
      nextln:   v2059 = bool.bitwise_not v2058
      nextln:   v2060 = bool.and v2059, 0x1
      nextln:   v2061 = bool.icmp.i8.ne v1966, 0x0
      nextln:   v2062 = bool.bitwise_not v2061
      nextln:   v2063 = bool.and 0x1, v2062
      nextln:   jumpif v2063, addr_0_block_511, addr_0_block_512
      check: addr_0_block_511: // preds: addr_0_block_510
      nextln:   jump addr_0_block_513
      check: addr_0_block_512: // preds: addr_0_block_510
      nextln:   jump addr_0_block_513
      check: addr_0_block_513: // preds: addr_0_block_511 addr_0_block_512
      nextln:   v2064 = bool.icmp.i8.ne v1966, 0x0
      nextln:   jumpif v2064, addr_0_block_514, addr_0_block_515
      check: addr_0_block_514: // preds: addr_0_block_513
      nextln:   jump addr_0_block_516
      check: addr_0_block_515: // preds: addr_0_block_513
      nextln:   jump addr_0_block_516
      check: addr_0_block_516: // preds: addr_0_block_514 addr_0_block_515
      nextln:   jumpif v1987, addr_0_block_517, addr_0_block_518
      check: addr_0_block_517: // preds: addr_0_block_516
      nextln:   jump addr_0_block_519
      check: addr_0_block_518: // preds: addr_0_block_516
      nextln:   jump addr_0_block_519
      check: addr_0_block_519: // preds: addr_0_block_517 addr_0_block_518
      nextln:   v2065 = i52.unsigned_from_bits v1989
      nextln:   v2066 = int.modulo v2065, 0x1
      nextln:   v2067 = int.sub v2065, v2066
      nextln:   v2068 = i52.to_bits v2067
      nextln:   v2069 = bool.icmp.i52.eq v1989, v2068
      nextln:   v2070 = bool.icmp.i52.eq v1989, 0x13000000
      nextln:   jumpif v2070, addr_0_block_520, addr_0_block_524
      check: addr_0_block_520: // preds: addr_0_block_519
      nextln:   v2071 = i8.unsigned_from_bits v1916
      nextln:   v2072 = bool.icmp.int.eq v2071, 0x4
      nextln:   jumpif v2072, addr_0_block_521, addr_0_block_522
      nextln:   jump addr_0_block_525
      check: addr_0_block_521: // no preds!
      nextln:   jump addr_0_block_523
      check: addr_0_block_522: // no preds!
      nextln:   v2935 = i8.unsigned_from_bits v1916
      nextln:   jump addr_0_block_523
      check: addr_0_block_523: // preds: addr_0_block_521 addr_0_block_522
      check: addr_0_block_524: // preds: addr_0_block_519
      nextln:   store.i8 v1916, v1989
      nextln:   jump addr_0_block_525
      check: addr_0_block_525: // preds: addr_0_block_520 addr_0_block_524
      nextln:   v2073 = i64.lshr v3, 0x18
      nextln:   v2074 = i8.trunc.i64 v2073
      nextln:   v2075 = i64.wrapping_add v24, 0x3
      nextln:   v2076 = i64.unsigned_from_bits v2075
      nextln:   v2077 = int.modulo v2076, 0x1
      nextln:   v2078 = int.sub v2076, v2077
      nextln:   v2079 = i64.to_bits v2078
      nextln:   v2080 = bool.icmp.i64.eq v2075, v2079
      nextln:   v2081 = i64.lshr v2075, 0x30
      nextln:   v2082 = i16.trunc.i64 v2081
      nextln:   v2083 = bool.icmp.i16.eq v2082, 0x0
      nextln:   v2084 = bool.bitwise_not v2083
      nextln:   jumpif v2084, addr_0_block_526, addr_0_block_527
      check: addr_0_block_526: // preds: addr_0_block_525
      nextln:   jump addr_0_block_528(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_529(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_527: // preds: addr_0_block_525
      nextln:   jump addr_0_block_528(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_528(v2883: i52, v2884: int, v2885: bool, v2886: bool): // preds: addr_0_block_527
      nextln:   v2887 = i52.trunc.i64 v2075
      nextln:   jump addr_0_block_529(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2887, 0x1, 0x0)
      check: addr_0_block_529(v2085: i3, v2086: i1, v2087: i1, v2088: i1, v2089: i1, v2090: i4, v2091: i1, v2092: bool, v2093: int, v2094: int, v2095: bool, v2096: bool, v2097: i8, v2098: i8, v2099: i52, v2100: i1, v2101: bool, v2102: bool, v2103: int, v2104: i1, v2105: bool, v2106: i4, v2107: i2, v2108: i4, v2109: i8, v2110: i8, v2111: i2, v2112: i2, v2113: bool, v2114: i2, v2115: i2, v2116: bool, v2117: bool, v2118: bool, v2119: bool, v2120: i52, v2121: i1, v2122: i64, v2123: i1, v2124: i8, v2125: i8, v2126: i52, v2127: i1, v2128: bool, v2129: bool, v2130: int, v2131: i1, v2132: bool, v2133: i4, v2134: i2, v2135: i4, v2136: i8, v2137: i8, v2138: i2, v2139: i2, v2140: bool, v2141: i2, v2142: i2, v2143: bool, v2144: bool, v2145: bool, v2146: bool, v2147: i52, v2148: i1, v2149: i64): // preds: addr_0_block_526 addr_0_block_528
      nextln:   v2150 = bool.icmp.i8.ne v2124, 0x0
      nextln:   v2151 = bool.bitwise_not v2150
      nextln:   v2152 = bool.bitwise_not v29
      nextln:   v2153 = bool.and v2152, 0x1
      nextln:   v2154 = bool.or v2153, 0x0
      nextln:   v2155 = bool.icmp.i8.ne v2124, 0x0
      nextln:   v2156 = bool.bitwise_not v2155
      nextln:   v2157 = bool.and v2154, v2156
      nextln:   v2158 = bool.icmp.i8.eq v2136, 0x1
      nextln:   v2159 = bool.and v2157, v2158
      nextln:   jumpif v2159, addr_0_block_530, addr_0_block_531
      check: addr_0_block_530: // preds: addr_0_block_529
      nextln:   jump addr_0_block_532
      check: addr_0_block_531: // preds: addr_0_block_529
      nextln:   jump addr_0_block_532
      check: addr_0_block_532: // preds: addr_0_block_530 addr_0_block_531
      nextln:   v2160 = bool.icmp.i8.ne v2124, 0x0
      nextln:   v2161 = bool.bitwise_not v2160
      nextln:   v2162 = bool.icmp.i8.ne v2124, 0x0
      nextln:   v2163 = bool.bitwise_not v2162
      nextln:   v2164 = bool.icmp.i8.eq v2136, 0x1
      nextln:   v2165 = bool.and v2163, v2164
      nextln:   jumpif v2095, addr_0_block_533, addr_0_block_534
      check: addr_0_block_533: // preds: addr_0_block_532
      nextln:   v2166 = bool.icmp.i8.eq v2124, 0x0
      nextln:   jump addr_0_block_535(0x1)
      check: addr_0_block_534: // preds: addr_0_block_532
      nextln:   jump addr_0_block_535(0x0)
      check: addr_0_block_535(v2167: bool): // preds: addr_0_block_533 addr_0_block_534
      nextln:   v2168 = bool.icmp.i8.eq v2124, 0x0
      nextln:   v2169 = bool.and v2096, v2168
      nextln:   jumpif v2169, addr_0_block_536, addr_0_block_537
      check: addr_0_block_536: // preds: addr_0_block_535
      nextln:   jump addr_0_block_538(0x1, 0x1)
      check: addr_0_block_537: // preds: addr_0_block_535
      nextln:   jump addr_0_block_538(0x0, 0x0)
      check: addr_0_block_538(v2170: bool, v2171: bool): // preds: addr_0_block_536 addr_0_block_537
      nextln:   v2172 = bool.or v2167, v2170
      nextln:   jumpif v2172, addr_0_block_539, addr_0_block_552
      check: addr_0_block_539: // preds: addr_0_block_538
      nextln:   v2173 = i52.unsigned_from_bits v2120
      nextln:   v2174 = int.modulo v2173, 0x8
      nextln:   v2175 = int.sub v2173, v2174
      nextln:   v2176 = i52.to_bits v2175
      nextln:   v2177 = bool.icmp.i52.eq v2120, v2176
      nextln:   v2178 = i64.load v2120
      nextln:   jumpif v2167, addr_0_block_540, addr_0_block_541
      nextln:   jump addr_0_block_553(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2178, v2097, v2098, v2099, v2100, v2101, v2102, v2103, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, v2120, v2121, v2122, 0x0, 0x0)
      check: addr_0_block_540: // no preds!
      nextln:   jump addr_0_block_542
      check: addr_0_block_541: // no preds!
      nextln:   jump addr_0_block_542
      check: addr_0_block_542: // preds: addr_0_block_540 addr_0_block_541
      nextln:   jumpif v2170, addr_0_block_543, addr_0_block_544
      check: addr_0_block_543: // preds: addr_0_block_542
      nextln:   jump addr_0_block_545
      check: addr_0_block_544: // preds: addr_0_block_542
      nextln:   jump addr_0_block_545
      check: addr_0_block_545: // preds: addr_0_block_543 addr_0_block_544
      nextln:   v2936 = i52.unsigned_from_bits v2120
      nextln:   v2937 = int.modulo v2936, 0x8
      nextln:   v2938 = int.sub v2936, v2937
      nextln:   v2939 = i52.to_bits v2938
      nextln:   v2940 = bool.icmp.i52.eq v2120, v2939
      nextln:   v2941 = bool.icmp.i52.eq v2120, 0x13000000
      nextln:   jumpif v2941, addr_0_block_546, addr_0_block_550
      check: addr_0_block_546: // preds: addr_0_block_545
      nextln:   v2942 = i64.unsigned_from_bits v2178
      nextln:   v2943 = bool.icmp.int.eq v2942, 0x4
      nextln:   jumpif v2943, addr_0_block_547, addr_0_block_548
      nextln:   jump addr_0_block_551
      check: addr_0_block_547: // no preds!
      nextln:   jump addr_0_block_549
      check: addr_0_block_548: // no preds!
      nextln:   v2944 = i8.trunc.i64 v2178
      nextln:   v2945 = i8.unsigned_from_bits v2944
      nextln:   jump addr_0_block_549
      check: addr_0_block_549: // preds: addr_0_block_547 addr_0_block_548
      check: addr_0_block_550: // preds: addr_0_block_545
      nextln:   store.i64 v2178, v2120
      nextln:   jump addr_0_block_551
      check: addr_0_block_551: // preds: addr_0_block_546 addr_0_block_550
      check: addr_0_block_552: // preds: addr_0_block_538
      nextln:   jump addr_0_block_553(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_553(v2179: i8, v2180: i1, v2181: i16, v2182: i8, v2183: bool, v2184: bool, v2185: bool, v2186: int, v2187: i64, v2188: i8, v2189: i8, v2190: i52, v2191: i1, v2192: bool, v2193: bool, v2194: int, v2195: i1, v2196: bool, v2197: i4, v2198: i2, v2199: i4, v2200: i8, v2201: i8, v2202: i2, v2203: i2, v2204: bool, v2205: i2, v2206: i2, v2207: bool, v2208: bool, v2209: bool, v2210: bool, v2211: i52, v2212: i1, v2213: i64, v2214: i2, v2215: bool): // preds: addr_0_block_539 addr_0_block_552
      nextln:   v2216 = bool.icmp.i8.ne v2124, 0x0
      nextln:   v2217 = bool.bitwise_not v2216
      nextln:   v2218 = bool.and v2217, 0x1
      nextln:   v2219 = bool.icmp.i8.ne v2124, 0x0
      nextln:   v2220 = bool.bitwise_not v2219
      nextln:   v2221 = bool.and 0x1, v2220
      nextln:   jumpif v2221, addr_0_block_554, addr_0_block_555
      check: addr_0_block_554: // preds: addr_0_block_553
      nextln:   jump addr_0_block_556
      check: addr_0_block_555: // preds: addr_0_block_553
      nextln:   jump addr_0_block_556
      check: addr_0_block_556: // preds: addr_0_block_554 addr_0_block_555
      nextln:   v2222 = bool.icmp.i8.ne v2124, 0x0
      nextln:   jumpif v2222, addr_0_block_557, addr_0_block_558
      check: addr_0_block_557: // preds: addr_0_block_556
      nextln:   jump addr_0_block_559
      check: addr_0_block_558: // preds: addr_0_block_556
      nextln:   jump addr_0_block_559
      check: addr_0_block_559: // preds: addr_0_block_557 addr_0_block_558
      nextln:   jumpif v2145, addr_0_block_560, addr_0_block_561
      check: addr_0_block_560: // preds: addr_0_block_559
      nextln:   jump addr_0_block_562
      check: addr_0_block_561: // preds: addr_0_block_559
      nextln:   jump addr_0_block_562
      check: addr_0_block_562: // preds: addr_0_block_560 addr_0_block_561
      nextln:   v2223 = i52.unsigned_from_bits v2147
      nextln:   v2224 = int.modulo v2223, 0x1
      nextln:   v2225 = int.sub v2223, v2224
      nextln:   v2226 = i52.to_bits v2225
      nextln:   v2227 = bool.icmp.i52.eq v2147, v2226
      nextln:   v2228 = bool.icmp.i52.eq v2147, 0x13000000
      nextln:   jumpif v2228, addr_0_block_563, addr_0_block_567
      check: addr_0_block_563: // preds: addr_0_block_562
      nextln:   v2229 = i8.unsigned_from_bits v2074
      nextln:   v2230 = bool.icmp.int.eq v2229, 0x4
      nextln:   jumpif v2230, addr_0_block_564, addr_0_block_565
      nextln:   jump addr_0_block_568
      check: addr_0_block_564: // no preds!
      nextln:   jump addr_0_block_566
      check: addr_0_block_565: // no preds!
      nextln:   v2946 = i8.unsigned_from_bits v2074
      nextln:   jump addr_0_block_566
      check: addr_0_block_566: // preds: addr_0_block_564 addr_0_block_565
      check: addr_0_block_567: // preds: addr_0_block_562
      nextln:   store.i8 v2074, v2147
      nextln:   jump addr_0_block_568
      check: addr_0_block_568: // preds: addr_0_block_563 addr_0_block_567
      nextln:   v2231 = i64.lshr v3, 0x20
      nextln:   v2232 = i8.trunc.i64 v2231
      nextln:   v2233 = i64.wrapping_add v24, 0x4
      nextln:   v2234 = i64.unsigned_from_bits v2233
      nextln:   v2235 = int.modulo v2234, 0x1
      nextln:   v2236 = int.sub v2234, v2235
      nextln:   v2237 = i64.to_bits v2236
      nextln:   v2238 = bool.icmp.i64.eq v2233, v2237
      nextln:   v2239 = i64.lshr v2233, 0x30
      nextln:   v2240 = i16.trunc.i64 v2239
      nextln:   v2241 = bool.icmp.i16.eq v2240, 0x0
      nextln:   v2242 = bool.bitwise_not v2241
      nextln:   jumpif v2242, addr_0_block_569, addr_0_block_570
      check: addr_0_block_569: // preds: addr_0_block_568
      nextln:   jump addr_0_block_571(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_572(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_570: // preds: addr_0_block_568
      nextln:   jump addr_0_block_571(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_571(v2878: i52, v2879: int, v2880: bool, v2881: bool): // preds: addr_0_block_570
      nextln:   v2882 = i52.trunc.i64 v2233
      nextln:   jump addr_0_block_572(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2882, 0x1, 0x0)
      check: addr_0_block_572(v2243: i3, v2244: i1, v2245: i1, v2246: i1, v2247: i1, v2248: i4, v2249: i1, v2250: bool, v2251: int, v2252: int, v2253: bool, v2254: bool, v2255: i8, v2256: i8, v2257: i52, v2258: i1, v2259: bool, v2260: bool, v2261: int, v2262: i1, v2263: bool, v2264: i4, v2265: i2, v2266: i4, v2267: i8, v2268: i8, v2269: i2, v2270: i2, v2271: bool, v2272: i2, v2273: i2, v2274: bool, v2275: bool, v2276: bool, v2277: bool, v2278: i52, v2279: i1, v2280: i64, v2281: i1, v2282: i8, v2283: i8, v2284: i52, v2285: i1, v2286: bool, v2287: bool, v2288: int, v2289: i1, v2290: bool, v2291: i4, v2292: i2, v2293: i4, v2294: i8, v2295: i8, v2296: i2, v2297: i2, v2298: bool, v2299: i2, v2300: i2, v2301: bool, v2302: bool, v2303: bool, v2304: bool, v2305: i52, v2306: i1, v2307: i64): // preds: addr_0_block_569 addr_0_block_571
      nextln:   v2308 = bool.icmp.i8.ne v2282, 0x0
      nextln:   v2309 = bool.bitwise_not v2308
      nextln:   v2310 = bool.bitwise_not v29
      nextln:   v2311 = bool.and v2310, 0x1
      nextln:   v2312 = bool.or v2311, 0x0
      nextln:   v2313 = bool.icmp.i8.ne v2282, 0x0
      nextln:   v2314 = bool.bitwise_not v2313
      nextln:   v2315 = bool.and v2312, v2314
      nextln:   v2316 = bool.icmp.i8.eq v2294, 0x1
      nextln:   v2317 = bool.and v2315, v2316
      nextln:   jumpif v2317, addr_0_block_573, addr_0_block_574
      check: addr_0_block_573: // preds: addr_0_block_572
      nextln:   jump addr_0_block_575
      check: addr_0_block_574: // preds: addr_0_block_572
      nextln:   jump addr_0_block_575
      check: addr_0_block_575: // preds: addr_0_block_573 addr_0_block_574
      nextln:   v2318 = bool.icmp.i8.ne v2282, 0x0
      nextln:   v2319 = bool.bitwise_not v2318
      nextln:   v2320 = bool.icmp.i8.ne v2282, 0x0
      nextln:   v2321 = bool.bitwise_not v2320
      nextln:   v2322 = bool.icmp.i8.eq v2294, 0x1
      nextln:   v2323 = bool.and v2321, v2322
      nextln:   jumpif v2253, addr_0_block_576, addr_0_block_577
      check: addr_0_block_576: // preds: addr_0_block_575
      nextln:   v2324 = bool.icmp.i8.eq v2282, 0x0
      nextln:   jump addr_0_block_578(0x1)
      check: addr_0_block_577: // preds: addr_0_block_575
      nextln:   jump addr_0_block_578(0x0)
      check: addr_0_block_578(v2325: bool): // preds: addr_0_block_576 addr_0_block_577
      nextln:   v2326 = bool.icmp.i8.eq v2282, 0x0
      nextln:   v2327 = bool.and v2254, v2326
      nextln:   jumpif v2327, addr_0_block_579, addr_0_block_580
      check: addr_0_block_579: // preds: addr_0_block_578
      nextln:   jump addr_0_block_581(0x1, 0x1)
      check: addr_0_block_580: // preds: addr_0_block_578
      nextln:   jump addr_0_block_581(0x0, 0x0)
      check: addr_0_block_581(v2328: bool, v2329: bool): // preds: addr_0_block_579 addr_0_block_580
      nextln:   v2330 = bool.or v2325, v2328
      nextln:   jumpif v2330, addr_0_block_582, addr_0_block_595
      check: addr_0_block_582: // preds: addr_0_block_581
      nextln:   v2331 = i52.unsigned_from_bits v2278
      nextln:   v2332 = int.modulo v2331, 0x8
      nextln:   v2333 = int.sub v2331, v2332
      nextln:   v2334 = i52.to_bits v2333
      nextln:   v2335 = bool.icmp.i52.eq v2278, v2334
      nextln:   v2336 = i64.load v2278
      nextln:   jumpif v2325, addr_0_block_583, addr_0_block_584
      nextln:   jump addr_0_block_596(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2336, v2255, v2256, v2257, v2258, v2259, v2260, v2261, v2262, v2263, v2264, v2265, v2266, v2267, v2268, v2269, v2270, v2271, v2272, v2273, v2274, v2275, v2276, v2277, v2278, v2279, v2280, 0x0, 0x0)
      check: addr_0_block_583: // no preds!
      nextln:   jump addr_0_block_585
      check: addr_0_block_584: // no preds!
      nextln:   jump addr_0_block_585
      check: addr_0_block_585: // preds: addr_0_block_583 addr_0_block_584
      nextln:   jumpif v2328, addr_0_block_586, addr_0_block_587
      check: addr_0_block_586: // preds: addr_0_block_585
      nextln:   jump addr_0_block_588
      check: addr_0_block_587: // preds: addr_0_block_585
      nextln:   jump addr_0_block_588
      check: addr_0_block_588: // preds: addr_0_block_586 addr_0_block_587
      nextln:   v2947 = i52.unsigned_from_bits v2278
      nextln:   v2948 = int.modulo v2947, 0x8
      nextln:   v2949 = int.sub v2947, v2948
      nextln:   v2950 = i52.to_bits v2949
      nextln:   v2951 = bool.icmp.i52.eq v2278, v2950
      nextln:   v2952 = bool.icmp.i52.eq v2278, 0x13000000
      nextln:   jumpif v2952, addr_0_block_589, addr_0_block_593
      check: addr_0_block_589: // preds: addr_0_block_588
      nextln:   v2953 = i64.unsigned_from_bits v2336
      nextln:   v2954 = bool.icmp.int.eq v2953, 0x4
      nextln:   jumpif v2954, addr_0_block_590, addr_0_block_591
      nextln:   jump addr_0_block_594
      check: addr_0_block_590: // no preds!
      nextln:   jump addr_0_block_592
      check: addr_0_block_591: // no preds!
      nextln:   v2955 = i8.trunc.i64 v2336
      nextln:   v2956 = i8.unsigned_from_bits v2955
      nextln:   jump addr_0_block_592
      check: addr_0_block_592: // preds: addr_0_block_590 addr_0_block_591
      check: addr_0_block_593: // preds: addr_0_block_588
      nextln:   store.i64 v2336, v2278
      nextln:   jump addr_0_block_594
      check: addr_0_block_594: // preds: addr_0_block_589 addr_0_block_593
      check: addr_0_block_595: // preds: addr_0_block_581
      nextln:   jump addr_0_block_596(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_596(v2337: i8, v2338: i1, v2339: i16, v2340: i8, v2341: bool, v2342: bool, v2343: bool, v2344: int, v2345: i64, v2346: i8, v2347: i8, v2348: i52, v2349: i1, v2350: bool, v2351: bool, v2352: int, v2353: i1, v2354: bool, v2355: i4, v2356: i2, v2357: i4, v2358: i8, v2359: i8, v2360: i2, v2361: i2, v2362: bool, v2363: i2, v2364: i2, v2365: bool, v2366: bool, v2367: bool, v2368: bool, v2369: i52, v2370: i1, v2371: i64, v2372: i2, v2373: bool): // preds: addr_0_block_582 addr_0_block_595
      nextln:   v2374 = bool.icmp.i8.ne v2282, 0x0
      nextln:   v2375 = bool.bitwise_not v2374
      nextln:   v2376 = bool.and v2375, 0x1
      nextln:   v2377 = bool.icmp.i8.ne v2282, 0x0
      nextln:   v2378 = bool.bitwise_not v2377
      nextln:   v2379 = bool.and 0x1, v2378
      nextln:   jumpif v2379, addr_0_block_597, addr_0_block_598
      check: addr_0_block_597: // preds: addr_0_block_596
      nextln:   jump addr_0_block_599
      check: addr_0_block_598: // preds: addr_0_block_596
      nextln:   jump addr_0_block_599
      check: addr_0_block_599: // preds: addr_0_block_597 addr_0_block_598
      nextln:   v2380 = bool.icmp.i8.ne v2282, 0x0
      nextln:   jumpif v2380, addr_0_block_600, addr_0_block_601
      check: addr_0_block_600: // preds: addr_0_block_599
      nextln:   jump addr_0_block_602
      check: addr_0_block_601: // preds: addr_0_block_599
      nextln:   jump addr_0_block_602
      check: addr_0_block_602: // preds: addr_0_block_600 addr_0_block_601
      nextln:   jumpif v2303, addr_0_block_603, addr_0_block_604
      check: addr_0_block_603: // preds: addr_0_block_602
      nextln:   jump addr_0_block_605
      check: addr_0_block_604: // preds: addr_0_block_602
      nextln:   jump addr_0_block_605
      check: addr_0_block_605: // preds: addr_0_block_603 addr_0_block_604
      nextln:   v2381 = i52.unsigned_from_bits v2305
      nextln:   v2382 = int.modulo v2381, 0x1
      nextln:   v2383 = int.sub v2381, v2382
      nextln:   v2384 = i52.to_bits v2383
      nextln:   v2385 = bool.icmp.i52.eq v2305, v2384
      nextln:   v2386 = bool.icmp.i52.eq v2305, 0x13000000
      nextln:   jumpif v2386, addr_0_block_606, addr_0_block_610
      check: addr_0_block_606: // preds: addr_0_block_605
      nextln:   v2387 = i8.unsigned_from_bits v2232
      nextln:   v2388 = bool.icmp.int.eq v2387, 0x4
      nextln:   jumpif v2388, addr_0_block_607, addr_0_block_608
      nextln:   jump addr_0_block_611
      check: addr_0_block_607: // no preds!
      nextln:   jump addr_0_block_609
      check: addr_0_block_608: // no preds!
      nextln:   v2957 = i8.unsigned_from_bits v2232
      nextln:   jump addr_0_block_609
      check: addr_0_block_609: // preds: addr_0_block_607 addr_0_block_608
      check: addr_0_block_610: // preds: addr_0_block_605
      nextln:   store.i8 v2232, v2305
      nextln:   jump addr_0_block_611
      check: addr_0_block_611: // preds: addr_0_block_606 addr_0_block_610
      nextln:   v2389 = i64.lshr v3, 0x28
      nextln:   v2390 = i8.trunc.i64 v2389
      nextln:   v2391 = i64.wrapping_add v24, 0x5
      nextln:   v2392 = i64.unsigned_from_bits v2391
      nextln:   v2393 = int.modulo v2392, 0x1
      nextln:   v2394 = int.sub v2392, v2393
      nextln:   v2395 = i64.to_bits v2394
      nextln:   v2396 = bool.icmp.i64.eq v2391, v2395
      nextln:   v2397 = i64.lshr v2391, 0x30
      nextln:   v2398 = i16.trunc.i64 v2397
      nextln:   v2399 = bool.icmp.i16.eq v2398, 0x0
      nextln:   v2400 = bool.bitwise_not v2399
      nextln:   jumpif v2400, addr_0_block_612, addr_0_block_613
      check: addr_0_block_612: // preds: addr_0_block_611
      nextln:   jump addr_0_block_614(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_615(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_613: // preds: addr_0_block_611
      nextln:   jump addr_0_block_614(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_614(v2873: i52, v2874: int, v2875: bool, v2876: bool): // preds: addr_0_block_613
      nextln:   v2877 = i52.trunc.i64 v2391
      nextln:   jump addr_0_block_615(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2877, 0x1, 0x0)
      check: addr_0_block_615(v2401: i3, v2402: i1, v2403: i1, v2404: i1, v2405: i1, v2406: i4, v2407: i1, v2408: bool, v2409: int, v2410: int, v2411: bool, v2412: bool, v2413: i8, v2414: i8, v2415: i52, v2416: i1, v2417: bool, v2418: bool, v2419: int, v2420: i1, v2421: bool, v2422: i4, v2423: i2, v2424: i4, v2425: i8, v2426: i8, v2427: i2, v2428: i2, v2429: bool, v2430: i2, v2431: i2, v2432: bool, v2433: bool, v2434: bool, v2435: bool, v2436: i52, v2437: i1, v2438: i64, v2439: i1, v2440: i8, v2441: i8, v2442: i52, v2443: i1, v2444: bool, v2445: bool, v2446: int, v2447: i1, v2448: bool, v2449: i4, v2450: i2, v2451: i4, v2452: i8, v2453: i8, v2454: i2, v2455: i2, v2456: bool, v2457: i2, v2458: i2, v2459: bool, v2460: bool, v2461: bool, v2462: bool, v2463: i52, v2464: i1, v2465: i64): // preds: addr_0_block_612 addr_0_block_614
      nextln:   v2466 = bool.icmp.i8.ne v2440, 0x0
      nextln:   v2467 = bool.bitwise_not v2466
      nextln:   v2468 = bool.bitwise_not v29
      nextln:   v2469 = bool.and v2468, 0x1
      nextln:   v2470 = bool.or v2469, 0x0
      nextln:   v2471 = bool.icmp.i8.ne v2440, 0x0
      nextln:   v2472 = bool.bitwise_not v2471
      nextln:   v2473 = bool.and v2470, v2472
      nextln:   v2474 = bool.icmp.i8.eq v2452, 0x1
      nextln:   v2475 = bool.and v2473, v2474
      nextln:   jumpif v2475, addr_0_block_616, addr_0_block_617
      check: addr_0_block_616: // preds: addr_0_block_615
      nextln:   jump addr_0_block_618
      check: addr_0_block_617: // preds: addr_0_block_615
      nextln:   jump addr_0_block_618
      check: addr_0_block_618: // preds: addr_0_block_616 addr_0_block_617
      nextln:   v2476 = bool.icmp.i8.ne v2440, 0x0
      nextln:   v2477 = bool.bitwise_not v2476
      nextln:   v2478 = bool.icmp.i8.ne v2440, 0x0
      nextln:   v2479 = bool.bitwise_not v2478
      nextln:   v2480 = bool.icmp.i8.eq v2452, 0x1
      nextln:   v2481 = bool.and v2479, v2480
      nextln:   jumpif v2411, addr_0_block_619, addr_0_block_620
      check: addr_0_block_619: // preds: addr_0_block_618
      nextln:   v2482 = bool.icmp.i8.eq v2440, 0x0
      nextln:   jump addr_0_block_621(0x1)
      check: addr_0_block_620: // preds: addr_0_block_618
      nextln:   jump addr_0_block_621(0x0)
      check: addr_0_block_621(v2483: bool): // preds: addr_0_block_619 addr_0_block_620
      nextln:   v2484 = bool.icmp.i8.eq v2440, 0x0
      nextln:   v2485 = bool.and v2412, v2484
      nextln:   jumpif v2485, addr_0_block_622, addr_0_block_623
      check: addr_0_block_622: // preds: addr_0_block_621
      nextln:   jump addr_0_block_624(0x1, 0x1)
      check: addr_0_block_623: // preds: addr_0_block_621
      nextln:   jump addr_0_block_624(0x0, 0x0)
      check: addr_0_block_624(v2486: bool, v2487: bool): // preds: addr_0_block_622 addr_0_block_623
      nextln:   v2488 = bool.or v2483, v2486
      nextln:   jumpif v2488, addr_0_block_625, addr_0_block_638
      check: addr_0_block_625: // preds: addr_0_block_624
      nextln:   v2489 = i52.unsigned_from_bits v2436
      nextln:   v2490 = int.modulo v2489, 0x8
      nextln:   v2491 = int.sub v2489, v2490
      nextln:   v2492 = i52.to_bits v2491
      nextln:   v2493 = bool.icmp.i52.eq v2436, v2492
      nextln:   v2494 = i64.load v2436
      nextln:   jumpif v2483, addr_0_block_626, addr_0_block_627
      nextln:   jump addr_0_block_639(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2494, v2413, v2414, v2415, v2416, v2417, v2418, v2419, v2420, v2421, v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, v2431, v2432, v2433, v2434, v2435, v2436, v2437, v2438, 0x0, 0x0)
      check: addr_0_block_626: // no preds!
      nextln:   jump addr_0_block_628
      check: addr_0_block_627: // no preds!
      nextln:   jump addr_0_block_628
      check: addr_0_block_628: // preds: addr_0_block_626 addr_0_block_627
      nextln:   jumpif v2486, addr_0_block_629, addr_0_block_630
      check: addr_0_block_629: // preds: addr_0_block_628
      nextln:   jump addr_0_block_631
      check: addr_0_block_630: // preds: addr_0_block_628
      nextln:   jump addr_0_block_631
      check: addr_0_block_631: // preds: addr_0_block_629 addr_0_block_630
      nextln:   v2958 = i52.unsigned_from_bits v2436
      nextln:   v2959 = int.modulo v2958, 0x8
      nextln:   v2960 = int.sub v2958, v2959
      nextln:   v2961 = i52.to_bits v2960
      nextln:   v2962 = bool.icmp.i52.eq v2436, v2961
      nextln:   v2963 = bool.icmp.i52.eq v2436, 0x13000000
      nextln:   jumpif v2963, addr_0_block_632, addr_0_block_636
      check: addr_0_block_632: // preds: addr_0_block_631
      nextln:   v2964 = i64.unsigned_from_bits v2494
      nextln:   v2965 = bool.icmp.int.eq v2964, 0x4
      nextln:   jumpif v2965, addr_0_block_633, addr_0_block_634
      nextln:   jump addr_0_block_637
      check: addr_0_block_633: // no preds!
      nextln:   jump addr_0_block_635
      check: addr_0_block_634: // no preds!
      nextln:   v2966 = i8.trunc.i64 v2494
      nextln:   v2967 = i8.unsigned_from_bits v2966
      nextln:   jump addr_0_block_635
      check: addr_0_block_635: // preds: addr_0_block_633 addr_0_block_634
      check: addr_0_block_636: // preds: addr_0_block_631
      nextln:   store.i64 v2494, v2436
      nextln:   jump addr_0_block_637
      check: addr_0_block_637: // preds: addr_0_block_632 addr_0_block_636
      check: addr_0_block_638: // preds: addr_0_block_624
      nextln:   jump addr_0_block_639(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_639(v2495: i8, v2496: i1, v2497: i16, v2498: i8, v2499: bool, v2500: bool, v2501: bool, v2502: int, v2503: i64, v2504: i8, v2505: i8, v2506: i52, v2507: i1, v2508: bool, v2509: bool, v2510: int, v2511: i1, v2512: bool, v2513: i4, v2514: i2, v2515: i4, v2516: i8, v2517: i8, v2518: i2, v2519: i2, v2520: bool, v2521: i2, v2522: i2, v2523: bool, v2524: bool, v2525: bool, v2526: bool, v2527: i52, v2528: i1, v2529: i64, v2530: i2, v2531: bool): // preds: addr_0_block_625 addr_0_block_638
      nextln:   v2532 = bool.icmp.i8.ne v2440, 0x0
      nextln:   v2533 = bool.bitwise_not v2532
      nextln:   v2534 = bool.and v2533, 0x1
      nextln:   v2535 = bool.icmp.i8.ne v2440, 0x0
      nextln:   v2536 = bool.bitwise_not v2535
      nextln:   v2537 = bool.and 0x1, v2536
      nextln:   jumpif v2537, addr_0_block_640, addr_0_block_641
      check: addr_0_block_640: // preds: addr_0_block_639
      nextln:   jump addr_0_block_642
      check: addr_0_block_641: // preds: addr_0_block_639
      nextln:   jump addr_0_block_642
      check: addr_0_block_642: // preds: addr_0_block_640 addr_0_block_641
      nextln:   v2538 = bool.icmp.i8.ne v2440, 0x0
      nextln:   jumpif v2538, addr_0_block_643, addr_0_block_644
      check: addr_0_block_643: // preds: addr_0_block_642
      nextln:   jump addr_0_block_645
      check: addr_0_block_644: // preds: addr_0_block_642
      nextln:   jump addr_0_block_645
      check: addr_0_block_645: // preds: addr_0_block_643 addr_0_block_644
      nextln:   jumpif v2461, addr_0_block_646, addr_0_block_647
      check: addr_0_block_646: // preds: addr_0_block_645
      nextln:   jump addr_0_block_648
      check: addr_0_block_647: // preds: addr_0_block_645
      nextln:   jump addr_0_block_648
      check: addr_0_block_648: // preds: addr_0_block_646 addr_0_block_647
      nextln:   v2539 = i52.unsigned_from_bits v2463
      nextln:   v2540 = int.modulo v2539, 0x1
      nextln:   v2541 = int.sub v2539, v2540
      nextln:   v2542 = i52.to_bits v2541
      nextln:   v2543 = bool.icmp.i52.eq v2463, v2542
      nextln:   v2544 = bool.icmp.i52.eq v2463, 0x13000000
      nextln:   jumpif v2544, addr_0_block_649, addr_0_block_653
      check: addr_0_block_649: // preds: addr_0_block_648
      nextln:   v2545 = i8.unsigned_from_bits v2390
      nextln:   v2546 = bool.icmp.int.eq v2545, 0x4
      nextln:   jumpif v2546, addr_0_block_650, addr_0_block_651
      nextln:   jump addr_0_block_654
      check: addr_0_block_650: // no preds!
      nextln:   jump addr_0_block_652
      check: addr_0_block_651: // no preds!
      nextln:   v2968 = i8.unsigned_from_bits v2390
      nextln:   jump addr_0_block_652
      check: addr_0_block_652: // preds: addr_0_block_650 addr_0_block_651
      check: addr_0_block_653: // preds: addr_0_block_648
      nextln:   store.i8 v2390, v2463
      nextln:   jump addr_0_block_654
      check: addr_0_block_654: // preds: addr_0_block_649 addr_0_block_653
      nextln:   v2547 = i64.lshr v3, 0x30
      nextln:   v2548 = i8.trunc.i64 v2547
      nextln:   v2549 = i64.wrapping_add v24, 0x6
      nextln:   v2550 = i64.unsigned_from_bits v2549
      nextln:   v2551 = int.modulo v2550, 0x1
      nextln:   v2552 = int.sub v2550, v2551
      nextln:   v2553 = i64.to_bits v2552
      nextln:   v2554 = bool.icmp.i64.eq v2549, v2553
      nextln:   v2555 = i64.lshr v2549, 0x30
      nextln:   v2556 = i16.trunc.i64 v2555
      nextln:   v2557 = bool.icmp.i16.eq v2556, 0x0
      nextln:   v2558 = bool.bitwise_not v2557
      nextln:   jumpif v2558, addr_0_block_655, addr_0_block_656
      check: addr_0_block_655: // preds: addr_0_block_654
      nextln:   jump addr_0_block_657(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_658(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_656: // preds: addr_0_block_654
      nextln:   jump addr_0_block_657(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_657(v2868: i52, v2869: int, v2870: bool, v2871: bool): // preds: addr_0_block_656
      nextln:   v2872 = i52.trunc.i64 v2549
      nextln:   jump addr_0_block_658(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2872, 0x1, 0x0)
      check: addr_0_block_658(v2559: i3, v2560: i1, v2561: i1, v2562: i1, v2563: i1, v2564: i4, v2565: i1, v2566: bool, v2567: int, v2568: int, v2569: bool, v2570: bool, v2571: i8, v2572: i8, v2573: i52, v2574: i1, v2575: bool, v2576: bool, v2577: int, v2578: i1, v2579: bool, v2580: i4, v2581: i2, v2582: i4, v2583: i8, v2584: i8, v2585: i2, v2586: i2, v2587: bool, v2588: i2, v2589: i2, v2590: bool, v2591: bool, v2592: bool, v2593: bool, v2594: i52, v2595: i1, v2596: i64, v2597: i1, v2598: i8, v2599: i8, v2600: i52, v2601: i1, v2602: bool, v2603: bool, v2604: int, v2605: i1, v2606: bool, v2607: i4, v2608: i2, v2609: i4, v2610: i8, v2611: i8, v2612: i2, v2613: i2, v2614: bool, v2615: i2, v2616: i2, v2617: bool, v2618: bool, v2619: bool, v2620: bool, v2621: i52, v2622: i1, v2623: i64): // preds: addr_0_block_655 addr_0_block_657
      nextln:   v2624 = bool.icmp.i8.ne v2598, 0x0
      nextln:   v2625 = bool.bitwise_not v2624
      nextln:   v2626 = bool.bitwise_not v29
      nextln:   v2627 = bool.and v2626, 0x1
      nextln:   v2628 = bool.or v2627, 0x0
      nextln:   v2629 = bool.icmp.i8.ne v2598, 0x0
      nextln:   v2630 = bool.bitwise_not v2629
      nextln:   v2631 = bool.and v2628, v2630
      nextln:   v2632 = bool.icmp.i8.eq v2610, 0x1
      nextln:   v2633 = bool.and v2631, v2632
      nextln:   jumpif v2633, addr_0_block_659, addr_0_block_660
      check: addr_0_block_659: // preds: addr_0_block_658
      nextln:   jump addr_0_block_661
      check: addr_0_block_660: // preds: addr_0_block_658
      nextln:   jump addr_0_block_661
      check: addr_0_block_661: // preds: addr_0_block_659 addr_0_block_660
      nextln:   v2634 = bool.icmp.i8.ne v2598, 0x0
      nextln:   v2635 = bool.bitwise_not v2634
      nextln:   v2636 = bool.icmp.i8.ne v2598, 0x0
      nextln:   v2637 = bool.bitwise_not v2636
      nextln:   v2638 = bool.icmp.i8.eq v2610, 0x1
      nextln:   v2639 = bool.and v2637, v2638
      nextln:   jumpif v2569, addr_0_block_662, addr_0_block_663
      check: addr_0_block_662: // preds: addr_0_block_661
      nextln:   v2640 = bool.icmp.i8.eq v2598, 0x0
      nextln:   jump addr_0_block_664(0x1)
      check: addr_0_block_663: // preds: addr_0_block_661
      nextln:   jump addr_0_block_664(0x0)
      check: addr_0_block_664(v2641: bool): // preds: addr_0_block_662 addr_0_block_663
      nextln:   v2642 = bool.icmp.i8.eq v2598, 0x0
      nextln:   v2643 = bool.and v2570, v2642
      nextln:   jumpif v2643, addr_0_block_665, addr_0_block_666
      check: addr_0_block_665: // preds: addr_0_block_664
      nextln:   jump addr_0_block_667(0x1, 0x1)
      check: addr_0_block_666: // preds: addr_0_block_664
      nextln:   jump addr_0_block_667(0x0, 0x0)
      check: addr_0_block_667(v2644: bool, v2645: bool): // preds: addr_0_block_665 addr_0_block_666
      nextln:   v2646 = bool.or v2641, v2644
      nextln:   jumpif v2646, addr_0_block_668, addr_0_block_681
      check: addr_0_block_668: // preds: addr_0_block_667
      nextln:   v2647 = i52.unsigned_from_bits v2594
      nextln:   v2648 = int.modulo v2647, 0x8
      nextln:   v2649 = int.sub v2647, v2648
      nextln:   v2650 = i52.to_bits v2649
      nextln:   v2651 = bool.icmp.i52.eq v2594, v2650
      nextln:   v2652 = i64.load v2594
      nextln:   jumpif v2641, addr_0_block_669, addr_0_block_670
      nextln:   jump addr_0_block_682(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2652, v2571, v2572, v2573, v2574, v2575, v2576, v2577, v2578, v2579, v2580, v2581, v2582, v2583, v2584, v2585, v2586, v2587, v2588, v2589, v2590, v2591, v2592, v2593, v2594, v2595, v2596, 0x0, 0x0)
      check: addr_0_block_669: // no preds!
      nextln:   jump addr_0_block_671
      check: addr_0_block_670: // no preds!
      nextln:   jump addr_0_block_671
      check: addr_0_block_671: // preds: addr_0_block_669 addr_0_block_670
      nextln:   jumpif v2644, addr_0_block_672, addr_0_block_673
      check: addr_0_block_672: // preds: addr_0_block_671
      nextln:   jump addr_0_block_674
      check: addr_0_block_673: // preds: addr_0_block_671
      nextln:   jump addr_0_block_674
      check: addr_0_block_674: // preds: addr_0_block_672 addr_0_block_673
      nextln:   v2969 = i52.unsigned_from_bits v2594
      nextln:   v2970 = int.modulo v2969, 0x8
      nextln:   v2971 = int.sub v2969, v2970
      nextln:   v2972 = i52.to_bits v2971
      nextln:   v2973 = bool.icmp.i52.eq v2594, v2972
      nextln:   v2974 = bool.icmp.i52.eq v2594, 0x13000000
      nextln:   jumpif v2974, addr_0_block_675, addr_0_block_679
      check: addr_0_block_675: // preds: addr_0_block_674
      nextln:   v2975 = i64.unsigned_from_bits v2652
      nextln:   v2976 = bool.icmp.int.eq v2975, 0x4
      nextln:   jumpif v2976, addr_0_block_676, addr_0_block_677
      nextln:   jump addr_0_block_680
      check: addr_0_block_676: // no preds!
      nextln:   jump addr_0_block_678
      check: addr_0_block_677: // no preds!
      nextln:   v2977 = i8.trunc.i64 v2652
      nextln:   v2978 = i8.unsigned_from_bits v2977
      nextln:   jump addr_0_block_678
      check: addr_0_block_678: // preds: addr_0_block_676 addr_0_block_677
      check: addr_0_block_679: // preds: addr_0_block_674
      nextln:   store.i64 v2652, v2594
      nextln:   jump addr_0_block_680
      check: addr_0_block_680: // preds: addr_0_block_675 addr_0_block_679
      check: addr_0_block_681: // preds: addr_0_block_667
      nextln:   jump addr_0_block_682(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_682(v2653: i8, v2654: i1, v2655: i16, v2656: i8, v2657: bool, v2658: bool, v2659: bool, v2660: int, v2661: i64, v2662: i8, v2663: i8, v2664: i52, v2665: i1, v2666: bool, v2667: bool, v2668: int, v2669: i1, v2670: bool, v2671: i4, v2672: i2, v2673: i4, v2674: i8, v2675: i8, v2676: i2, v2677: i2, v2678: bool, v2679: i2, v2680: i2, v2681: bool, v2682: bool, v2683: bool, v2684: bool, v2685: i52, v2686: i1, v2687: i64, v2688: i2, v2689: bool): // preds: addr_0_block_668 addr_0_block_681
      nextln:   v2690 = bool.icmp.i8.ne v2598, 0x0
      nextln:   v2691 = bool.bitwise_not v2690
      nextln:   v2692 = bool.and v2691, 0x1
      nextln:   v2693 = bool.icmp.i8.ne v2598, 0x0
      nextln:   v2694 = bool.bitwise_not v2693
      nextln:   v2695 = bool.and 0x1, v2694
      nextln:   jumpif v2695, addr_0_block_683, addr_0_block_684
      check: addr_0_block_683: // preds: addr_0_block_682
      nextln:   jump addr_0_block_685
      check: addr_0_block_684: // preds: addr_0_block_682
      nextln:   jump addr_0_block_685
      check: addr_0_block_685: // preds: addr_0_block_683 addr_0_block_684
      nextln:   v2696 = bool.icmp.i8.ne v2598, 0x0
      nextln:   jumpif v2696, addr_0_block_686, addr_0_block_687
      check: addr_0_block_686: // preds: addr_0_block_685
      nextln:   jump addr_0_block_688
      check: addr_0_block_687: // preds: addr_0_block_685
      nextln:   jump addr_0_block_688
      check: addr_0_block_688: // preds: addr_0_block_686 addr_0_block_687
      nextln:   jumpif v2619, addr_0_block_689, addr_0_block_690
      check: addr_0_block_689: // preds: addr_0_block_688
      nextln:   jump addr_0_block_691
      check: addr_0_block_690: // preds: addr_0_block_688
      nextln:   jump addr_0_block_691
      check: addr_0_block_691: // preds: addr_0_block_689 addr_0_block_690
      nextln:   v2697 = i52.unsigned_from_bits v2621
      nextln:   v2698 = int.modulo v2697, 0x1
      nextln:   v2699 = int.sub v2697, v2698
      nextln:   v2700 = i52.to_bits v2699
      nextln:   v2701 = bool.icmp.i52.eq v2621, v2700
      nextln:   v2702 = bool.icmp.i52.eq v2621, 0x13000000
      nextln:   jumpif v2702, addr_0_block_692, addr_0_block_696
      check: addr_0_block_692: // preds: addr_0_block_691
      nextln:   v2703 = i8.unsigned_from_bits v2548
      nextln:   v2704 = bool.icmp.int.eq v2703, 0x4
      nextln:   jumpif v2704, addr_0_block_693, addr_0_block_694
      nextln:   jump addr_0_block_697
      check: addr_0_block_693: // no preds!
      nextln:   jump addr_0_block_695
      check: addr_0_block_694: // no preds!
      nextln:   v2979 = i8.unsigned_from_bits v2548
      nextln:   jump addr_0_block_695
      check: addr_0_block_695: // preds: addr_0_block_693 addr_0_block_694
      check: addr_0_block_696: // preds: addr_0_block_691
      nextln:   store.i8 v2548, v2621
      nextln:   jump addr_0_block_697
      check: addr_0_block_697: // preds: addr_0_block_692 addr_0_block_696
      nextln:   v2705 = i64.lshr v3, 0x38
      nextln:   v2706 = i8.trunc.i64 v2705
      nextln:   v2707 = i64.wrapping_add v24, 0x7
      nextln:   v2708 = i64.unsigned_from_bits v2707
      nextln:   v2709 = int.modulo v2708, 0x1
      nextln:   v2710 = int.sub v2708, v2709
      nextln:   v2711 = i64.to_bits v2710
      nextln:   v2712 = bool.icmp.i64.eq v2707, v2711
      nextln:   v2713 = i64.lshr v2707, 0x30
      nextln:   v2714 = i16.trunc.i64 v2713
      nextln:   v2715 = bool.icmp.i16.eq v2714, 0x0
      nextln:   v2716 = bool.bitwise_not v2715
      nextln:   jumpif v2716, addr_0_block_698, addr_0_block_699
      check: addr_0_block_698: // preds: addr_0_block_697
      nextln:   jump addr_0_block_700(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_701(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_699: // preds: addr_0_block_697
      nextln:   jump addr_0_block_700(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_700(v2863: i52, v2864: int, v2865: bool, v2866: bool): // preds: addr_0_block_699
      nextln:   v2867 = i52.trunc.i64 v2707
      nextln:   jump addr_0_block_701(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2867, 0x1, 0x0)
      check: addr_0_block_701(v2717: i3, v2718: i1, v2719: i1, v2720: i1, v2721: i1, v2722: i4, v2723: i1, v2724: bool, v2725: int, v2726: int, v2727: bool, v2728: bool, v2729: i8, v2730: i8, v2731: i52, v2732: i1, v2733: bool, v2734: bool, v2735: int, v2736: i1, v2737: bool, v2738: i4, v2739: i2, v2740: i4, v2741: i8, v2742: i8, v2743: i2, v2744: i2, v2745: bool, v2746: i2, v2747: i2, v2748: bool, v2749: bool, v2750: bool, v2751: bool, v2752: i52, v2753: i1, v2754: i64, v2755: i1, v2756: i8, v2757: i8, v2758: i52, v2759: i1, v2760: bool, v2761: bool, v2762: int, v2763: i1, v2764: bool, v2765: i4, v2766: i2, v2767: i4, v2768: i8, v2769: i8, v2770: i2, v2771: i2, v2772: bool, v2773: i2, v2774: i2, v2775: bool, v2776: bool, v2777: bool, v2778: bool, v2779: i52, v2780: i1, v2781: i64): // preds: addr_0_block_698 addr_0_block_700
      nextln:   v2782 = bool.icmp.i8.ne v2756, 0x0
      nextln:   v2783 = bool.bitwise_not v2782
      nextln:   v2784 = bool.bitwise_not v29
      nextln:   v2785 = bool.and v2784, 0x1
      nextln:   v2786 = bool.or v2785, 0x0
      nextln:   v2787 = bool.icmp.i8.ne v2756, 0x0
      nextln:   v2788 = bool.bitwise_not v2787
      nextln:   v2789 = bool.and v2786, v2788
      nextln:   v2790 = bool.icmp.i8.eq v2768, 0x1
      nextln:   v2791 = bool.and v2789, v2790
      nextln:   jumpif v2791, addr_0_block_702, addr_0_block_703
      check: addr_0_block_702: // preds: addr_0_block_701
      nextln:   jump addr_0_block_704
      check: addr_0_block_703: // preds: addr_0_block_701
      nextln:   jump addr_0_block_704
      check: addr_0_block_704: // preds: addr_0_block_702 addr_0_block_703
      nextln:   v2792 = bool.icmp.i8.ne v2756, 0x0
      nextln:   v2793 = bool.bitwise_not v2792
      nextln:   v2794 = bool.icmp.i8.ne v2756, 0x0
      nextln:   v2795 = bool.bitwise_not v2794
      nextln:   v2796 = bool.icmp.i8.eq v2768, 0x1
      nextln:   v2797 = bool.and v2795, v2796
      nextln:   jumpif v2727, addr_0_block_705, addr_0_block_706
      check: addr_0_block_705: // preds: addr_0_block_704
      nextln:   v2798 = bool.icmp.i8.eq v2756, 0x0
      nextln:   jump addr_0_block_707(0x1)
      check: addr_0_block_706: // preds: addr_0_block_704
      nextln:   jump addr_0_block_707(0x0)
      check: addr_0_block_707(v2799: bool): // preds: addr_0_block_705 addr_0_block_706
      nextln:   v2800 = bool.icmp.i8.eq v2756, 0x0
      nextln:   v2801 = bool.and v2728, v2800
      nextln:   jumpif v2801, addr_0_block_708, addr_0_block_709
      check: addr_0_block_708: // preds: addr_0_block_707
      nextln:   jump addr_0_block_710(0x1, 0x1)
      check: addr_0_block_709: // preds: addr_0_block_707
      nextln:   jump addr_0_block_710(0x0, 0x0)
      check: addr_0_block_710(v2802: bool, v2803: bool): // preds: addr_0_block_708 addr_0_block_709
      nextln:   v2804 = bool.or v2799, v2802
      nextln:   jumpif v2804, addr_0_block_711, addr_0_block_724
      check: addr_0_block_711: // preds: addr_0_block_710
      nextln:   v2805 = i52.unsigned_from_bits v2752
      nextln:   v2806 = int.modulo v2805, 0x8
      nextln:   v2807 = int.sub v2805, v2806
      nextln:   v2808 = i52.to_bits v2807
      nextln:   v2809 = bool.icmp.i52.eq v2752, v2808
      nextln:   v2810 = i64.load v2752
      nextln:   jumpif v2799, addr_0_block_712, addr_0_block_713
      nextln:   jump addr_0_block_725(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2810, v2729, v2730, v2731, v2732, v2733, v2734, v2735, v2736, v2737, v2738, v2739, v2740, v2741, v2742, v2743, v2744, v2745, v2746, v2747, v2748, v2749, v2750, v2751, v2752, v2753, v2754, 0x0, 0x0)
      check: addr_0_block_712: // no preds!
      nextln:   jump addr_0_block_714
      check: addr_0_block_713: // no preds!
      nextln:   jump addr_0_block_714
      check: addr_0_block_714: // preds: addr_0_block_712 addr_0_block_713
      nextln:   jumpif v2802, addr_0_block_715, addr_0_block_716
      check: addr_0_block_715: // preds: addr_0_block_714
      nextln:   jump addr_0_block_717
      check: addr_0_block_716: // preds: addr_0_block_714
      nextln:   jump addr_0_block_717
      check: addr_0_block_717: // preds: addr_0_block_715 addr_0_block_716
      nextln:   v2980 = i52.unsigned_from_bits v2752
      nextln:   v2981 = int.modulo v2980, 0x8
      nextln:   v2982 = int.sub v2980, v2981
      nextln:   v2983 = i52.to_bits v2982
      nextln:   v2984 = bool.icmp.i52.eq v2752, v2983
      nextln:   v2985 = bool.icmp.i52.eq v2752, 0x13000000
      nextln:   jumpif v2985, addr_0_block_718, addr_0_block_722
      check: addr_0_block_718: // preds: addr_0_block_717
      nextln:   v2986 = i64.unsigned_from_bits v2810
      nextln:   v2987 = bool.icmp.int.eq v2986, 0x4
      nextln:   jumpif v2987, addr_0_block_719, addr_0_block_720
      nextln:   jump addr_0_block_723
      check: addr_0_block_719: // no preds!
      nextln:   jump addr_0_block_721
      check: addr_0_block_720: // no preds!
      nextln:   v2988 = i8.trunc.i64 v2810
      nextln:   v2989 = i8.unsigned_from_bits v2988
      nextln:   jump addr_0_block_721
      check: addr_0_block_721: // preds: addr_0_block_719 addr_0_block_720
      check: addr_0_block_722: // preds: addr_0_block_717
      nextln:   store.i64 v2810, v2752
      nextln:   jump addr_0_block_723
      check: addr_0_block_723: // preds: addr_0_block_718 addr_0_block_722
      check: addr_0_block_724: // preds: addr_0_block_710
      nextln:   jump addr_0_block_725(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_725(v2811: i8, v2812: i1, v2813: i16, v2814: i8, v2815: bool, v2816: bool, v2817: bool, v2818: int, v2819: i64, v2820: i8, v2821: i8, v2822: i52, v2823: i1, v2824: bool, v2825: bool, v2826: int, v2827: i1, v2828: bool, v2829: i4, v2830: i2, v2831: i4, v2832: i8, v2833: i8, v2834: i2, v2835: i2, v2836: bool, v2837: i2, v2838: i2, v2839: bool, v2840: bool, v2841: bool, v2842: bool, v2843: i52, v2844: i1, v2845: i64, v2846: i2, v2847: bool): // preds: addr_0_block_711 addr_0_block_724
      nextln:   v2848 = bool.icmp.i8.ne v2756, 0x0
      nextln:   v2849 = bool.bitwise_not v2848
      nextln:   v2850 = bool.and v2849, 0x1
      nextln:   v2851 = bool.icmp.i8.ne v2756, 0x0
      nextln:   v2852 = bool.bitwise_not v2851
      nextln:   v2853 = bool.and 0x1, v2852
      nextln:   jumpif v2853, addr_0_block_726, addr_0_block_727
      check: addr_0_block_726: // preds: addr_0_block_725
      nextln:   jump addr_0_block_728
      check: addr_0_block_727: // preds: addr_0_block_725
      nextln:   jump addr_0_block_728
      check: addr_0_block_728: // preds: addr_0_block_726 addr_0_block_727
      nextln:   v2854 = bool.icmp.i8.ne v2756, 0x0
      nextln:   jumpif v2854, addr_0_block_729, addr_0_block_730
      check: addr_0_block_729: // preds: addr_0_block_728
      nextln:   jump addr_0_block_731
      check: addr_0_block_730: // preds: addr_0_block_728
      nextln:   jump addr_0_block_731
      check: addr_0_block_731: // preds: addr_0_block_729 addr_0_block_730
      nextln:   jumpif v2777, addr_0_block_732, addr_0_block_733
      check: addr_0_block_732: // preds: addr_0_block_731
      nextln:   jump addr_0_block_734
      check: addr_0_block_733: // preds: addr_0_block_731
      nextln:   jump addr_0_block_734
      check: addr_0_block_734: // preds: addr_0_block_732 addr_0_block_733
      nextln:   v2855 = i52.unsigned_from_bits v2779
      nextln:   v2856 = int.modulo v2855, 0x1
      nextln:   v2857 = int.sub v2855, v2856
      nextln:   v2858 = i52.to_bits v2857
      nextln:   v2859 = bool.icmp.i52.eq v2779, v2858
      nextln:   v2860 = bool.icmp.i52.eq v2779, 0x13000000
      nextln:   jumpif v2860, addr_0_block_735, addr_0_block_739
      check: addr_0_block_735: // preds: addr_0_block_734
      nextln:   v2861 = i8.unsigned_from_bits v2706
      nextln:   v2862 = bool.icmp.int.eq v2861, 0x4
      nextln:   jumpif v2862, addr_0_block_736, addr_0_block_737
      nextln:   jump addr_0_block_740
      check: addr_0_block_736: // no preds!
      nextln:   jump addr_0_block_738
      check: addr_0_block_737: // no preds!
      nextln:   v2990 = i8.unsigned_from_bits v2706
      nextln:   jump addr_0_block_738
      check: addr_0_block_738: // preds: addr_0_block_736 addr_0_block_737
      check: addr_0_block_739: // preds: addr_0_block_734
      nextln:   store.i8 v2706, v2779
      nextln:   jump addr_0_block_740
      check: addr_0_block_740: // preds: addr_0_block_735 addr_0_block_739
      check: addr_0_block_741: // preds: addr_0_block_392
      nextln:   v44 = i64.unsigned_from_bits v24
      nextln:   v45 = int.modulo v44, 0x8
      nextln:   v46 = int.sub v44, v45
      nextln:   v47 = i64.to_bits v46
      nextln:   v48 = bool.icmp.i64.eq v24, v47
      nextln:   v49 = i64.lshr v24, 0x30
      nextln:   v50 = i16.trunc.i64 v49
      nextln:   v51 = bool.icmp.i16.eq v50, 0x0
      nextln:   v52 = bool.bitwise_not v51
      nextln:   jumpif v52, addr_0_block_742, addr_0_block_743
      nextln:   jump addr_0_block_785(v29, 0x0)
      check: addr_0_block_742: // no preds!
      nextln:   jump addr_0_block_744(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_745(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_743: // no preds!
      nextln:   jump addr_0_block_744(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_744(v3137: i52, v3138: int, v3139: bool, v3140: bool): // preds: addr_0_block_743
      nextln:   v3141 = i52.trunc.i64 v24
      nextln:   jump addr_0_block_745(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v3141, 0x1, 0x0)
      check: addr_0_block_745(v2991: i3, v2992: i1, v2993: i1, v2994: i1, v2995: i1, v2996: i4, v2997: i1, v2998: bool, v2999: int, v3000: int, v3001: bool, v3002: bool, v3003: i8, v3004: i8, v3005: i52, v3006: i1, v3007: bool, v3008: bool, v3009: int, v3010: i1, v3011: bool, v3012: i4, v3013: i2, v3014: i4, v3015: i8, v3016: i8, v3017: i2, v3018: i2, v3019: bool, v3020: i2, v3021: i2, v3022: bool, v3023: bool, v3024: bool, v3025: bool, v3026: i52, v3027: i1, v3028: i64, v3029: i1, v3030: i8, v3031: i8, v3032: i52, v3033: i1, v3034: bool, v3035: bool, v3036: int, v3037: i1, v3038: bool, v3039: i4, v3040: i2, v3041: i4, v3042: i8, v3043: i8, v3044: i2, v3045: i2, v3046: bool, v3047: i2, v3048: i2, v3049: bool, v3050: bool, v3051: bool, v3052: bool, v3053: i52, v3054: i1, v3055: i64): // preds: addr_0_block_742 addr_0_block_744
      nextln:   v3056 = bool.icmp.i8.ne v3030, 0x0
      nextln:   v3057 = bool.bitwise_not v3056
      nextln:   v3058 = bool.bitwise_not v29
      nextln:   v3059 = bool.and v3058, 0x1
      nextln:   v3060 = bool.or v3059, 0x0
      nextln:   v3061 = bool.icmp.i8.ne v3030, 0x0
      nextln:   v3062 = bool.bitwise_not v3061
      nextln:   v3063 = bool.and v3060, v3062
      nextln:   v3064 = bool.icmp.i8.eq v3042, 0x1
      nextln:   v3065 = bool.and v3063, v3064
      nextln:   jumpif v3065, addr_0_block_746, addr_0_block_747
      check: addr_0_block_746: // preds: addr_0_block_745
      nextln:   jump addr_0_block_748
      check: addr_0_block_747: // preds: addr_0_block_745
      nextln:   jump addr_0_block_748
      check: addr_0_block_748: // preds: addr_0_block_746 addr_0_block_747
      nextln:   v3066 = bool.icmp.i8.ne v3030, 0x0
      nextln:   v3067 = bool.bitwise_not v3066
      nextln:   v3068 = bool.icmp.i8.ne v3030, 0x0
      nextln:   v3069 = bool.bitwise_not v3068
      nextln:   v3070 = bool.icmp.i8.eq v3042, 0x1
      nextln:   v3071 = bool.and v3069, v3070
      nextln:   jumpif v3001, addr_0_block_749, addr_0_block_750
      check: addr_0_block_749: // preds: addr_0_block_748
      nextln:   v3072 = bool.icmp.i8.eq v3030, 0x0
      nextln:   jump addr_0_block_751(0x1)
      check: addr_0_block_750: // preds: addr_0_block_748
      nextln:   jump addr_0_block_751(0x0)
      check: addr_0_block_751(v3073: bool): // preds: addr_0_block_749 addr_0_block_750
      nextln:   v3074 = bool.icmp.i8.eq v3030, 0x0
      nextln:   v3075 = bool.and v3002, v3074
      nextln:   jumpif v3075, addr_0_block_752, addr_0_block_753
      check: addr_0_block_752: // preds: addr_0_block_751
      nextln:   jump addr_0_block_754(0x1, 0x1)
      check: addr_0_block_753: // preds: addr_0_block_751
      nextln:   jump addr_0_block_754(0x0, 0x0)
      check: addr_0_block_754(v3076: bool, v3077: bool): // preds: addr_0_block_752 addr_0_block_753
      nextln:   v3078 = bool.or v3073, v3076
      nextln:   jumpif v3078, addr_0_block_755, addr_0_block_768
      check: addr_0_block_755: // preds: addr_0_block_754
      nextln:   v3079 = i52.unsigned_from_bits v3026
      nextln:   v3080 = int.modulo v3079, 0x8
      nextln:   v3081 = int.sub v3079, v3080
      nextln:   v3082 = i52.to_bits v3081
      nextln:   v3083 = bool.icmp.i52.eq v3026, v3082
      nextln:   v3084 = i64.load v3026
      nextln:   jumpif v3073, addr_0_block_756, addr_0_block_757
      nextln:   jump addr_0_block_769(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v3084, v3003, v3004, v3005, v3006, v3007, v3008, v3009, v3010, v3011, v3012, v3013, v3014, v3015, v3016, v3017, v3018, v3019, v3020, v3021, v3022, v3023, v3024, v3025, v3026, v3027, v3028, 0x0, 0x0)
      check: addr_0_block_756: // no preds!
      nextln:   jump addr_0_block_758
      check: addr_0_block_757: // no preds!
      nextln:   jump addr_0_block_758
      check: addr_0_block_758: // preds: addr_0_block_756 addr_0_block_757
      nextln:   jumpif v3076, addr_0_block_759, addr_0_block_760
      check: addr_0_block_759: // preds: addr_0_block_758
      nextln:   jump addr_0_block_761
      check: addr_0_block_760: // preds: addr_0_block_758
      nextln:   jump addr_0_block_761
      check: addr_0_block_761: // preds: addr_0_block_759 addr_0_block_760
      nextln:   v3142 = i52.unsigned_from_bits v3026
      nextln:   v3143 = int.modulo v3142, 0x8
      nextln:   v3144 = int.sub v3142, v3143
      nextln:   v3145 = i52.to_bits v3144
      nextln:   v3146 = bool.icmp.i52.eq v3026, v3145
      nextln:   v3147 = bool.icmp.i52.eq v3026, 0x13000000
      nextln:   jumpif v3147, addr_0_block_762, addr_0_block_766
      check: addr_0_block_762: // preds: addr_0_block_761
      nextln:   v3148 = i64.unsigned_from_bits v3084
      nextln:   v3149 = bool.icmp.int.eq v3148, 0x4
      nextln:   jumpif v3149, addr_0_block_763, addr_0_block_764
      nextln:   jump addr_0_block_767
      check: addr_0_block_763: // no preds!
      nextln:   jump addr_0_block_765
      check: addr_0_block_764: // no preds!
      nextln:   v3150 = i8.trunc.i64 v3084
      nextln:   v3151 = i8.unsigned_from_bits v3150
      nextln:   jump addr_0_block_765
      check: addr_0_block_765: // preds: addr_0_block_763 addr_0_block_764
      check: addr_0_block_766: // preds: addr_0_block_761
      nextln:   store.i64 v3084, v3026
      nextln:   jump addr_0_block_767
      check: addr_0_block_767: // preds: addr_0_block_762 addr_0_block_766
      check: addr_0_block_768: // preds: addr_0_block_754
      nextln:   jump addr_0_block_769(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_769(v3085: i8, v3086: i1, v3087: i16, v3088: i8, v3089: bool, v3090: bool, v3091: bool, v3092: int, v3093: i64, v3094: i8, v3095: i8, v3096: i52, v3097: i1, v3098: bool, v3099: bool, v3100: int, v3101: i1, v3102: bool, v3103: i4, v3104: i2, v3105: i4, v3106: i8, v3107: i8, v3108: i2, v3109: i2, v3110: bool, v3111: i2, v3112: i2, v3113: bool, v3114: bool, v3115: bool, v3116: bool, v3117: i52, v3118: i1, v3119: i64, v3120: i2, v3121: bool): // preds: addr_0_block_755 addr_0_block_768
      nextln:   v3122 = bool.icmp.i8.ne v3030, 0x0
      nextln:   v3123 = bool.bitwise_not v3122
      nextln:   v3124 = bool.and v3123, 0x1
      nextln:   v3125 = bool.icmp.i8.ne v3030, 0x0
      nextln:   v3126 = bool.bitwise_not v3125
      nextln:   v3127 = bool.and 0x1, v3126
      nextln:   jumpif v3127, addr_0_block_770, addr_0_block_771
      check: addr_0_block_770: // preds: addr_0_block_769
      nextln:   jump addr_0_block_772
      check: addr_0_block_771: // preds: addr_0_block_769
      nextln:   jump addr_0_block_772
      check: addr_0_block_772: // preds: addr_0_block_770 addr_0_block_771
      nextln:   v3128 = bool.icmp.i8.ne v3030, 0x0
      nextln:   jumpif v3128, addr_0_block_773, addr_0_block_774
      check: addr_0_block_773: // preds: addr_0_block_772
      nextln:   jump addr_0_block_775
      check: addr_0_block_774: // preds: addr_0_block_772
      nextln:   jump addr_0_block_775
      check: addr_0_block_775: // preds: addr_0_block_773 addr_0_block_774
      nextln:   jumpif v3051, addr_0_block_776, addr_0_block_777
      check: addr_0_block_776: // preds: addr_0_block_775
      nextln:   jump addr_0_block_778
      check: addr_0_block_777: // preds: addr_0_block_775
      nextln:   jump addr_0_block_778
      check: addr_0_block_778: // preds: addr_0_block_776 addr_0_block_777
      nextln:   v3129 = i52.unsigned_from_bits v3053
      nextln:   v3130 = int.modulo v3129, 0x8
      nextln:   v3131 = int.sub v3129, v3130
      nextln:   v3132 = i52.to_bits v3131
      nextln:   v3133 = bool.icmp.i52.eq v3053, v3132
      nextln:   v3134 = bool.icmp.i52.eq v3053, 0x13000000
      nextln:   jumpif v3134, addr_0_block_779, addr_0_block_783
      check: addr_0_block_779: // preds: addr_0_block_778
      nextln:   v3135 = i64.unsigned_from_bits v3
      nextln:   v3136 = bool.icmp.int.eq v3135, 0x4
      nextln:   jumpif v3136, addr_0_block_780, addr_0_block_781
      nextln:   jump addr_0_block_784
      check: addr_0_block_780: // no preds!
      nextln:   jump addr_0_block_782
      check: addr_0_block_781: // no preds!
      nextln:   v3152 = i8.trunc.i64 v3
      nextln:   v3153 = i8.unsigned_from_bits v3152
      nextln:   jump addr_0_block_782
      check: addr_0_block_782: // preds: addr_0_block_780 addr_0_block_781
      check: addr_0_block_783: // preds: addr_0_block_778
      nextln:   store.i64 v3, v3053
      nextln:   jump addr_0_block_784
      check: addr_0_block_784: // preds: addr_0_block_779 addr_0_block_783
      check: addr_0_block_785(v42: i64, v43: i8): // preds: addr_0_block_393 addr_0_block_741
- name: stp_2
  bytes: [0x41, 0x08, 0x00, 0x29]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x2"
      nextln:   v1 = i64.wrapping_add v0, 0x0
      nextln:   v2 = i64.read_reg "x1"
      nextln:   v3 = i32.trunc.i64 v2
      nextln:   v4 = i64.read_reg "x2"
      nextln:   v5 = i32.trunc.i64 v4
      nextln:   v6 = i64.wrapping_add v1, 0x0
      nextln:   v7 = i64.unsigned_from_bits v6
      nextln:   v8 = int.modulo v7, 0x4
      nextln:   v9 = int.sub v7, v8
      nextln:   v10 = i64.to_bits v9
      nextln:   v11 = bool.icmp.i64.eq v6, v10
      nextln:   v12 = bool.bitwise_not v11
      nextln:   v13 = bool.bitwise_not v11
      nextln:   jumpif v13, addr_0_block_0, addr_0_block_176
      check: addr_0_block_0: // preds: entry
      nextln:   v14 = i8.trunc.i32 v3
      nextln:   v15 = i64.unsigned_from_bits v6
      nextln:   v16 = int.modulo v15, 0x1
      nextln:   v17 = int.sub v15, v16
      nextln:   v18 = i64.to_bits v17
      nextln:   v19 = bool.icmp.i64.eq v6, v18
      nextln:   v20 = i64.lshr v6, 0x30
      nextln:   v21 = i16.trunc.i64 v20
      nextln:   v22 = bool.icmp.i16.eq v21, 0x0
      nextln:   v23 = bool.bitwise_not v22
      nextln:   jumpif v23, addr_0_block_1, addr_0_block_2
      nextln:   jump addr_0_block_220(v211, v212)
      check: addr_0_block_1: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_2: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_3(v702: i52, v703: int, v704: bool, v705: bool): // preds: addr_0_block_2
      nextln:   v706 = i52.trunc.i64 v6
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v706, 0x1, 0x0)
      check: addr_0_block_4(v64: i3, v65: i1, v66: i1, v67: i1, v68: i1, v69: i4, v70: i1, v71: bool, v72: int, v73: int, v74: bool, v75: bool, v76: i8, v77: i8, v78: i52, v79: i1, v80: bool, v81: bool, v82: int, v83: i1, v84: bool, v85: i4, v86: i2, v87: i4, v88: i8, v89: i8, v90: i2, v91: i2, v92: bool, v93: i2, v94: i2, v95: bool, v96: bool, v97: bool, v98: bool, v99: i52, v100: i1, v101: i64, v102: i1, v103: i8, v104: i8, v105: i52, v106: i1, v107: bool, v108: bool, v109: int, v110: i1, v111: bool, v112: i4, v113: i2, v114: i4, v115: i8, v116: i8, v117: i2, v118: i2, v119: bool, v120: i2, v121: i2, v122: bool, v123: bool, v124: bool, v125: bool, v126: i52, v127: i1, v128: i64): // preds: addr_0_block_1 addr_0_block_3
      nextln:   v129 = bool.icmp.i8.ne v103, 0x0
      nextln:   v130 = bool.bitwise_not v129
      nextln:   v131 = bool.bitwise_not v11
      nextln:   v132 = bool.and v131, 0x1
      nextln:   v133 = bool.or v132, 0x0
      nextln:   v134 = bool.icmp.i8.ne v103, 0x0
      nextln:   v135 = bool.bitwise_not v134
      nextln:   v136 = bool.and v133, v135
      nextln:   v137 = bool.icmp.i8.eq v115, 0x1
      nextln:   v138 = bool.and v136, v137
      nextln:   jumpif v138, addr_0_block_5, addr_0_block_6
      check: addr_0_block_5: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_6: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_7: // preds: addr_0_block_5 addr_0_block_6
      nextln:   v139 = bool.icmp.i8.ne v103, 0x0
      nextln:   v140 = bool.bitwise_not v139
      nextln:   v141 = bool.icmp.i8.ne v103, 0x0
      nextln:   v142 = bool.bitwise_not v141
      nextln:   v143 = bool.icmp.i8.eq v115, 0x1
      nextln:   v144 = bool.and v142, v143
      nextln:   jumpif v74, addr_0_block_8, addr_0_block_9
      check: addr_0_block_8: // preds: addr_0_block_7
      nextln:   v145 = bool.icmp.i8.eq v103, 0x0
      nextln:   jump addr_0_block_10(0x1)
      check: addr_0_block_9: // preds: addr_0_block_7
      nextln:   jump addr_0_block_10(0x0)
      check: addr_0_block_10(v146: bool): // preds: addr_0_block_8 addr_0_block_9
      nextln:   v147 = bool.icmp.i8.eq v103, 0x0
      nextln:   v148 = bool.and v75, v147
      nextln:   jumpif v148, addr_0_block_11, addr_0_block_12
      check: addr_0_block_11: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x1, 0x1)
      check: addr_0_block_12: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x0, 0x0)
      check: addr_0_block_13(v149: bool, v150: bool): // preds: addr_0_block_11 addr_0_block_12
      nextln:   v151 = bool.or v146, v149
      nextln:   jumpif v151, addr_0_block_14, addr_0_block_27
      check: addr_0_block_14: // preds: addr_0_block_13
      nextln:   v152 = i52.unsigned_from_bits v99
      nextln:   v153 = int.modulo v152, 0x8
      nextln:   v154 = int.sub v152, v153
      nextln:   v155 = i52.to_bits v154
      nextln:   v156 = bool.icmp.i52.eq v99, v155
      nextln:   v157 = i64.load v99
      nextln:   jumpif v146, addr_0_block_15, addr_0_block_16
      nextln:   jump addr_0_block_28(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v157, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, 0x0, 0x0)
      check: addr_0_block_15: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_16: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_17: // preds: addr_0_block_15 addr_0_block_16
      nextln:   jumpif v149, addr_0_block_18, addr_0_block_19
      check: addr_0_block_18: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_19: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_20: // preds: addr_0_block_18 addr_0_block_19
      nextln:   v707 = i52.unsigned_from_bits v99
      nextln:   v708 = int.modulo v707, 0x8
      nextln:   v709 = int.sub v707, v708
      nextln:   v710 = i52.to_bits v709
      nextln:   v711 = bool.icmp.i52.eq v99, v710
      nextln:   v712 = bool.icmp.i52.eq v99, 0x13000000
      nextln:   jumpif v712, addr_0_block_21, addr_0_block_25
      check: addr_0_block_21: // preds: addr_0_block_20
      nextln:   v713 = i64.unsigned_from_bits v157
      nextln:   v714 = bool.icmp.int.eq v713, 0x4
      nextln:   jumpif v714, addr_0_block_22, addr_0_block_23
      nextln:   jump addr_0_block_26
      check: addr_0_block_22: // no preds!
      nextln:   jump addr_0_block_24
      check: addr_0_block_23: // no preds!
      nextln:   v715 = i8.trunc.i64 v157
      nextln:   v716 = i8.unsigned_from_bits v715
      nextln:   jump addr_0_block_24
      check: addr_0_block_24: // preds: addr_0_block_22 addr_0_block_23
      check: addr_0_block_25: // preds: addr_0_block_20
      nextln:   store.i64 v157, v99
      nextln:   jump addr_0_block_26
      check: addr_0_block_26: // preds: addr_0_block_21 addr_0_block_25
      check: addr_0_block_27: // preds: addr_0_block_13
      nextln:   jump addr_0_block_28(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_28(v158: i8, v159: i1, v160: i16, v161: i8, v162: bool, v163: bool, v164: bool, v165: int, v166: i64, v167: i8, v168: i8, v169: i52, v170: i1, v171: bool, v172: bool, v173: int, v174: i1, v175: bool, v176: i4, v177: i2, v178: i4, v179: i8, v180: i8, v181: i2, v182: i2, v183: bool, v184: i2, v185: i2, v186: bool, v187: bool, v188: bool, v189: bool, v190: i52, v191: i1, v192: i64, v193: i2, v194: bool): // preds: addr_0_block_14 addr_0_block_27
      nextln:   v195 = bool.icmp.i8.ne v103, 0x0
      nextln:   v196 = bool.bitwise_not v195
      nextln:   v197 = bool.and v196, 0x1
      nextln:   v198 = bool.icmp.i8.ne v103, 0x0
      nextln:   v199 = bool.bitwise_not v198
      nextln:   v200 = bool.and 0x1, v199
      nextln:   jumpif v200, addr_0_block_29, addr_0_block_30
      check: addr_0_block_29: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_30: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_31: // preds: addr_0_block_29 addr_0_block_30
      nextln:   v201 = bool.icmp.i8.ne v103, 0x0
      nextln:   jumpif v201, addr_0_block_32, addr_0_block_33
      check: addr_0_block_32: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_33: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_34: // preds: addr_0_block_32 addr_0_block_33
      nextln:   jumpif v124, addr_0_block_35, addr_0_block_36
      check: addr_0_block_35: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_36: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_37: // preds: addr_0_block_35 addr_0_block_36
      nextln:   v202 = i52.unsigned_from_bits v126
      nextln:   v203 = int.modulo v202, 0x1
      nextln:   v204 = int.sub v202, v203
      nextln:   v205 = i52.to_bits v204
      nextln:   v206 = bool.icmp.i52.eq v126, v205
      nextln:   v207 = bool.icmp.i52.eq v126, 0x13000000
      nextln:   jumpif v207, addr_0_block_38, addr_0_block_42
      check: addr_0_block_38: // preds: addr_0_block_37
      nextln:   v208 = i8.unsigned_from_bits v14
      nextln:   v209 = bool.icmp.int.eq v208, 0x4
      nextln:   jumpif v209, addr_0_block_39, addr_0_block_40
      nextln:   jump addr_0_block_43
      check: addr_0_block_39: // no preds!
      nextln:   jump addr_0_block_41
      check: addr_0_block_40: // no preds!
      nextln:   v717 = i8.unsigned_from_bits v14
      nextln:   jump addr_0_block_41
      check: addr_0_block_41: // preds: addr_0_block_39 addr_0_block_40
      check: addr_0_block_42: // preds: addr_0_block_37
      nextln:   store.i8 v14, v126
      nextln:   jump addr_0_block_43
      check: addr_0_block_43: // preds: addr_0_block_38 addr_0_block_42
      nextln:   v210 = bool.bitwise_not v11
      nextln:   jumpif v210, addr_0_block_44, addr_0_block_45
      check: addr_0_block_44: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v11, 0xc)
      check: addr_0_block_45: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v11, 0x0)
      check: addr_0_block_46(v211: i64, v212: i8): // preds: addr_0_block_44 addr_0_block_45
      nextln:   v213 = i32.lshr v3, 0x8
      nextln:   v214 = i8.trunc.i32 v213
      nextln:   v215 = i64.wrapping_add v6, 0x1
      nextln:   v216 = i64.unsigned_from_bits v215
      nextln:   v217 = int.modulo v216, 0x1
      nextln:   v218 = int.sub v216, v217
      nextln:   v219 = i64.to_bits v218
      nextln:   v220 = bool.icmp.i64.eq v215, v219
      nextln:   v221 = i64.lshr v215, 0x30
      nextln:   v222 = i16.trunc.i64 v221
      nextln:   v223 = bool.icmp.i16.eq v222, 0x0
      nextln:   v224 = bool.bitwise_not v223
      nextln:   jumpif v224, addr_0_block_47, addr_0_block_48
      check: addr_0_block_47: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_48: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_49(v697: i52, v698: int, v699: bool, v700: bool): // preds: addr_0_block_48
      nextln:   v701 = i52.trunc.i64 v215
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v701, 0x1, 0x0)
      check: addr_0_block_50(v225: i3, v226: i1, v227: i1, v228: i1, v229: i1, v230: i4, v231: i1, v232: bool, v233: int, v234: int, v235: bool, v236: bool, v237: i8, v238: i8, v239: i52, v240: i1, v241: bool, v242: bool, v243: int, v244: i1, v245: bool, v246: i4, v247: i2, v248: i4, v249: i8, v250: i8, v251: i2, v252: i2, v253: bool, v254: i2, v255: i2, v256: bool, v257: bool, v258: bool, v259: bool, v260: i52, v261: i1, v262: i64, v263: i1, v264: i8, v265: i8, v266: i52, v267: i1, v268: bool, v269: bool, v270: int, v271: i1, v272: bool, v273: i4, v274: i2, v275: i4, v276: i8, v277: i8, v278: i2, v279: i2, v280: bool, v281: i2, v282: i2, v283: bool, v284: bool, v285: bool, v286: bool, v287: i52, v288: i1, v289: i64): // preds: addr_0_block_47 addr_0_block_49
      nextln:   v290 = bool.icmp.i8.ne v264, 0x0
      nextln:   v291 = bool.bitwise_not v290
      nextln:   v292 = bool.bitwise_not v11
      nextln:   v293 = bool.and v292, 0x1
      nextln:   v294 = bool.or v293, 0x0
      nextln:   v295 = bool.icmp.i8.ne v264, 0x0
      nextln:   v296 = bool.bitwise_not v295
      nextln:   v297 = bool.and v294, v296
      nextln:   v298 = bool.icmp.i8.eq v276, 0x1
      nextln:   v299 = bool.and v297, v298
      nextln:   jumpif v299, addr_0_block_51, addr_0_block_52
      check: addr_0_block_51: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_52: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_53: // preds: addr_0_block_51 addr_0_block_52
      nextln:   v300 = bool.icmp.i8.ne v264, 0x0
      nextln:   v301 = bool.bitwise_not v300
      nextln:   v302 = bool.icmp.i8.ne v264, 0x0
      nextln:   v303 = bool.bitwise_not v302
      nextln:   v304 = bool.icmp.i8.eq v276, 0x1
      nextln:   v305 = bool.and v303, v304
      nextln:   jumpif v235, addr_0_block_54, addr_0_block_55
      check: addr_0_block_54: // preds: addr_0_block_53
      nextln:   v306 = bool.icmp.i8.eq v264, 0x0
      nextln:   jump addr_0_block_56(0x1)
      check: addr_0_block_55: // preds: addr_0_block_53
      nextln:   jump addr_0_block_56(0x0)
      check: addr_0_block_56(v307: bool): // preds: addr_0_block_54 addr_0_block_55
      nextln:   v308 = bool.icmp.i8.eq v264, 0x0
      nextln:   v309 = bool.and v236, v308
      nextln:   jumpif v309, addr_0_block_57, addr_0_block_58
      check: addr_0_block_57: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x1, 0x1)
      check: addr_0_block_58: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x0, 0x0)
      check: addr_0_block_59(v310: bool, v311: bool): // preds: addr_0_block_57 addr_0_block_58
      nextln:   v312 = bool.or v307, v310
      nextln:   jumpif v312, addr_0_block_60, addr_0_block_73
      check: addr_0_block_60: // preds: addr_0_block_59
      nextln:   v313 = i52.unsigned_from_bits v260
      nextln:   v314 = int.modulo v313, 0x8
      nextln:   v315 = int.sub v313, v314
      nextln:   v316 = i52.to_bits v315
      nextln:   v317 = bool.icmp.i52.eq v260, v316
      nextln:   v318 = i64.load v260
      nextln:   jumpif v307, addr_0_block_61, addr_0_block_62
      nextln:   jump addr_0_block_74(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v318, v237, v238, v239, v240, v241, v242, v243, v244, v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v255, v256, v257, v258, v259, v260, v261, v262, 0x0, 0x0)
      check: addr_0_block_61: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_62: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_63: // preds: addr_0_block_61 addr_0_block_62
      nextln:   jumpif v310, addr_0_block_64, addr_0_block_65
      check: addr_0_block_64: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_65: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_66: // preds: addr_0_block_64 addr_0_block_65
      nextln:   v718 = i52.unsigned_from_bits v260
      nextln:   v719 = int.modulo v718, 0x8
      nextln:   v720 = int.sub v718, v719
      nextln:   v721 = i52.to_bits v720
      nextln:   v722 = bool.icmp.i52.eq v260, v721
      nextln:   v723 = bool.icmp.i52.eq v260, 0x13000000
      nextln:   jumpif v723, addr_0_block_67, addr_0_block_71
      check: addr_0_block_67: // preds: addr_0_block_66
      nextln:   v724 = i64.unsigned_from_bits v318
      nextln:   v725 = bool.icmp.int.eq v724, 0x4
      nextln:   jumpif v725, addr_0_block_68, addr_0_block_69
      nextln:   jump addr_0_block_72
      check: addr_0_block_68: // no preds!
      nextln:   jump addr_0_block_70
      check: addr_0_block_69: // no preds!
      nextln:   v726 = i8.trunc.i64 v318
      nextln:   v727 = i8.unsigned_from_bits v726
      nextln:   jump addr_0_block_70
      check: addr_0_block_70: // preds: addr_0_block_68 addr_0_block_69
      check: addr_0_block_71: // preds: addr_0_block_66
      nextln:   store.i64 v318, v260
      nextln:   jump addr_0_block_72
      check: addr_0_block_72: // preds: addr_0_block_67 addr_0_block_71
      check: addr_0_block_73: // preds: addr_0_block_59
      nextln:   jump addr_0_block_74(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_74(v319: i8, v320: i1, v321: i16, v322: i8, v323: bool, v324: bool, v325: bool, v326: int, v327: i64, v328: i8, v329: i8, v330: i52, v331: i1, v332: bool, v333: bool, v334: int, v335: i1, v336: bool, v337: i4, v338: i2, v339: i4, v340: i8, v341: i8, v342: i2, v343: i2, v344: bool, v345: i2, v346: i2, v347: bool, v348: bool, v349: bool, v350: bool, v351: i52, v352: i1, v353: i64, v354: i2, v355: bool): // preds: addr_0_block_60 addr_0_block_73
      nextln:   v356 = bool.icmp.i8.ne v264, 0x0
      nextln:   v357 = bool.bitwise_not v356
      nextln:   v358 = bool.and v357, 0x1
      nextln:   v359 = bool.icmp.i8.ne v264, 0x0
      nextln:   v360 = bool.bitwise_not v359
      nextln:   v361 = bool.and 0x1, v360
      nextln:   jumpif v361, addr_0_block_75, addr_0_block_76
      check: addr_0_block_75: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_76: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_77: // preds: addr_0_block_75 addr_0_block_76
      nextln:   v362 = bool.icmp.i8.ne v264, 0x0
      nextln:   jumpif v362, addr_0_block_78, addr_0_block_79
      check: addr_0_block_78: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_79: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_80: // preds: addr_0_block_78 addr_0_block_79
      nextln:   jumpif v285, addr_0_block_81, addr_0_block_82
      check: addr_0_block_81: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_82: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_83: // preds: addr_0_block_81 addr_0_block_82
      nextln:   v363 = i52.unsigned_from_bits v287
      nextln:   v364 = int.modulo v363, 0x1
      nextln:   v365 = int.sub v363, v364
      nextln:   v366 = i52.to_bits v365
      nextln:   v367 = bool.icmp.i52.eq v287, v366
      nextln:   v368 = bool.icmp.i52.eq v287, 0x13000000
      nextln:   jumpif v368, addr_0_block_84, addr_0_block_88
      check: addr_0_block_84: // preds: addr_0_block_83
      nextln:   v369 = i8.unsigned_from_bits v214
      nextln:   v370 = bool.icmp.int.eq v369, 0x4
      nextln:   jumpif v370, addr_0_block_85, addr_0_block_86
      nextln:   jump addr_0_block_89
      check: addr_0_block_85: // no preds!
      nextln:   jump addr_0_block_87
      check: addr_0_block_86: // no preds!
      nextln:   v728 = i8.unsigned_from_bits v214
      nextln:   jump addr_0_block_87
      check: addr_0_block_87: // preds: addr_0_block_85 addr_0_block_86
      check: addr_0_block_88: // preds: addr_0_block_83
      nextln:   store.i8 v214, v287
      nextln:   jump addr_0_block_89
      check: addr_0_block_89: // preds: addr_0_block_84 addr_0_block_88
      nextln:   v371 = i32.lshr v3, 0x10
      nextln:   v372 = i8.trunc.i32 v371
      nextln:   v373 = i64.wrapping_add v6, 0x2
      nextln:   v374 = i64.unsigned_from_bits v373
      nextln:   v375 = int.modulo v374, 0x1
      nextln:   v376 = int.sub v374, v375
      nextln:   v377 = i64.to_bits v376
      nextln:   v378 = bool.icmp.i64.eq v373, v377
      nextln:   v379 = i64.lshr v373, 0x30
      nextln:   v380 = i16.trunc.i64 v379
      nextln:   v381 = bool.icmp.i16.eq v380, 0x0
      nextln:   v382 = bool.bitwise_not v381
      nextln:   jumpif v382, addr_0_block_90, addr_0_block_91
      check: addr_0_block_90: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_91: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_92(v692: i52, v693: int, v694: bool, v695: bool): // preds: addr_0_block_91
      nextln:   v696 = i52.trunc.i64 v373
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v696, 0x1, 0x0)
      check: addr_0_block_93(v383: i3, v384: i1, v385: i1, v386: i1, v387: i1, v388: i4, v389: i1, v390: bool, v391: int, v392: int, v393: bool, v394: bool, v395: i8, v396: i8, v397: i52, v398: i1, v399: bool, v400: bool, v401: int, v402: i1, v403: bool, v404: i4, v405: i2, v406: i4, v407: i8, v408: i8, v409: i2, v410: i2, v411: bool, v412: i2, v413: i2, v414: bool, v415: bool, v416: bool, v417: bool, v418: i52, v419: i1, v420: i64, v421: i1, v422: i8, v423: i8, v424: i52, v425: i1, v426: bool, v427: bool, v428: int, v429: i1, v430: bool, v431: i4, v432: i2, v433: i4, v434: i8, v435: i8, v436: i2, v437: i2, v438: bool, v439: i2, v440: i2, v441: bool, v442: bool, v443: bool, v444: bool, v445: i52, v446: i1, v447: i64): // preds: addr_0_block_90 addr_0_block_92
      nextln:   v448 = bool.icmp.i8.ne v422, 0x0
      nextln:   v449 = bool.bitwise_not v448
      nextln:   v450 = bool.bitwise_not v11
      nextln:   v451 = bool.and v450, 0x1
      nextln:   v452 = bool.or v451, 0x0
      nextln:   v453 = bool.icmp.i8.ne v422, 0x0
      nextln:   v454 = bool.bitwise_not v453
      nextln:   v455 = bool.and v452, v454
      nextln:   v456 = bool.icmp.i8.eq v434, 0x1
      nextln:   v457 = bool.and v455, v456
      nextln:   jumpif v457, addr_0_block_94, addr_0_block_95
      check: addr_0_block_94: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_95: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_96: // preds: addr_0_block_94 addr_0_block_95
      nextln:   v458 = bool.icmp.i8.ne v422, 0x0
      nextln:   v459 = bool.bitwise_not v458
      nextln:   v460 = bool.icmp.i8.ne v422, 0x0
      nextln:   v461 = bool.bitwise_not v460
      nextln:   v462 = bool.icmp.i8.eq v434, 0x1
      nextln:   v463 = bool.and v461, v462
      nextln:   jumpif v393, addr_0_block_97, addr_0_block_98
      check: addr_0_block_97: // preds: addr_0_block_96
      nextln:   v464 = bool.icmp.i8.eq v422, 0x0
      nextln:   jump addr_0_block_99(0x1)
      check: addr_0_block_98: // preds: addr_0_block_96
      nextln:   jump addr_0_block_99(0x0)
      check: addr_0_block_99(v465: bool): // preds: addr_0_block_97 addr_0_block_98
      nextln:   v466 = bool.icmp.i8.eq v422, 0x0
      nextln:   v467 = bool.and v394, v466
      nextln:   jumpif v467, addr_0_block_100, addr_0_block_101
      check: addr_0_block_100: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x1, 0x1)
      check: addr_0_block_101: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x0, 0x0)
      check: addr_0_block_102(v468: bool, v469: bool): // preds: addr_0_block_100 addr_0_block_101
      nextln:   v470 = bool.or v465, v468
      nextln:   jumpif v470, addr_0_block_103, addr_0_block_116
      check: addr_0_block_103: // preds: addr_0_block_102
      nextln:   v471 = i52.unsigned_from_bits v418
      nextln:   v472 = int.modulo v471, 0x8
      nextln:   v473 = int.sub v471, v472
      nextln:   v474 = i52.to_bits v473
      nextln:   v475 = bool.icmp.i52.eq v418, v474
      nextln:   v476 = i64.load v418
      nextln:   jumpif v465, addr_0_block_104, addr_0_block_105
      nextln:   jump addr_0_block_117(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v476, v395, v396, v397, v398, v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410, v411, v412, v413, v414, v415, v416, v417, v418, v419, v420, 0x0, 0x0)
      check: addr_0_block_104: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_105: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_106: // preds: addr_0_block_104 addr_0_block_105
      nextln:   jumpif v468, addr_0_block_107, addr_0_block_108
      check: addr_0_block_107: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_108: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_109: // preds: addr_0_block_107 addr_0_block_108
      nextln:   v729 = i52.unsigned_from_bits v418
      nextln:   v730 = int.modulo v729, 0x8
      nextln:   v731 = int.sub v729, v730
      nextln:   v732 = i52.to_bits v731
      nextln:   v733 = bool.icmp.i52.eq v418, v732
      nextln:   v734 = bool.icmp.i52.eq v418, 0x13000000
      nextln:   jumpif v734, addr_0_block_110, addr_0_block_114
      check: addr_0_block_110: // preds: addr_0_block_109
      nextln:   v735 = i64.unsigned_from_bits v476
      nextln:   v736 = bool.icmp.int.eq v735, 0x4
      nextln:   jumpif v736, addr_0_block_111, addr_0_block_112
      nextln:   jump addr_0_block_115
      check: addr_0_block_111: // no preds!
      nextln:   jump addr_0_block_113
      check: addr_0_block_112: // no preds!
      nextln:   v737 = i8.trunc.i64 v476
      nextln:   v738 = i8.unsigned_from_bits v737
      nextln:   jump addr_0_block_113
      check: addr_0_block_113: // preds: addr_0_block_111 addr_0_block_112
      check: addr_0_block_114: // preds: addr_0_block_109
      nextln:   store.i64 v476, v418
      nextln:   jump addr_0_block_115
      check: addr_0_block_115: // preds: addr_0_block_110 addr_0_block_114
      check: addr_0_block_116: // preds: addr_0_block_102
      nextln:   jump addr_0_block_117(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_117(v477: i8, v478: i1, v479: i16, v480: i8, v481: bool, v482: bool, v483: bool, v484: int, v485: i64, v486: i8, v487: i8, v488: i52, v489: i1, v490: bool, v491: bool, v492: int, v493: i1, v494: bool, v495: i4, v496: i2, v497: i4, v498: i8, v499: i8, v500: i2, v501: i2, v502: bool, v503: i2, v504: i2, v505: bool, v506: bool, v507: bool, v508: bool, v509: i52, v510: i1, v511: i64, v512: i2, v513: bool): // preds: addr_0_block_103 addr_0_block_116
      nextln:   v514 = bool.icmp.i8.ne v422, 0x0
      nextln:   v515 = bool.bitwise_not v514
      nextln:   v516 = bool.and v515, 0x1
      nextln:   v517 = bool.icmp.i8.ne v422, 0x0
      nextln:   v518 = bool.bitwise_not v517
      nextln:   v519 = bool.and 0x1, v518
      nextln:   jumpif v519, addr_0_block_118, addr_0_block_119
      check: addr_0_block_118: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_119: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_120: // preds: addr_0_block_118 addr_0_block_119
      nextln:   v520 = bool.icmp.i8.ne v422, 0x0
      nextln:   jumpif v520, addr_0_block_121, addr_0_block_122
      check: addr_0_block_121: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_122: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_123: // preds: addr_0_block_121 addr_0_block_122
      nextln:   jumpif v443, addr_0_block_124, addr_0_block_125
      check: addr_0_block_124: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_125: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_126: // preds: addr_0_block_124 addr_0_block_125
      nextln:   v521 = i52.unsigned_from_bits v445
      nextln:   v522 = int.modulo v521, 0x1
      nextln:   v523 = int.sub v521, v522
      nextln:   v524 = i52.to_bits v523
      nextln:   v525 = bool.icmp.i52.eq v445, v524
      nextln:   v526 = bool.icmp.i52.eq v445, 0x13000000
      nextln:   jumpif v526, addr_0_block_127, addr_0_block_131
      check: addr_0_block_127: // preds: addr_0_block_126
      nextln:   v527 = i8.unsigned_from_bits v372
      nextln:   v528 = bool.icmp.int.eq v527, 0x4
      nextln:   jumpif v528, addr_0_block_128, addr_0_block_129
      nextln:   jump addr_0_block_132
      check: addr_0_block_128: // no preds!
      nextln:   jump addr_0_block_130
      check: addr_0_block_129: // no preds!
      nextln:   v739 = i8.unsigned_from_bits v372
      nextln:   jump addr_0_block_130
      check: addr_0_block_130: // preds: addr_0_block_128 addr_0_block_129
      check: addr_0_block_131: // preds: addr_0_block_126
      nextln:   store.i8 v372, v445
      nextln:   jump addr_0_block_132
      check: addr_0_block_132: // preds: addr_0_block_127 addr_0_block_131
      nextln:   v529 = i32.lshr v3, 0x18
      nextln:   v530 = i8.trunc.i32 v529
      nextln:   v531 = i64.wrapping_add v6, 0x3
      nextln:   v532 = i64.unsigned_from_bits v531
      nextln:   v533 = int.modulo v532, 0x1
      nextln:   v534 = int.sub v532, v533
      nextln:   v535 = i64.to_bits v534
      nextln:   v536 = bool.icmp.i64.eq v531, v535
      nextln:   v537 = i64.lshr v531, 0x30
      nextln:   v538 = i16.trunc.i64 v537
      nextln:   v539 = bool.icmp.i16.eq v538, 0x0
      nextln:   v540 = bool.bitwise_not v539
      nextln:   jumpif v540, addr_0_block_133, addr_0_block_134
      check: addr_0_block_133: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_134: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_135(v687: i52, v688: int, v689: bool, v690: bool): // preds: addr_0_block_134
      nextln:   v691 = i52.trunc.i64 v531
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v691, 0x1, 0x0)
      check: addr_0_block_136(v541: i3, v542: i1, v543: i1, v544: i1, v545: i1, v546: i4, v547: i1, v548: bool, v549: int, v550: int, v551: bool, v552: bool, v553: i8, v554: i8, v555: i52, v556: i1, v557: bool, v558: bool, v559: int, v560: i1, v561: bool, v562: i4, v563: i2, v564: i4, v565: i8, v566: i8, v567: i2, v568: i2, v569: bool, v570: i2, v571: i2, v572: bool, v573: bool, v574: bool, v575: bool, v576: i52, v577: i1, v578: i64, v579: i1, v580: i8, v581: i8, v582: i52, v583: i1, v584: bool, v585: bool, v586: int, v587: i1, v588: bool, v589: i4, v590: i2, v591: i4, v592: i8, v593: i8, v594: i2, v595: i2, v596: bool, v597: i2, v598: i2, v599: bool, v600: bool, v601: bool, v602: bool, v603: i52, v604: i1, v605: i64): // preds: addr_0_block_133 addr_0_block_135
      nextln:   v606 = bool.icmp.i8.ne v580, 0x0
      nextln:   v607 = bool.bitwise_not v606
      nextln:   v608 = bool.bitwise_not v11
      nextln:   v609 = bool.and v608, 0x1
      nextln:   v610 = bool.or v609, 0x0
      nextln:   v611 = bool.icmp.i8.ne v580, 0x0
      nextln:   v612 = bool.bitwise_not v611
      nextln:   v613 = bool.and v610, v612
      nextln:   v614 = bool.icmp.i8.eq v592, 0x1
      nextln:   v615 = bool.and v613, v614
      nextln:   jumpif v615, addr_0_block_137, addr_0_block_138
      check: addr_0_block_137: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_138: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_139: // preds: addr_0_block_137 addr_0_block_138
      nextln:   v616 = bool.icmp.i8.ne v580, 0x0
      nextln:   v617 = bool.bitwise_not v616
      nextln:   v618 = bool.icmp.i8.ne v580, 0x0
      nextln:   v619 = bool.bitwise_not v618
      nextln:   v620 = bool.icmp.i8.eq v592, 0x1
      nextln:   v621 = bool.and v619, v620
      nextln:   jumpif v551, addr_0_block_140, addr_0_block_141
      check: addr_0_block_140: // preds: addr_0_block_139
      nextln:   v622 = bool.icmp.i8.eq v580, 0x0
      nextln:   jump addr_0_block_142(0x1)
      check: addr_0_block_141: // preds: addr_0_block_139
      nextln:   jump addr_0_block_142(0x0)
      check: addr_0_block_142(v623: bool): // preds: addr_0_block_140 addr_0_block_141
      nextln:   v624 = bool.icmp.i8.eq v580, 0x0
      nextln:   v625 = bool.and v552, v624
      nextln:   jumpif v625, addr_0_block_143, addr_0_block_144
      check: addr_0_block_143: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x1, 0x1)
      check: addr_0_block_144: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x0, 0x0)
      check: addr_0_block_145(v626: bool, v627: bool): // preds: addr_0_block_143 addr_0_block_144
      nextln:   v628 = bool.or v623, v626
      nextln:   jumpif v628, addr_0_block_146, addr_0_block_159
      check: addr_0_block_146: // preds: addr_0_block_145
      nextln:   v629 = i52.unsigned_from_bits v576
      nextln:   v630 = int.modulo v629, 0x8
      nextln:   v631 = int.sub v629, v630
      nextln:   v632 = i52.to_bits v631
      nextln:   v633 = bool.icmp.i52.eq v576, v632
      nextln:   v634 = i64.load v576
      nextln:   jumpif v623, addr_0_block_147, addr_0_block_148
      nextln:   jump addr_0_block_160(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v634, v553, v554, v555, v556, v557, v558, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569, v570, v571, v572, v573, v574, v575, v576, v577, v578, 0x0, 0x0)
      check: addr_0_block_147: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_148: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_149: // preds: addr_0_block_147 addr_0_block_148
      nextln:   jumpif v626, addr_0_block_150, addr_0_block_151
      check: addr_0_block_150: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_151: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_152: // preds: addr_0_block_150 addr_0_block_151
      nextln:   v740 = i52.unsigned_from_bits v576
      nextln:   v741 = int.modulo v740, 0x8
      nextln:   v742 = int.sub v740, v741
      nextln:   v743 = i52.to_bits v742
      nextln:   v744 = bool.icmp.i52.eq v576, v743
      nextln:   v745 = bool.icmp.i52.eq v576, 0x13000000
      nextln:   jumpif v745, addr_0_block_153, addr_0_block_157
      check: addr_0_block_153: // preds: addr_0_block_152
      nextln:   v746 = i64.unsigned_from_bits v634
      nextln:   v747 = bool.icmp.int.eq v746, 0x4
      nextln:   jumpif v747, addr_0_block_154, addr_0_block_155
      nextln:   jump addr_0_block_158
      check: addr_0_block_154: // no preds!
      nextln:   jump addr_0_block_156
      check: addr_0_block_155: // no preds!
      nextln:   v748 = i8.trunc.i64 v634
      nextln:   v749 = i8.unsigned_from_bits v748
      nextln:   jump addr_0_block_156
      check: addr_0_block_156: // preds: addr_0_block_154 addr_0_block_155
      check: addr_0_block_157: // preds: addr_0_block_152
      nextln:   store.i64 v634, v576
      nextln:   jump addr_0_block_158
      check: addr_0_block_158: // preds: addr_0_block_153 addr_0_block_157
      check: addr_0_block_159: // preds: addr_0_block_145
      nextln:   jump addr_0_block_160(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_160(v635: i8, v636: i1, v637: i16, v638: i8, v639: bool, v640: bool, v641: bool, v642: int, v643: i64, v644: i8, v645: i8, v646: i52, v647: i1, v648: bool, v649: bool, v650: int, v651: i1, v652: bool, v653: i4, v654: i2, v655: i4, v656: i8, v657: i8, v658: i2, v659: i2, v660: bool, v661: i2, v662: i2, v663: bool, v664: bool, v665: bool, v666: bool, v667: i52, v668: i1, v669: i64, v670: i2, v671: bool): // preds: addr_0_block_146 addr_0_block_159
      nextln:   v672 = bool.icmp.i8.ne v580, 0x0
      nextln:   v673 = bool.bitwise_not v672
      nextln:   v674 = bool.and v673, 0x1
      nextln:   v675 = bool.icmp.i8.ne v580, 0x0
      nextln:   v676 = bool.bitwise_not v675
      nextln:   v677 = bool.and 0x1, v676
      nextln:   jumpif v677, addr_0_block_161, addr_0_block_162
      check: addr_0_block_161: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_162: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_163: // preds: addr_0_block_161 addr_0_block_162
      nextln:   v678 = bool.icmp.i8.ne v580, 0x0
      nextln:   jumpif v678, addr_0_block_164, addr_0_block_165
      check: addr_0_block_164: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_165: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_166: // preds: addr_0_block_164 addr_0_block_165
      nextln:   jumpif v601, addr_0_block_167, addr_0_block_168
      check: addr_0_block_167: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_168: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_169: // preds: addr_0_block_167 addr_0_block_168
      nextln:   v679 = i52.unsigned_from_bits v603
      nextln:   v680 = int.modulo v679, 0x1
      nextln:   v681 = int.sub v679, v680
      nextln:   v682 = i52.to_bits v681
      nextln:   v683 = bool.icmp.i52.eq v603, v682
      nextln:   v684 = bool.icmp.i52.eq v603, 0x13000000
      nextln:   jumpif v684, addr_0_block_170, addr_0_block_174
      check: addr_0_block_170: // preds: addr_0_block_169
      nextln:   v685 = i8.unsigned_from_bits v530
      nextln:   v686 = bool.icmp.int.eq v685, 0x4
      nextln:   jumpif v686, addr_0_block_171, addr_0_block_172
      nextln:   jump addr_0_block_175
      check: addr_0_block_171: // no preds!
      nextln:   jump addr_0_block_173
      check: addr_0_block_172: // no preds!
      nextln:   v750 = i8.unsigned_from_bits v530
      nextln:   jump addr_0_block_173
      check: addr_0_block_173: // preds: addr_0_block_171 addr_0_block_172
      check: addr_0_block_174: // preds: addr_0_block_169
      nextln:   store.i8 v530, v603
      nextln:   jump addr_0_block_175
      check: addr_0_block_175: // preds: addr_0_block_170 addr_0_block_174
      check: addr_0_block_176: // preds: entry
      nextln:   v55 = i64.unsigned_from_bits v6
      nextln:   v56 = int.modulo v55, 0x4
      nextln:   v57 = int.sub v55, v56
      nextln:   v58 = i64.to_bits v57
      nextln:   v59 = bool.icmp.i64.eq v6, v58
      nextln:   v60 = i64.lshr v6, 0x30
      nextln:   v61 = i16.trunc.i64 v60
      nextln:   v62 = bool.icmp.i16.eq v61, 0x0
      nextln:   v63 = bool.bitwise_not v62
      nextln:   jumpif v63, addr_0_block_177, addr_0_block_178
      nextln:   jump addr_0_block_220(v11, 0x0)
      check: addr_0_block_177: // no preds!
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_180(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_178: // no preds!
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_179(v897: i52, v898: int, v899: bool, v900: bool): // preds: addr_0_block_178
      nextln:   v901 = i52.trunc.i64 v6
      nextln:   jump addr_0_block_180(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v901, 0x1, 0x0)
      check: addr_0_block_180(v751: i3, v752: i1, v753: i1, v754: i1, v755: i1, v756: i4, v757: i1, v758: bool, v759: int, v760: int, v761: bool, v762: bool, v763: i8, v764: i8, v765: i52, v766: i1, v767: bool, v768: bool, v769: int, v770: i1, v771: bool, v772: i4, v773: i2, v774: i4, v775: i8, v776: i8, v777: i2, v778: i2, v779: bool, v780: i2, v781: i2, v782: bool, v783: bool, v784: bool, v785: bool, v786: i52, v787: i1, v788: i64, v789: i1, v790: i8, v791: i8, v792: i52, v793: i1, v794: bool, v795: bool, v796: int, v797: i1, v798: bool, v799: i4, v800: i2, v801: i4, v802: i8, v803: i8, v804: i2, v805: i2, v806: bool, v807: i2, v808: i2, v809: bool, v810: bool, v811: bool, v812: bool, v813: i52, v814: i1, v815: i64): // preds: addr_0_block_177 addr_0_block_179
      nextln:   v816 = bool.icmp.i8.ne v790, 0x0
      nextln:   v817 = bool.bitwise_not v816
      nextln:   v818 = bool.bitwise_not v11
      nextln:   v819 = bool.and v818, 0x1
      nextln:   v820 = bool.or v819, 0x0
      nextln:   v821 = bool.icmp.i8.ne v790, 0x0
      nextln:   v822 = bool.bitwise_not v821
      nextln:   v823 = bool.and v820, v822
      nextln:   v824 = bool.icmp.i8.eq v802, 0x1
      nextln:   v825 = bool.and v823, v824
      nextln:   jumpif v825, addr_0_block_181, addr_0_block_182
      check: addr_0_block_181: // preds: addr_0_block_180
      nextln:   jump addr_0_block_183
      check: addr_0_block_182: // preds: addr_0_block_180
      nextln:   jump addr_0_block_183
      check: addr_0_block_183: // preds: addr_0_block_181 addr_0_block_182
      nextln:   v826 = bool.icmp.i8.ne v790, 0x0
      nextln:   v827 = bool.bitwise_not v826
      nextln:   v828 = bool.icmp.i8.ne v790, 0x0
      nextln:   v829 = bool.bitwise_not v828
      nextln:   v830 = bool.icmp.i8.eq v802, 0x1
      nextln:   v831 = bool.and v829, v830
      nextln:   jumpif v761, addr_0_block_184, addr_0_block_185
      check: addr_0_block_184: // preds: addr_0_block_183
      nextln:   v832 = bool.icmp.i8.eq v790, 0x0
      nextln:   jump addr_0_block_186(0x1)
      check: addr_0_block_185: // preds: addr_0_block_183
      nextln:   jump addr_0_block_186(0x0)
      check: addr_0_block_186(v833: bool): // preds: addr_0_block_184 addr_0_block_185
      nextln:   v834 = bool.icmp.i8.eq v790, 0x0
      nextln:   v835 = bool.and v762, v834
      nextln:   jumpif v835, addr_0_block_187, addr_0_block_188
      check: addr_0_block_187: // preds: addr_0_block_186
      nextln:   jump addr_0_block_189(0x1, 0x1)
      check: addr_0_block_188: // preds: addr_0_block_186
      nextln:   jump addr_0_block_189(0x0, 0x0)
      check: addr_0_block_189(v836: bool, v837: bool): // preds: addr_0_block_187 addr_0_block_188
      nextln:   v838 = bool.or v833, v836
      nextln:   jumpif v838, addr_0_block_190, addr_0_block_203
      check: addr_0_block_190: // preds: addr_0_block_189
      nextln:   v839 = i52.unsigned_from_bits v786
      nextln:   v840 = int.modulo v839, 0x8
      nextln:   v841 = int.sub v839, v840
      nextln:   v842 = i52.to_bits v841
      nextln:   v843 = bool.icmp.i52.eq v786, v842
      nextln:   v844 = i64.load v786
      nextln:   jumpif v833, addr_0_block_191, addr_0_block_192
      nextln:   jump addr_0_block_204(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v844, v763, v764, v765, v766, v767, v768, v769, v770, v771, v772, v773, v774, v775, v776, v777, v778, v779, v780, v781, v782, v783, v784, v785, v786, v787, v788, 0x0, 0x0)
      check: addr_0_block_191: // no preds!
      nextln:   jump addr_0_block_193
      check: addr_0_block_192: // no preds!
      nextln:   jump addr_0_block_193
      check: addr_0_block_193: // preds: addr_0_block_191 addr_0_block_192
      nextln:   jumpif v836, addr_0_block_194, addr_0_block_195
      check: addr_0_block_194: // preds: addr_0_block_193
      nextln:   jump addr_0_block_196
      check: addr_0_block_195: // preds: addr_0_block_193
      nextln:   jump addr_0_block_196
      check: addr_0_block_196: // preds: addr_0_block_194 addr_0_block_195
      nextln:   v902 = i52.unsigned_from_bits v786
      nextln:   v903 = int.modulo v902, 0x8
      nextln:   v904 = int.sub v902, v903
      nextln:   v905 = i52.to_bits v904
      nextln:   v906 = bool.icmp.i52.eq v786, v905
      nextln:   v907 = bool.icmp.i52.eq v786, 0x13000000
      nextln:   jumpif v907, addr_0_block_197, addr_0_block_201
      check: addr_0_block_197: // preds: addr_0_block_196
      nextln:   v908 = i64.unsigned_from_bits v844
      nextln:   v909 = bool.icmp.int.eq v908, 0x4
      nextln:   jumpif v909, addr_0_block_198, addr_0_block_199
      nextln:   jump addr_0_block_202
      check: addr_0_block_198: // no preds!
      nextln:   jump addr_0_block_200
      check: addr_0_block_199: // no preds!
      nextln:   v910 = i8.trunc.i64 v844
      nextln:   v911 = i8.unsigned_from_bits v910
      nextln:   jump addr_0_block_200
      check: addr_0_block_200: // preds: addr_0_block_198 addr_0_block_199
      check: addr_0_block_201: // preds: addr_0_block_196
      nextln:   store.i64 v844, v786
      nextln:   jump addr_0_block_202
      check: addr_0_block_202: // preds: addr_0_block_197 addr_0_block_201
      check: addr_0_block_203: // preds: addr_0_block_189
      nextln:   jump addr_0_block_204(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_204(v845: i8, v846: i1, v847: i16, v848: i8, v849: bool, v850: bool, v851: bool, v852: int, v853: i64, v854: i8, v855: i8, v856: i52, v857: i1, v858: bool, v859: bool, v860: int, v861: i1, v862: bool, v863: i4, v864: i2, v865: i4, v866: i8, v867: i8, v868: i2, v869: i2, v870: bool, v871: i2, v872: i2, v873: bool, v874: bool, v875: bool, v876: bool, v877: i52, v878: i1, v879: i64, v880: i2, v881: bool): // preds: addr_0_block_190 addr_0_block_203
      nextln:   v882 = bool.icmp.i8.ne v790, 0x0
      nextln:   v883 = bool.bitwise_not v882
      nextln:   v884 = bool.and v883, 0x1
      nextln:   v885 = bool.icmp.i8.ne v790, 0x0
      nextln:   v886 = bool.bitwise_not v885
      nextln:   v887 = bool.and 0x1, v886
      nextln:   jumpif v887, addr_0_block_205, addr_0_block_206
      check: addr_0_block_205: // preds: addr_0_block_204
      nextln:   jump addr_0_block_207
      check: addr_0_block_206: // preds: addr_0_block_204
      nextln:   jump addr_0_block_207
      check: addr_0_block_207: // preds: addr_0_block_205 addr_0_block_206
      nextln:   v888 = bool.icmp.i8.ne v790, 0x0
      nextln:   jumpif v888, addr_0_block_208, addr_0_block_209
      check: addr_0_block_208: // preds: addr_0_block_207
      nextln:   jump addr_0_block_210
      check: addr_0_block_209: // preds: addr_0_block_207
      nextln:   jump addr_0_block_210
      check: addr_0_block_210: // preds: addr_0_block_208 addr_0_block_209
      nextln:   jumpif v811, addr_0_block_211, addr_0_block_212
      check: addr_0_block_211: // preds: addr_0_block_210
      nextln:   jump addr_0_block_213
      check: addr_0_block_212: // preds: addr_0_block_210
      nextln:   jump addr_0_block_213
      check: addr_0_block_213: // preds: addr_0_block_211 addr_0_block_212
      nextln:   v889 = i52.unsigned_from_bits v813
      nextln:   v890 = int.modulo v889, 0x4
      nextln:   v891 = int.sub v889, v890
      nextln:   v892 = i52.to_bits v891
      nextln:   v893 = bool.icmp.i52.eq v813, v892
      nextln:   v894 = bool.icmp.i52.eq v813, 0x13000000
      nextln:   jumpif v894, addr_0_block_214, addr_0_block_218
      check: addr_0_block_214: // preds: addr_0_block_213
      nextln:   v895 = i32.unsigned_from_bits v3
      nextln:   v896 = bool.icmp.int.eq v895, 0x4
      nextln:   jumpif v896, addr_0_block_215, addr_0_block_216
      nextln:   jump addr_0_block_219
      check: addr_0_block_215: // no preds!
      nextln:   jump addr_0_block_217
      check: addr_0_block_216: // no preds!
      nextln:   v912 = i8.trunc.i32 v3
      nextln:   v913 = i8.unsigned_from_bits v912
      nextln:   jump addr_0_block_217
      check: addr_0_block_217: // preds: addr_0_block_215 addr_0_block_216
      check: addr_0_block_218: // preds: addr_0_block_213
      nextln:   store.i32 v3, v813
      nextln:   jump addr_0_block_219
      check: addr_0_block_219: // preds: addr_0_block_214 addr_0_block_218
      check: addr_0_block_220(v24: i64, v25: i8): // preds: addr_0_block_0 addr_0_block_176
      nextln:   v26 = i64.wrapping_add v1, 0x4
      nextln:   v27 = i64.unsigned_from_bits v26
      nextln:   v28 = int.modulo v27, 0x4
      nextln:   v29 = int.sub v27, v28
      nextln:   v30 = i64.to_bits v29
      nextln:   v31 = bool.icmp.i64.eq v26, v30
      nextln:   v32 = bool.bitwise_not v31
      nextln:   v33 = bool.bitwise_not v31
      nextln:   jumpif v33, addr_0_block_221, addr_0_block_397
      check: addr_0_block_221: // preds: addr_0_block_220
      nextln:   v34 = i8.trunc.i32 v5
      nextln:   v35 = i64.unsigned_from_bits v26
      nextln:   v36 = int.modulo v35, 0x1
      nextln:   v37 = int.sub v35, v36
      nextln:   v38 = i64.to_bits v37
      nextln:   v39 = bool.icmp.i64.eq v26, v38
      nextln:   v40 = i64.lshr v26, 0x30
      nextln:   v41 = i16.trunc.i64 v40
      nextln:   v42 = bool.icmp.i16.eq v41, 0x0
      nextln:   v43 = bool.bitwise_not v42
      nextln:   jumpif v43, addr_0_block_222, addr_0_block_223
      nextln:   jump addr_0_block_441(v1061, v1062)
      check: addr_0_block_222: // no preds!
      nextln:   jump addr_0_block_224(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_225(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_223: // no preds!
      nextln:   jump addr_0_block_224(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_224(v1552: i52, v1553: int, v1554: bool, v1555: bool): // preds: addr_0_block_223
      nextln:   v1556 = i52.trunc.i64 v26
      nextln:   jump addr_0_block_225(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1556, 0x1, 0x0)
      check: addr_0_block_225(v914: i3, v915: i1, v916: i1, v917: i1, v918: i1, v919: i4, v920: i1, v921: bool, v922: int, v923: int, v924: bool, v925: bool, v926: i8, v927: i8, v928: i52, v929: i1, v930: bool, v931: bool, v932: int, v933: i1, v934: bool, v935: i4, v936: i2, v937: i4, v938: i8, v939: i8, v940: i2, v941: i2, v942: bool, v943: i2, v944: i2, v945: bool, v946: bool, v947: bool, v948: bool, v949: i52, v950: i1, v951: i64, v952: i1, v953: i8, v954: i8, v955: i52, v956: i1, v957: bool, v958: bool, v959: int, v960: i1, v961: bool, v962: i4, v963: i2, v964: i4, v965: i8, v966: i8, v967: i2, v968: i2, v969: bool, v970: i2, v971: i2, v972: bool, v973: bool, v974: bool, v975: bool, v976: i52, v977: i1, v978: i64): // preds: addr_0_block_222 addr_0_block_224
      nextln:   v979 = bool.icmp.i8.ne v953, 0x0
      nextln:   v980 = bool.bitwise_not v979
      nextln:   v981 = bool.bitwise_not v31
      nextln:   v982 = bool.and v981, 0x1
      nextln:   v983 = bool.or v982, 0x0
      nextln:   v984 = bool.icmp.i8.ne v953, 0x0
      nextln:   v985 = bool.bitwise_not v984
      nextln:   v986 = bool.and v983, v985
      nextln:   v987 = bool.icmp.i8.eq v965, 0x1
      nextln:   v988 = bool.and v986, v987
      nextln:   jumpif v988, addr_0_block_226, addr_0_block_227
      check: addr_0_block_226: // preds: addr_0_block_225
      nextln:   jump addr_0_block_228
      check: addr_0_block_227: // preds: addr_0_block_225
      nextln:   jump addr_0_block_228
      check: addr_0_block_228: // preds: addr_0_block_226 addr_0_block_227
      nextln:   v989 = bool.icmp.i8.ne v953, 0x0
      nextln:   v990 = bool.bitwise_not v989
      nextln:   v991 = bool.icmp.i8.ne v953, 0x0
      nextln:   v992 = bool.bitwise_not v991
      nextln:   v993 = bool.icmp.i8.eq v965, 0x1
      nextln:   v994 = bool.and v992, v993
      nextln:   jumpif v924, addr_0_block_229, addr_0_block_230
      check: addr_0_block_229: // preds: addr_0_block_228
      nextln:   v995 = bool.icmp.i8.eq v953, 0x0
      nextln:   jump addr_0_block_231(0x1)
      check: addr_0_block_230: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x0)
      check: addr_0_block_231(v996: bool): // preds: addr_0_block_229 addr_0_block_230
      nextln:   v997 = bool.icmp.i8.eq v953, 0x0
      nextln:   v998 = bool.and v925, v997
      nextln:   jumpif v998, addr_0_block_232, addr_0_block_233
      check: addr_0_block_232: // preds: addr_0_block_231
      nextln:   jump addr_0_block_234(0x1, 0x1)
      check: addr_0_block_233: // preds: addr_0_block_231
      nextln:   jump addr_0_block_234(0x0, 0x0)
      check: addr_0_block_234(v999: bool, v1000: bool): // preds: addr_0_block_232 addr_0_block_233
      nextln:   v1001 = bool.or v996, v999
      nextln:   jumpif v1001, addr_0_block_235, addr_0_block_248
      check: addr_0_block_235: // preds: addr_0_block_234
      nextln:   v1002 = i52.unsigned_from_bits v949
      nextln:   v1003 = int.modulo v1002, 0x8
      nextln:   v1004 = int.sub v1002, v1003
      nextln:   v1005 = i52.to_bits v1004
      nextln:   v1006 = bool.icmp.i52.eq v949, v1005
      nextln:   v1007 = i64.load v949
      nextln:   jumpif v996, addr_0_block_236, addr_0_block_237
      nextln:   jump addr_0_block_249(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1007, v926, v927, v928, v929, v930, v931, v932, v933, v934, v935, v936, v937, v938, v939, v940, v941, v942, v943, v944, v945, v946, v947, v948, v949, v950, v951, 0x0, 0x0)
      check: addr_0_block_236: // no preds!
      nextln:   jump addr_0_block_238
      check: addr_0_block_237: // no preds!
      nextln:   jump addr_0_block_238
      check: addr_0_block_238: // preds: addr_0_block_236 addr_0_block_237
      nextln:   jumpif v999, addr_0_block_239, addr_0_block_240
      check: addr_0_block_239: // preds: addr_0_block_238
      nextln:   jump addr_0_block_241
      check: addr_0_block_240: // preds: addr_0_block_238
      nextln:   jump addr_0_block_241
      check: addr_0_block_241: // preds: addr_0_block_239 addr_0_block_240
      nextln:   v1557 = i52.unsigned_from_bits v949
      nextln:   v1558 = int.modulo v1557, 0x8
      nextln:   v1559 = int.sub v1557, v1558
      nextln:   v1560 = i52.to_bits v1559
      nextln:   v1561 = bool.icmp.i52.eq v949, v1560
      nextln:   v1562 = bool.icmp.i52.eq v949, 0x13000000
      nextln:   jumpif v1562, addr_0_block_242, addr_0_block_246
      check: addr_0_block_242: // preds: addr_0_block_241
      nextln:   v1563 = i64.unsigned_from_bits v1007
      nextln:   v1564 = bool.icmp.int.eq v1563, 0x4
      nextln:   jumpif v1564, addr_0_block_243, addr_0_block_244
      nextln:   jump addr_0_block_247
      check: addr_0_block_243: // no preds!
      nextln:   jump addr_0_block_245
      check: addr_0_block_244: // no preds!
      nextln:   v1565 = i8.trunc.i64 v1007
      nextln:   v1566 = i8.unsigned_from_bits v1565
      nextln:   jump addr_0_block_245
      check: addr_0_block_245: // preds: addr_0_block_243 addr_0_block_244
      check: addr_0_block_246: // preds: addr_0_block_241
      nextln:   store.i64 v1007, v949
      nextln:   jump addr_0_block_247
      check: addr_0_block_247: // preds: addr_0_block_242 addr_0_block_246
      check: addr_0_block_248: // preds: addr_0_block_234
      nextln:   jump addr_0_block_249(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_249(v1008: i8, v1009: i1, v1010: i16, v1011: i8, v1012: bool, v1013: bool, v1014: bool, v1015: int, v1016: i64, v1017: i8, v1018: i8, v1019: i52, v1020: i1, v1021: bool, v1022: bool, v1023: int, v1024: i1, v1025: bool, v1026: i4, v1027: i2, v1028: i4, v1029: i8, v1030: i8, v1031: i2, v1032: i2, v1033: bool, v1034: i2, v1035: i2, v1036: bool, v1037: bool, v1038: bool, v1039: bool, v1040: i52, v1041: i1, v1042: i64, v1043: i2, v1044: bool): // preds: addr_0_block_235 addr_0_block_248
      nextln:   v1045 = bool.icmp.i8.ne v953, 0x0
      nextln:   v1046 = bool.bitwise_not v1045
      nextln:   v1047 = bool.and v1046, 0x1
      nextln:   v1048 = bool.icmp.i8.ne v953, 0x0
      nextln:   v1049 = bool.bitwise_not v1048
      nextln:   v1050 = bool.and 0x1, v1049
      nextln:   jumpif v1050, addr_0_block_250, addr_0_block_251
      check: addr_0_block_250: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_251: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_252: // preds: addr_0_block_250 addr_0_block_251
      nextln:   v1051 = bool.icmp.i8.ne v953, 0x0
      nextln:   jumpif v1051, addr_0_block_253, addr_0_block_254
      check: addr_0_block_253: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_254: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_255: // preds: addr_0_block_253 addr_0_block_254
      nextln:   jumpif v974, addr_0_block_256, addr_0_block_257
      check: addr_0_block_256: // preds: addr_0_block_255
      nextln:   jump addr_0_block_258
      check: addr_0_block_257: // preds: addr_0_block_255
      nextln:   jump addr_0_block_258
      check: addr_0_block_258: // preds: addr_0_block_256 addr_0_block_257
      nextln:   v1052 = i52.unsigned_from_bits v976
      nextln:   v1053 = int.modulo v1052, 0x1
      nextln:   v1054 = int.sub v1052, v1053
      nextln:   v1055 = i52.to_bits v1054
      nextln:   v1056 = bool.icmp.i52.eq v976, v1055
      nextln:   v1057 = bool.icmp.i52.eq v976, 0x13000000
      nextln:   jumpif v1057, addr_0_block_259, addr_0_block_263
      check: addr_0_block_259: // preds: addr_0_block_258
      nextln:   v1058 = i8.unsigned_from_bits v34
      nextln:   v1059 = bool.icmp.int.eq v1058, 0x4
      nextln:   jumpif v1059, addr_0_block_260, addr_0_block_261
      nextln:   jump addr_0_block_264
      check: addr_0_block_260: // no preds!
      nextln:   jump addr_0_block_262
      check: addr_0_block_261: // no preds!
      nextln:   v1567 = i8.unsigned_from_bits v34
      nextln:   jump addr_0_block_262
      check: addr_0_block_262: // preds: addr_0_block_260 addr_0_block_261
      check: addr_0_block_263: // preds: addr_0_block_258
      nextln:   store.i8 v34, v976
      nextln:   jump addr_0_block_264
      check: addr_0_block_264: // preds: addr_0_block_259 addr_0_block_263
      nextln:   v1060 = bool.bitwise_not v31
      nextln:   jumpif v1060, addr_0_block_265, addr_0_block_266
      check: addr_0_block_265: // preds: addr_0_block_264
      nextln:   jump addr_0_block_267(v31, 0xc)
      check: addr_0_block_266: // preds: addr_0_block_264
      nextln:   jump addr_0_block_267(v31, 0x0)
      check: addr_0_block_267(v1061: i64, v1062: i8): // preds: addr_0_block_265 addr_0_block_266
      nextln:   v1063 = i32.lshr v5, 0x8
      nextln:   v1064 = i8.trunc.i32 v1063
      nextln:   v1065 = i64.wrapping_add v26, 0x1
      nextln:   v1066 = i64.unsigned_from_bits v1065
      nextln:   v1067 = int.modulo v1066, 0x1
      nextln:   v1068 = int.sub v1066, v1067
      nextln:   v1069 = i64.to_bits v1068
      nextln:   v1070 = bool.icmp.i64.eq v1065, v1069
      nextln:   v1071 = i64.lshr v1065, 0x30
      nextln:   v1072 = i16.trunc.i64 v1071
      nextln:   v1073 = bool.icmp.i16.eq v1072, 0x0
      nextln:   v1074 = bool.bitwise_not v1073
      nextln:   jumpif v1074, addr_0_block_268, addr_0_block_269
      check: addr_0_block_268: // preds: addr_0_block_267
      nextln:   jump addr_0_block_270(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_271(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_269: // preds: addr_0_block_267
      nextln:   jump addr_0_block_270(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_270(v1547: i52, v1548: int, v1549: bool, v1550: bool): // preds: addr_0_block_269
      nextln:   v1551 = i52.trunc.i64 v1065
      nextln:   jump addr_0_block_271(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1551, 0x1, 0x0)
      check: addr_0_block_271(v1075: i3, v1076: i1, v1077: i1, v1078: i1, v1079: i1, v1080: i4, v1081: i1, v1082: bool, v1083: int, v1084: int, v1085: bool, v1086: bool, v1087: i8, v1088: i8, v1089: i52, v1090: i1, v1091: bool, v1092: bool, v1093: int, v1094: i1, v1095: bool, v1096: i4, v1097: i2, v1098: i4, v1099: i8, v1100: i8, v1101: i2, v1102: i2, v1103: bool, v1104: i2, v1105: i2, v1106: bool, v1107: bool, v1108: bool, v1109: bool, v1110: i52, v1111: i1, v1112: i64, v1113: i1, v1114: i8, v1115: i8, v1116: i52, v1117: i1, v1118: bool, v1119: bool, v1120: int, v1121: i1, v1122: bool, v1123: i4, v1124: i2, v1125: i4, v1126: i8, v1127: i8, v1128: i2, v1129: i2, v1130: bool, v1131: i2, v1132: i2, v1133: bool, v1134: bool, v1135: bool, v1136: bool, v1137: i52, v1138: i1, v1139: i64): // preds: addr_0_block_268 addr_0_block_270
      nextln:   v1140 = bool.icmp.i8.ne v1114, 0x0
      nextln:   v1141 = bool.bitwise_not v1140
      nextln:   v1142 = bool.bitwise_not v31
      nextln:   v1143 = bool.and v1142, 0x1
      nextln:   v1144 = bool.or v1143, 0x0
      nextln:   v1145 = bool.icmp.i8.ne v1114, 0x0
      nextln:   v1146 = bool.bitwise_not v1145
      nextln:   v1147 = bool.and v1144, v1146
      nextln:   v1148 = bool.icmp.i8.eq v1126, 0x1
      nextln:   v1149 = bool.and v1147, v1148
      nextln:   jumpif v1149, addr_0_block_272, addr_0_block_273
      check: addr_0_block_272: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274
      check: addr_0_block_273: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274
      check: addr_0_block_274: // preds: addr_0_block_272 addr_0_block_273
      nextln:   v1150 = bool.icmp.i8.ne v1114, 0x0
      nextln:   v1151 = bool.bitwise_not v1150
      nextln:   v1152 = bool.icmp.i8.ne v1114, 0x0
      nextln:   v1153 = bool.bitwise_not v1152
      nextln:   v1154 = bool.icmp.i8.eq v1126, 0x1
      nextln:   v1155 = bool.and v1153, v1154
      nextln:   jumpif v1085, addr_0_block_275, addr_0_block_276
      check: addr_0_block_275: // preds: addr_0_block_274
      nextln:   v1156 = bool.icmp.i8.eq v1114, 0x0
      nextln:   jump addr_0_block_277(0x1)
      check: addr_0_block_276: // preds: addr_0_block_274
      nextln:   jump addr_0_block_277(0x0)
      check: addr_0_block_277(v1157: bool): // preds: addr_0_block_275 addr_0_block_276
      nextln:   v1158 = bool.icmp.i8.eq v1114, 0x0
      nextln:   v1159 = bool.and v1086, v1158
      nextln:   jumpif v1159, addr_0_block_278, addr_0_block_279
      check: addr_0_block_278: // preds: addr_0_block_277
      nextln:   jump addr_0_block_280(0x1, 0x1)
      check: addr_0_block_279: // preds: addr_0_block_277
      nextln:   jump addr_0_block_280(0x0, 0x0)
      check: addr_0_block_280(v1160: bool, v1161: bool): // preds: addr_0_block_278 addr_0_block_279
      nextln:   v1162 = bool.or v1157, v1160
      nextln:   jumpif v1162, addr_0_block_281, addr_0_block_294
      check: addr_0_block_281: // preds: addr_0_block_280
      nextln:   v1163 = i52.unsigned_from_bits v1110
      nextln:   v1164 = int.modulo v1163, 0x8
      nextln:   v1165 = int.sub v1163, v1164
      nextln:   v1166 = i52.to_bits v1165
      nextln:   v1167 = bool.icmp.i52.eq v1110, v1166
      nextln:   v1168 = i64.load v1110
      nextln:   jumpif v1157, addr_0_block_282, addr_0_block_283
      nextln:   jump addr_0_block_295(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1168, v1087, v1088, v1089, v1090, v1091, v1092, v1093, v1094, v1095, v1096, v1097, v1098, v1099, v1100, v1101, v1102, v1103, v1104, v1105, v1106, v1107, v1108, v1109, v1110, v1111, v1112, 0x0, 0x0)
      check: addr_0_block_282: // no preds!
      nextln:   jump addr_0_block_284
      check: addr_0_block_283: // no preds!
      nextln:   jump addr_0_block_284
      check: addr_0_block_284: // preds: addr_0_block_282 addr_0_block_283
      nextln:   jumpif v1160, addr_0_block_285, addr_0_block_286
      check: addr_0_block_285: // preds: addr_0_block_284
      nextln:   jump addr_0_block_287
      check: addr_0_block_286: // preds: addr_0_block_284
      nextln:   jump addr_0_block_287
      check: addr_0_block_287: // preds: addr_0_block_285 addr_0_block_286
      nextln:   v1568 = i52.unsigned_from_bits v1110
      nextln:   v1569 = int.modulo v1568, 0x8
      nextln:   v1570 = int.sub v1568, v1569
      nextln:   v1571 = i52.to_bits v1570
      nextln:   v1572 = bool.icmp.i52.eq v1110, v1571
      nextln:   v1573 = bool.icmp.i52.eq v1110, 0x13000000
      nextln:   jumpif v1573, addr_0_block_288, addr_0_block_292
      check: addr_0_block_288: // preds: addr_0_block_287
      nextln:   v1574 = i64.unsigned_from_bits v1168
      nextln:   v1575 = bool.icmp.int.eq v1574, 0x4
      nextln:   jumpif v1575, addr_0_block_289, addr_0_block_290
      nextln:   jump addr_0_block_293
      check: addr_0_block_289: // no preds!
      nextln:   jump addr_0_block_291
      check: addr_0_block_290: // no preds!
      nextln:   v1576 = i8.trunc.i64 v1168
      nextln:   v1577 = i8.unsigned_from_bits v1576
      nextln:   jump addr_0_block_291
      check: addr_0_block_291: // preds: addr_0_block_289 addr_0_block_290
      check: addr_0_block_292: // preds: addr_0_block_287
      nextln:   store.i64 v1168, v1110
      nextln:   jump addr_0_block_293
      check: addr_0_block_293: // preds: addr_0_block_288 addr_0_block_292
      check: addr_0_block_294: // preds: addr_0_block_280
      nextln:   jump addr_0_block_295(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_295(v1169: i8, v1170: i1, v1171: i16, v1172: i8, v1173: bool, v1174: bool, v1175: bool, v1176: int, v1177: i64, v1178: i8, v1179: i8, v1180: i52, v1181: i1, v1182: bool, v1183: bool, v1184: int, v1185: i1, v1186: bool, v1187: i4, v1188: i2, v1189: i4, v1190: i8, v1191: i8, v1192: i2, v1193: i2, v1194: bool, v1195: i2, v1196: i2, v1197: bool, v1198: bool, v1199: bool, v1200: bool, v1201: i52, v1202: i1, v1203: i64, v1204: i2, v1205: bool): // preds: addr_0_block_281 addr_0_block_294
      nextln:   v1206 = bool.icmp.i8.ne v1114, 0x0
      nextln:   v1207 = bool.bitwise_not v1206
      nextln:   v1208 = bool.and v1207, 0x1
      nextln:   v1209 = bool.icmp.i8.ne v1114, 0x0
      nextln:   v1210 = bool.bitwise_not v1209
      nextln:   v1211 = bool.and 0x1, v1210
      nextln:   jumpif v1211, addr_0_block_296, addr_0_block_297
      check: addr_0_block_296: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_297: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_298: // preds: addr_0_block_296 addr_0_block_297
      nextln:   v1212 = bool.icmp.i8.ne v1114, 0x0
      nextln:   jumpif v1212, addr_0_block_299, addr_0_block_300
      check: addr_0_block_299: // preds: addr_0_block_298
      nextln:   jump addr_0_block_301
      check: addr_0_block_300: // preds: addr_0_block_298
      nextln:   jump addr_0_block_301
      check: addr_0_block_301: // preds: addr_0_block_299 addr_0_block_300
      nextln:   jumpif v1135, addr_0_block_302, addr_0_block_303
      check: addr_0_block_302: // preds: addr_0_block_301
      nextln:   jump addr_0_block_304
      check: addr_0_block_303: // preds: addr_0_block_301
      nextln:   jump addr_0_block_304
      check: addr_0_block_304: // preds: addr_0_block_302 addr_0_block_303
      nextln:   v1213 = i52.unsigned_from_bits v1137
      nextln:   v1214 = int.modulo v1213, 0x1
      nextln:   v1215 = int.sub v1213, v1214
      nextln:   v1216 = i52.to_bits v1215
      nextln:   v1217 = bool.icmp.i52.eq v1137, v1216
      nextln:   v1218 = bool.icmp.i52.eq v1137, 0x13000000
      nextln:   jumpif v1218, addr_0_block_305, addr_0_block_309
      check: addr_0_block_305: // preds: addr_0_block_304
      nextln:   v1219 = i8.unsigned_from_bits v1064
      nextln:   v1220 = bool.icmp.int.eq v1219, 0x4
      nextln:   jumpif v1220, addr_0_block_306, addr_0_block_307
      nextln:   jump addr_0_block_310
      check: addr_0_block_306: // no preds!
      nextln:   jump addr_0_block_308
      check: addr_0_block_307: // no preds!
      nextln:   v1578 = i8.unsigned_from_bits v1064
      nextln:   jump addr_0_block_308
      check: addr_0_block_308: // preds: addr_0_block_306 addr_0_block_307
      check: addr_0_block_309: // preds: addr_0_block_304
      nextln:   store.i8 v1064, v1137
      nextln:   jump addr_0_block_310
      check: addr_0_block_310: // preds: addr_0_block_305 addr_0_block_309
      nextln:   v1221 = i32.lshr v5, 0x10
      nextln:   v1222 = i8.trunc.i32 v1221
      nextln:   v1223 = i64.wrapping_add v26, 0x2
      nextln:   v1224 = i64.unsigned_from_bits v1223
      nextln:   v1225 = int.modulo v1224, 0x1
      nextln:   v1226 = int.sub v1224, v1225
      nextln:   v1227 = i64.to_bits v1226
      nextln:   v1228 = bool.icmp.i64.eq v1223, v1227
      nextln:   v1229 = i64.lshr v1223, 0x30
      nextln:   v1230 = i16.trunc.i64 v1229
      nextln:   v1231 = bool.icmp.i16.eq v1230, 0x0
      nextln:   v1232 = bool.bitwise_not v1231
      nextln:   jumpif v1232, addr_0_block_311, addr_0_block_312
      check: addr_0_block_311: // preds: addr_0_block_310
      nextln:   jump addr_0_block_313(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_314(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_312: // preds: addr_0_block_310
      nextln:   jump addr_0_block_313(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_313(v1542: i52, v1543: int, v1544: bool, v1545: bool): // preds: addr_0_block_312
      nextln:   v1546 = i52.trunc.i64 v1223
      nextln:   jump addr_0_block_314(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1546, 0x1, 0x0)
      check: addr_0_block_314(v1233: i3, v1234: i1, v1235: i1, v1236: i1, v1237: i1, v1238: i4, v1239: i1, v1240: bool, v1241: int, v1242: int, v1243: bool, v1244: bool, v1245: i8, v1246: i8, v1247: i52, v1248: i1, v1249: bool, v1250: bool, v1251: int, v1252: i1, v1253: bool, v1254: i4, v1255: i2, v1256: i4, v1257: i8, v1258: i8, v1259: i2, v1260: i2, v1261: bool, v1262: i2, v1263: i2, v1264: bool, v1265: bool, v1266: bool, v1267: bool, v1268: i52, v1269: i1, v1270: i64, v1271: i1, v1272: i8, v1273: i8, v1274: i52, v1275: i1, v1276: bool, v1277: bool, v1278: int, v1279: i1, v1280: bool, v1281: i4, v1282: i2, v1283: i4, v1284: i8, v1285: i8, v1286: i2, v1287: i2, v1288: bool, v1289: i2, v1290: i2, v1291: bool, v1292: bool, v1293: bool, v1294: bool, v1295: i52, v1296: i1, v1297: i64): // preds: addr_0_block_311 addr_0_block_313
      nextln:   v1298 = bool.icmp.i8.ne v1272, 0x0
      nextln:   v1299 = bool.bitwise_not v1298
      nextln:   v1300 = bool.bitwise_not v31
      nextln:   v1301 = bool.and v1300, 0x1
      nextln:   v1302 = bool.or v1301, 0x0
      nextln:   v1303 = bool.icmp.i8.ne v1272, 0x0
      nextln:   v1304 = bool.bitwise_not v1303
      nextln:   v1305 = bool.and v1302, v1304
      nextln:   v1306 = bool.icmp.i8.eq v1284, 0x1
      nextln:   v1307 = bool.and v1305, v1306
      nextln:   jumpif v1307, addr_0_block_315, addr_0_block_316
      check: addr_0_block_315: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317
      check: addr_0_block_316: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317
      check: addr_0_block_317: // preds: addr_0_block_315 addr_0_block_316
      nextln:   v1308 = bool.icmp.i8.ne v1272, 0x0
      nextln:   v1309 = bool.bitwise_not v1308
      nextln:   v1310 = bool.icmp.i8.ne v1272, 0x0
      nextln:   v1311 = bool.bitwise_not v1310
      nextln:   v1312 = bool.icmp.i8.eq v1284, 0x1
      nextln:   v1313 = bool.and v1311, v1312
      nextln:   jumpif v1243, addr_0_block_318, addr_0_block_319
      check: addr_0_block_318: // preds: addr_0_block_317
      nextln:   v1314 = bool.icmp.i8.eq v1272, 0x0
      nextln:   jump addr_0_block_320(0x1)
      check: addr_0_block_319: // preds: addr_0_block_317
      nextln:   jump addr_0_block_320(0x0)
      check: addr_0_block_320(v1315: bool): // preds: addr_0_block_318 addr_0_block_319
      nextln:   v1316 = bool.icmp.i8.eq v1272, 0x0
      nextln:   v1317 = bool.and v1244, v1316
      nextln:   jumpif v1317, addr_0_block_321, addr_0_block_322
      check: addr_0_block_321: // preds: addr_0_block_320
      nextln:   jump addr_0_block_323(0x1, 0x1)
      check: addr_0_block_322: // preds: addr_0_block_320
      nextln:   jump addr_0_block_323(0x0, 0x0)
      check: addr_0_block_323(v1318: bool, v1319: bool): // preds: addr_0_block_321 addr_0_block_322
      nextln:   v1320 = bool.or v1315, v1318
      nextln:   jumpif v1320, addr_0_block_324, addr_0_block_337
      check: addr_0_block_324: // preds: addr_0_block_323
      nextln:   v1321 = i52.unsigned_from_bits v1268
      nextln:   v1322 = int.modulo v1321, 0x8
      nextln:   v1323 = int.sub v1321, v1322
      nextln:   v1324 = i52.to_bits v1323
      nextln:   v1325 = bool.icmp.i52.eq v1268, v1324
      nextln:   v1326 = i64.load v1268
      nextln:   jumpif v1315, addr_0_block_325, addr_0_block_326
      nextln:   jump addr_0_block_338(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1326, v1245, v1246, v1247, v1248, v1249, v1250, v1251, v1252, v1253, v1254, v1255, v1256, v1257, v1258, v1259, v1260, v1261, v1262, v1263, v1264, v1265, v1266, v1267, v1268, v1269, v1270, 0x0, 0x0)
      check: addr_0_block_325: // no preds!
      nextln:   jump addr_0_block_327
      check: addr_0_block_326: // no preds!
      nextln:   jump addr_0_block_327
      check: addr_0_block_327: // preds: addr_0_block_325 addr_0_block_326
      nextln:   jumpif v1318, addr_0_block_328, addr_0_block_329
      check: addr_0_block_328: // preds: addr_0_block_327
      nextln:   jump addr_0_block_330
      check: addr_0_block_329: // preds: addr_0_block_327
      nextln:   jump addr_0_block_330
      check: addr_0_block_330: // preds: addr_0_block_328 addr_0_block_329
      nextln:   v1579 = i52.unsigned_from_bits v1268
      nextln:   v1580 = int.modulo v1579, 0x8
      nextln:   v1581 = int.sub v1579, v1580
      nextln:   v1582 = i52.to_bits v1581
      nextln:   v1583 = bool.icmp.i52.eq v1268, v1582
      nextln:   v1584 = bool.icmp.i52.eq v1268, 0x13000000
      nextln:   jumpif v1584, addr_0_block_331, addr_0_block_335
      check: addr_0_block_331: // preds: addr_0_block_330
      nextln:   v1585 = i64.unsigned_from_bits v1326
      nextln:   v1586 = bool.icmp.int.eq v1585, 0x4
      nextln:   jumpif v1586, addr_0_block_332, addr_0_block_333
      nextln:   jump addr_0_block_336
      check: addr_0_block_332: // no preds!
      nextln:   jump addr_0_block_334
      check: addr_0_block_333: // no preds!
      nextln:   v1587 = i8.trunc.i64 v1326
      nextln:   v1588 = i8.unsigned_from_bits v1587
      nextln:   jump addr_0_block_334
      check: addr_0_block_334: // preds: addr_0_block_332 addr_0_block_333
      check: addr_0_block_335: // preds: addr_0_block_330
      nextln:   store.i64 v1326, v1268
      nextln:   jump addr_0_block_336
      check: addr_0_block_336: // preds: addr_0_block_331 addr_0_block_335
      check: addr_0_block_337: // preds: addr_0_block_323
      nextln:   jump addr_0_block_338(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_338(v1327: i8, v1328: i1, v1329: i16, v1330: i8, v1331: bool, v1332: bool, v1333: bool, v1334: int, v1335: i64, v1336: i8, v1337: i8, v1338: i52, v1339: i1, v1340: bool, v1341: bool, v1342: int, v1343: i1, v1344: bool, v1345: i4, v1346: i2, v1347: i4, v1348: i8, v1349: i8, v1350: i2, v1351: i2, v1352: bool, v1353: i2, v1354: i2, v1355: bool, v1356: bool, v1357: bool, v1358: bool, v1359: i52, v1360: i1, v1361: i64, v1362: i2, v1363: bool): // preds: addr_0_block_324 addr_0_block_337
      nextln:   v1364 = bool.icmp.i8.ne v1272, 0x0
      nextln:   v1365 = bool.bitwise_not v1364
      nextln:   v1366 = bool.and v1365, 0x1
      nextln:   v1367 = bool.icmp.i8.ne v1272, 0x0
      nextln:   v1368 = bool.bitwise_not v1367
      nextln:   v1369 = bool.and 0x1, v1368
      nextln:   jumpif v1369, addr_0_block_339, addr_0_block_340
      check: addr_0_block_339: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_340: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_341: // preds: addr_0_block_339 addr_0_block_340
      nextln:   v1370 = bool.icmp.i8.ne v1272, 0x0
      nextln:   jumpif v1370, addr_0_block_342, addr_0_block_343
      check: addr_0_block_342: // preds: addr_0_block_341
      nextln:   jump addr_0_block_344
      check: addr_0_block_343: // preds: addr_0_block_341
      nextln:   jump addr_0_block_344
      check: addr_0_block_344: // preds: addr_0_block_342 addr_0_block_343
      nextln:   jumpif v1293, addr_0_block_345, addr_0_block_346
      check: addr_0_block_345: // preds: addr_0_block_344
      nextln:   jump addr_0_block_347
      check: addr_0_block_346: // preds: addr_0_block_344
      nextln:   jump addr_0_block_347
      check: addr_0_block_347: // preds: addr_0_block_345 addr_0_block_346
      nextln:   v1371 = i52.unsigned_from_bits v1295
      nextln:   v1372 = int.modulo v1371, 0x1
      nextln:   v1373 = int.sub v1371, v1372
      nextln:   v1374 = i52.to_bits v1373
      nextln:   v1375 = bool.icmp.i52.eq v1295, v1374
      nextln:   v1376 = bool.icmp.i52.eq v1295, 0x13000000
      nextln:   jumpif v1376, addr_0_block_348, addr_0_block_352
      check: addr_0_block_348: // preds: addr_0_block_347
      nextln:   v1377 = i8.unsigned_from_bits v1222
      nextln:   v1378 = bool.icmp.int.eq v1377, 0x4
      nextln:   jumpif v1378, addr_0_block_349, addr_0_block_350
      nextln:   jump addr_0_block_353
      check: addr_0_block_349: // no preds!
      nextln:   jump addr_0_block_351
      check: addr_0_block_350: // no preds!
      nextln:   v1589 = i8.unsigned_from_bits v1222
      nextln:   jump addr_0_block_351
      check: addr_0_block_351: // preds: addr_0_block_349 addr_0_block_350
      check: addr_0_block_352: // preds: addr_0_block_347
      nextln:   store.i8 v1222, v1295
      nextln:   jump addr_0_block_353
      check: addr_0_block_353: // preds: addr_0_block_348 addr_0_block_352
      nextln:   v1379 = i32.lshr v5, 0x18
      nextln:   v1380 = i8.trunc.i32 v1379
      nextln:   v1381 = i64.wrapping_add v26, 0x3
      nextln:   v1382 = i64.unsigned_from_bits v1381
      nextln:   v1383 = int.modulo v1382, 0x1
      nextln:   v1384 = int.sub v1382, v1383
      nextln:   v1385 = i64.to_bits v1384
      nextln:   v1386 = bool.icmp.i64.eq v1381, v1385
      nextln:   v1387 = i64.lshr v1381, 0x30
      nextln:   v1388 = i16.trunc.i64 v1387
      nextln:   v1389 = bool.icmp.i16.eq v1388, 0x0
      nextln:   v1390 = bool.bitwise_not v1389
      nextln:   jumpif v1390, addr_0_block_354, addr_0_block_355
      check: addr_0_block_354: // preds: addr_0_block_353
      nextln:   jump addr_0_block_356(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_357(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_355: // preds: addr_0_block_353
      nextln:   jump addr_0_block_356(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_356(v1537: i52, v1538: int, v1539: bool, v1540: bool): // preds: addr_0_block_355
      nextln:   v1541 = i52.trunc.i64 v1381
      nextln:   jump addr_0_block_357(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1541, 0x1, 0x0)
      check: addr_0_block_357(v1391: i3, v1392: i1, v1393: i1, v1394: i1, v1395: i1, v1396: i4, v1397: i1, v1398: bool, v1399: int, v1400: int, v1401: bool, v1402: bool, v1403: i8, v1404: i8, v1405: i52, v1406: i1, v1407: bool, v1408: bool, v1409: int, v1410: i1, v1411: bool, v1412: i4, v1413: i2, v1414: i4, v1415: i8, v1416: i8, v1417: i2, v1418: i2, v1419: bool, v1420: i2, v1421: i2, v1422: bool, v1423: bool, v1424: bool, v1425: bool, v1426: i52, v1427: i1, v1428: i64, v1429: i1, v1430: i8, v1431: i8, v1432: i52, v1433: i1, v1434: bool, v1435: bool, v1436: int, v1437: i1, v1438: bool, v1439: i4, v1440: i2, v1441: i4, v1442: i8, v1443: i8, v1444: i2, v1445: i2, v1446: bool, v1447: i2, v1448: i2, v1449: bool, v1450: bool, v1451: bool, v1452: bool, v1453: i52, v1454: i1, v1455: i64): // preds: addr_0_block_354 addr_0_block_356
      nextln:   v1456 = bool.icmp.i8.ne v1430, 0x0
      nextln:   v1457 = bool.bitwise_not v1456
      nextln:   v1458 = bool.bitwise_not v31
      nextln:   v1459 = bool.and v1458, 0x1
      nextln:   v1460 = bool.or v1459, 0x0
      nextln:   v1461 = bool.icmp.i8.ne v1430, 0x0
      nextln:   v1462 = bool.bitwise_not v1461
      nextln:   v1463 = bool.and v1460, v1462
      nextln:   v1464 = bool.icmp.i8.eq v1442, 0x1
      nextln:   v1465 = bool.and v1463, v1464
      nextln:   jumpif v1465, addr_0_block_358, addr_0_block_359
      check: addr_0_block_358: // preds: addr_0_block_357
      nextln:   jump addr_0_block_360
      check: addr_0_block_359: // preds: addr_0_block_357
      nextln:   jump addr_0_block_360
      check: addr_0_block_360: // preds: addr_0_block_358 addr_0_block_359
      nextln:   v1466 = bool.icmp.i8.ne v1430, 0x0
      nextln:   v1467 = bool.bitwise_not v1466
      nextln:   v1468 = bool.icmp.i8.ne v1430, 0x0
      nextln:   v1469 = bool.bitwise_not v1468
      nextln:   v1470 = bool.icmp.i8.eq v1442, 0x1
      nextln:   v1471 = bool.and v1469, v1470
      nextln:   jumpif v1401, addr_0_block_361, addr_0_block_362
      check: addr_0_block_361: // preds: addr_0_block_360
      nextln:   v1472 = bool.icmp.i8.eq v1430, 0x0
      nextln:   jump addr_0_block_363(0x1)
      check: addr_0_block_362: // preds: addr_0_block_360
      nextln:   jump addr_0_block_363(0x0)
      check: addr_0_block_363(v1473: bool): // preds: addr_0_block_361 addr_0_block_362
      nextln:   v1474 = bool.icmp.i8.eq v1430, 0x0
      nextln:   v1475 = bool.and v1402, v1474
      nextln:   jumpif v1475, addr_0_block_364, addr_0_block_365
      check: addr_0_block_364: // preds: addr_0_block_363
      nextln:   jump addr_0_block_366(0x1, 0x1)
      check: addr_0_block_365: // preds: addr_0_block_363
      nextln:   jump addr_0_block_366(0x0, 0x0)
      check: addr_0_block_366(v1476: bool, v1477: bool): // preds: addr_0_block_364 addr_0_block_365
      nextln:   v1478 = bool.or v1473, v1476
      nextln:   jumpif v1478, addr_0_block_367, addr_0_block_380
      check: addr_0_block_367: // preds: addr_0_block_366
      nextln:   v1479 = i52.unsigned_from_bits v1426
      nextln:   v1480 = int.modulo v1479, 0x8
      nextln:   v1481 = int.sub v1479, v1480
      nextln:   v1482 = i52.to_bits v1481
      nextln:   v1483 = bool.icmp.i52.eq v1426, v1482
      nextln:   v1484 = i64.load v1426
      nextln:   jumpif v1473, addr_0_block_368, addr_0_block_369
      nextln:   jump addr_0_block_381(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1484, v1403, v1404, v1405, v1406, v1407, v1408, v1409, v1410, v1411, v1412, v1413, v1414, v1415, v1416, v1417, v1418, v1419, v1420, v1421, v1422, v1423, v1424, v1425, v1426, v1427, v1428, 0x0, 0x0)
      check: addr_0_block_368: // no preds!
      nextln:   jump addr_0_block_370
      check: addr_0_block_369: // no preds!
      nextln:   jump addr_0_block_370
      check: addr_0_block_370: // preds: addr_0_block_368 addr_0_block_369
      nextln:   jumpif v1476, addr_0_block_371, addr_0_block_372
      check: addr_0_block_371: // preds: addr_0_block_370
      nextln:   jump addr_0_block_373
      check: addr_0_block_372: // preds: addr_0_block_370
      nextln:   jump addr_0_block_373
      check: addr_0_block_373: // preds: addr_0_block_371 addr_0_block_372
      nextln:   v1590 = i52.unsigned_from_bits v1426
      nextln:   v1591 = int.modulo v1590, 0x8
      nextln:   v1592 = int.sub v1590, v1591
      nextln:   v1593 = i52.to_bits v1592
      nextln:   v1594 = bool.icmp.i52.eq v1426, v1593
      nextln:   v1595 = bool.icmp.i52.eq v1426, 0x13000000
      nextln:   jumpif v1595, addr_0_block_374, addr_0_block_378
      check: addr_0_block_374: // preds: addr_0_block_373
      nextln:   v1596 = i64.unsigned_from_bits v1484
      nextln:   v1597 = bool.icmp.int.eq v1596, 0x4
      nextln:   jumpif v1597, addr_0_block_375, addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_375: // no preds!
      nextln:   jump addr_0_block_377
      check: addr_0_block_376: // no preds!
      nextln:   v1598 = i8.trunc.i64 v1484
      nextln:   v1599 = i8.unsigned_from_bits v1598
      nextln:   jump addr_0_block_377
      check: addr_0_block_377: // preds: addr_0_block_375 addr_0_block_376
      check: addr_0_block_378: // preds: addr_0_block_373
      nextln:   store.i64 v1484, v1426
      nextln:   jump addr_0_block_379
      check: addr_0_block_379: // preds: addr_0_block_374 addr_0_block_378
      check: addr_0_block_380: // preds: addr_0_block_366
      nextln:   jump addr_0_block_381(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_381(v1485: i8, v1486: i1, v1487: i16, v1488: i8, v1489: bool, v1490: bool, v1491: bool, v1492: int, v1493: i64, v1494: i8, v1495: i8, v1496: i52, v1497: i1, v1498: bool, v1499: bool, v1500: int, v1501: i1, v1502: bool, v1503: i4, v1504: i2, v1505: i4, v1506: i8, v1507: i8, v1508: i2, v1509: i2, v1510: bool, v1511: i2, v1512: i2, v1513: bool, v1514: bool, v1515: bool, v1516: bool, v1517: i52, v1518: i1, v1519: i64, v1520: i2, v1521: bool): // preds: addr_0_block_367 addr_0_block_380
      nextln:   v1522 = bool.icmp.i8.ne v1430, 0x0
      nextln:   v1523 = bool.bitwise_not v1522
      nextln:   v1524 = bool.and v1523, 0x1
      nextln:   v1525 = bool.icmp.i8.ne v1430, 0x0
      nextln:   v1526 = bool.bitwise_not v1525
      nextln:   v1527 = bool.and 0x1, v1526
      nextln:   jumpif v1527, addr_0_block_382, addr_0_block_383
      check: addr_0_block_382: // preds: addr_0_block_381
      nextln:   jump addr_0_block_384
      check: addr_0_block_383: // preds: addr_0_block_381
      nextln:   jump addr_0_block_384
      check: addr_0_block_384: // preds: addr_0_block_382 addr_0_block_383
      nextln:   v1528 = bool.icmp.i8.ne v1430, 0x0
      nextln:   jumpif v1528, addr_0_block_385, addr_0_block_386
      check: addr_0_block_385: // preds: addr_0_block_384
      nextln:   jump addr_0_block_387
      check: addr_0_block_386: // preds: addr_0_block_384
      nextln:   jump addr_0_block_387
      check: addr_0_block_387: // preds: addr_0_block_385 addr_0_block_386
      nextln:   jumpif v1451, addr_0_block_388, addr_0_block_389
      check: addr_0_block_388: // preds: addr_0_block_387
      nextln:   jump addr_0_block_390
      check: addr_0_block_389: // preds: addr_0_block_387
      nextln:   jump addr_0_block_390
      check: addr_0_block_390: // preds: addr_0_block_388 addr_0_block_389
      nextln:   v1529 = i52.unsigned_from_bits v1453
      nextln:   v1530 = int.modulo v1529, 0x1
      nextln:   v1531 = int.sub v1529, v1530
      nextln:   v1532 = i52.to_bits v1531
      nextln:   v1533 = bool.icmp.i52.eq v1453, v1532
      nextln:   v1534 = bool.icmp.i52.eq v1453, 0x13000000
      nextln:   jumpif v1534, addr_0_block_391, addr_0_block_395
      check: addr_0_block_391: // preds: addr_0_block_390
      nextln:   v1535 = i8.unsigned_from_bits v1380
      nextln:   v1536 = bool.icmp.int.eq v1535, 0x4
      nextln:   jumpif v1536, addr_0_block_392, addr_0_block_393
      nextln:   jump addr_0_block_396
      check: addr_0_block_392: // no preds!
      nextln:   jump addr_0_block_394
      check: addr_0_block_393: // no preds!
      nextln:   v1600 = i8.unsigned_from_bits v1380
      nextln:   jump addr_0_block_394
      check: addr_0_block_394: // preds: addr_0_block_392 addr_0_block_393
      check: addr_0_block_395: // preds: addr_0_block_390
      nextln:   store.i8 v1380, v1453
      nextln:   jump addr_0_block_396
      check: addr_0_block_396: // preds: addr_0_block_391 addr_0_block_395
      check: addr_0_block_397: // preds: addr_0_block_220
      nextln:   v46 = i64.unsigned_from_bits v26
      nextln:   v47 = int.modulo v46, 0x4
      nextln:   v48 = int.sub v46, v47
      nextln:   v49 = i64.to_bits v48
      nextln:   v50 = bool.icmp.i64.eq v26, v49
      nextln:   v51 = i64.lshr v26, 0x30
      nextln:   v52 = i16.trunc.i64 v51
      nextln:   v53 = bool.icmp.i16.eq v52, 0x0
      nextln:   v54 = bool.bitwise_not v53
      nextln:   jumpif v54, addr_0_block_398, addr_0_block_399
      nextln:   jump addr_0_block_441(v31, 0x0)
      check: addr_0_block_398: // no preds!
      nextln:   jump addr_0_block_400(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_401(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_399: // no preds!
      nextln:   jump addr_0_block_400(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_400(v1747: i52, v1748: int, v1749: bool, v1750: bool): // preds: addr_0_block_399
      nextln:   v1751 = i52.trunc.i64 v26
      nextln:   jump addr_0_block_401(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1751, 0x1, 0x0)
      check: addr_0_block_401(v1601: i3, v1602: i1, v1603: i1, v1604: i1, v1605: i1, v1606: i4, v1607: i1, v1608: bool, v1609: int, v1610: int, v1611: bool, v1612: bool, v1613: i8, v1614: i8, v1615: i52, v1616: i1, v1617: bool, v1618: bool, v1619: int, v1620: i1, v1621: bool, v1622: i4, v1623: i2, v1624: i4, v1625: i8, v1626: i8, v1627: i2, v1628: i2, v1629: bool, v1630: i2, v1631: i2, v1632: bool, v1633: bool, v1634: bool, v1635: bool, v1636: i52, v1637: i1, v1638: i64, v1639: i1, v1640: i8, v1641: i8, v1642: i52, v1643: i1, v1644: bool, v1645: bool, v1646: int, v1647: i1, v1648: bool, v1649: i4, v1650: i2, v1651: i4, v1652: i8, v1653: i8, v1654: i2, v1655: i2, v1656: bool, v1657: i2, v1658: i2, v1659: bool, v1660: bool, v1661: bool, v1662: bool, v1663: i52, v1664: i1, v1665: i64): // preds: addr_0_block_398 addr_0_block_400
      nextln:   v1666 = bool.icmp.i8.ne v1640, 0x0
      nextln:   v1667 = bool.bitwise_not v1666
      nextln:   v1668 = bool.bitwise_not v31
      nextln:   v1669 = bool.and v1668, 0x1
      nextln:   v1670 = bool.or v1669, 0x0
      nextln:   v1671 = bool.icmp.i8.ne v1640, 0x0
      nextln:   v1672 = bool.bitwise_not v1671
      nextln:   v1673 = bool.and v1670, v1672
      nextln:   v1674 = bool.icmp.i8.eq v1652, 0x1
      nextln:   v1675 = bool.and v1673, v1674
      nextln:   jumpif v1675, addr_0_block_402, addr_0_block_403
      check: addr_0_block_402: // preds: addr_0_block_401
      nextln:   jump addr_0_block_404
      check: addr_0_block_403: // preds: addr_0_block_401
      nextln:   jump addr_0_block_404
      check: addr_0_block_404: // preds: addr_0_block_402 addr_0_block_403
      nextln:   v1676 = bool.icmp.i8.ne v1640, 0x0
      nextln:   v1677 = bool.bitwise_not v1676
      nextln:   v1678 = bool.icmp.i8.ne v1640, 0x0
      nextln:   v1679 = bool.bitwise_not v1678
      nextln:   v1680 = bool.icmp.i8.eq v1652, 0x1
      nextln:   v1681 = bool.and v1679, v1680
      nextln:   jumpif v1611, addr_0_block_405, addr_0_block_406
      check: addr_0_block_405: // preds: addr_0_block_404
      nextln:   v1682 = bool.icmp.i8.eq v1640, 0x0
      nextln:   jump addr_0_block_407(0x1)
      check: addr_0_block_406: // preds: addr_0_block_404
      nextln:   jump addr_0_block_407(0x0)
      check: addr_0_block_407(v1683: bool): // preds: addr_0_block_405 addr_0_block_406
      nextln:   v1684 = bool.icmp.i8.eq v1640, 0x0
      nextln:   v1685 = bool.and v1612, v1684
      nextln:   jumpif v1685, addr_0_block_408, addr_0_block_409
      check: addr_0_block_408: // preds: addr_0_block_407
      nextln:   jump addr_0_block_410(0x1, 0x1)
      check: addr_0_block_409: // preds: addr_0_block_407
      nextln:   jump addr_0_block_410(0x0, 0x0)
      check: addr_0_block_410(v1686: bool, v1687: bool): // preds: addr_0_block_408 addr_0_block_409
      nextln:   v1688 = bool.or v1683, v1686
      nextln:   jumpif v1688, addr_0_block_411, addr_0_block_424
      check: addr_0_block_411: // preds: addr_0_block_410
      nextln:   v1689 = i52.unsigned_from_bits v1636
      nextln:   v1690 = int.modulo v1689, 0x8
      nextln:   v1691 = int.sub v1689, v1690
      nextln:   v1692 = i52.to_bits v1691
      nextln:   v1693 = bool.icmp.i52.eq v1636, v1692
      nextln:   v1694 = i64.load v1636
      nextln:   jumpif v1683, addr_0_block_412, addr_0_block_413
      nextln:   jump addr_0_block_425(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1694, v1613, v1614, v1615, v1616, v1617, v1618, v1619, v1620, v1621, v1622, v1623, v1624, v1625, v1626, v1627, v1628, v1629, v1630, v1631, v1632, v1633, v1634, v1635, v1636, v1637, v1638, 0x0, 0x0)
      check: addr_0_block_412: // no preds!
      nextln:   jump addr_0_block_414
      check: addr_0_block_413: // no preds!
      nextln:   jump addr_0_block_414
      check: addr_0_block_414: // preds: addr_0_block_412 addr_0_block_413
      nextln:   jumpif v1686, addr_0_block_415, addr_0_block_416
      check: addr_0_block_415: // preds: addr_0_block_414
      nextln:   jump addr_0_block_417
      check: addr_0_block_416: // preds: addr_0_block_414
      nextln:   jump addr_0_block_417
      check: addr_0_block_417: // preds: addr_0_block_415 addr_0_block_416
      nextln:   v1752 = i52.unsigned_from_bits v1636
      nextln:   v1753 = int.modulo v1752, 0x8
      nextln:   v1754 = int.sub v1752, v1753
      nextln:   v1755 = i52.to_bits v1754
      nextln:   v1756 = bool.icmp.i52.eq v1636, v1755
      nextln:   v1757 = bool.icmp.i52.eq v1636, 0x13000000
      nextln:   jumpif v1757, addr_0_block_418, addr_0_block_422
      check: addr_0_block_418: // preds: addr_0_block_417
      nextln:   v1758 = i64.unsigned_from_bits v1694
      nextln:   v1759 = bool.icmp.int.eq v1758, 0x4
      nextln:   jumpif v1759, addr_0_block_419, addr_0_block_420
      nextln:   jump addr_0_block_423
      check: addr_0_block_419: // no preds!
      nextln:   jump addr_0_block_421
      check: addr_0_block_420: // no preds!
      nextln:   v1760 = i8.trunc.i64 v1694
      nextln:   v1761 = i8.unsigned_from_bits v1760
      nextln:   jump addr_0_block_421
      check: addr_0_block_421: // preds: addr_0_block_419 addr_0_block_420
      check: addr_0_block_422: // preds: addr_0_block_417
      nextln:   store.i64 v1694, v1636
      nextln:   jump addr_0_block_423
      check: addr_0_block_423: // preds: addr_0_block_418 addr_0_block_422
      check: addr_0_block_424: // preds: addr_0_block_410
      nextln:   jump addr_0_block_425(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_425(v1695: i8, v1696: i1, v1697: i16, v1698: i8, v1699: bool, v1700: bool, v1701: bool, v1702: int, v1703: i64, v1704: i8, v1705: i8, v1706: i52, v1707: i1, v1708: bool, v1709: bool, v1710: int, v1711: i1, v1712: bool, v1713: i4, v1714: i2, v1715: i4, v1716: i8, v1717: i8, v1718: i2, v1719: i2, v1720: bool, v1721: i2, v1722: i2, v1723: bool, v1724: bool, v1725: bool, v1726: bool, v1727: i52, v1728: i1, v1729: i64, v1730: i2, v1731: bool): // preds: addr_0_block_411 addr_0_block_424
      nextln:   v1732 = bool.icmp.i8.ne v1640, 0x0
      nextln:   v1733 = bool.bitwise_not v1732
      nextln:   v1734 = bool.and v1733, 0x1
      nextln:   v1735 = bool.icmp.i8.ne v1640, 0x0
      nextln:   v1736 = bool.bitwise_not v1735
      nextln:   v1737 = bool.and 0x1, v1736
      nextln:   jumpif v1737, addr_0_block_426, addr_0_block_427
      check: addr_0_block_426: // preds: addr_0_block_425
      nextln:   jump addr_0_block_428
      check: addr_0_block_427: // preds: addr_0_block_425
      nextln:   jump addr_0_block_428
      check: addr_0_block_428: // preds: addr_0_block_426 addr_0_block_427
      nextln:   v1738 = bool.icmp.i8.ne v1640, 0x0
      nextln:   jumpif v1738, addr_0_block_429, addr_0_block_430
      check: addr_0_block_429: // preds: addr_0_block_428
      nextln:   jump addr_0_block_431
      check: addr_0_block_430: // preds: addr_0_block_428
      nextln:   jump addr_0_block_431
      check: addr_0_block_431: // preds: addr_0_block_429 addr_0_block_430
      nextln:   jumpif v1661, addr_0_block_432, addr_0_block_433
      check: addr_0_block_432: // preds: addr_0_block_431
      nextln:   jump addr_0_block_434
      check: addr_0_block_433: // preds: addr_0_block_431
      nextln:   jump addr_0_block_434
      check: addr_0_block_434: // preds: addr_0_block_432 addr_0_block_433
      nextln:   v1739 = i52.unsigned_from_bits v1663
      nextln:   v1740 = int.modulo v1739, 0x4
      nextln:   v1741 = int.sub v1739, v1740
      nextln:   v1742 = i52.to_bits v1741
      nextln:   v1743 = bool.icmp.i52.eq v1663, v1742
      nextln:   v1744 = bool.icmp.i52.eq v1663, 0x13000000
      nextln:   jumpif v1744, addr_0_block_435, addr_0_block_439
      check: addr_0_block_435: // preds: addr_0_block_434
      nextln:   v1745 = i32.unsigned_from_bits v5
      nextln:   v1746 = bool.icmp.int.eq v1745, 0x4
      nextln:   jumpif v1746, addr_0_block_436, addr_0_block_437
      nextln:   jump addr_0_block_440
      check: addr_0_block_436: // no preds!
      nextln:   jump addr_0_block_438
      check: addr_0_block_437: // no preds!
      nextln:   v1762 = i8.trunc.i32 v5
      nextln:   v1763 = i8.unsigned_from_bits v1762
      nextln:   jump addr_0_block_438
      check: addr_0_block_438: // preds: addr_0_block_436 addr_0_block_437
      check: addr_0_block_439: // preds: addr_0_block_434
      nextln:   store.i32 v5, v1663
      nextln:   jump addr_0_block_440
      check: addr_0_block_440: // preds: addr_0_block_435 addr_0_block_439
      check: addr_0_block_441(v44: i64, v45: i8): // preds: addr_0_block_221 addr_0_block_397
- name: stp_3
  bytes: [0xe0, 0x07, 0x00, 0xa9]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "sp"
      nextln:   v1 = i64.unsigned_from_bits v0
      nextln:   v2 = int.modulo v1, 0x10
      nextln:   v3 = int.sub v1, v2
      nextln:   v4 = i64.to_bits v3
      nextln:   v5 = bool.icmp.i64.ne v0, v4
      nextln:   v6 = i64.read_reg "sp"
      nextln:   v7 = i64.wrapping_add v6, 0x0
      nextln:   v8 = i64.read_reg "x0"
      nextln:   v9 = i64.read_reg "x1"
      nextln:   v10 = i64.wrapping_add v7, 0x0
      nextln:   v11 = i64.unsigned_from_bits v10
      nextln:   v12 = int.modulo v11, 0x8
      nextln:   v13 = int.sub v11, v12
      nextln:   v14 = i64.to_bits v13
      nextln:   v15 = bool.icmp.i64.eq v10, v14
      nextln:   v16 = bool.bitwise_not v15
      nextln:   v17 = bool.bitwise_not v15
      nextln:   jumpif v17, addr_0_block_0, addr_0_block_348
      check: addr_0_block_0: // preds: entry
      nextln:   v18 = i8.trunc.i64 v8
      nextln:   v19 = i64.unsigned_from_bits v10
      nextln:   v20 = int.modulo v19, 0x1
      nextln:   v21 = int.sub v19, v20
      nextln:   v22 = i64.to_bits v21
      nextln:   v23 = bool.icmp.i64.eq v10, v22
      nextln:   v24 = i64.lshr v10, 0x30
      nextln:   v25 = i16.trunc.i64 v24
      nextln:   v26 = bool.icmp.i16.eq v25, 0x0
      nextln:   v27 = bool.bitwise_not v26
      nextln:   jumpif v27, addr_0_block_1, addr_0_block_2
      nextln:   jump addr_0_block_392(v215, v216)
      check: addr_0_block_1: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_2: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_3(v1358: i52, v1359: int, v1360: bool, v1361: bool): // preds: addr_0_block_2
      nextln:   v1362 = i52.trunc.i64 v10
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1362, 0x1, 0x0)
      check: addr_0_block_4(v68: i3, v69: i1, v70: i1, v71: i1, v72: i1, v73: i4, v74: i1, v75: bool, v76: int, v77: int, v78: bool, v79: bool, v80: i8, v81: i8, v82: i52, v83: i1, v84: bool, v85: bool, v86: int, v87: i1, v88: bool, v89: i4, v90: i2, v91: i4, v92: i8, v93: i8, v94: i2, v95: i2, v96: bool, v97: i2, v98: i2, v99: bool, v100: bool, v101: bool, v102: bool, v103: i52, v104: i1, v105: i64, v106: i1, v107: i8, v108: i8, v109: i52, v110: i1, v111: bool, v112: bool, v113: int, v114: i1, v115: bool, v116: i4, v117: i2, v118: i4, v119: i8, v120: i8, v121: i2, v122: i2, v123: bool, v124: i2, v125: i2, v126: bool, v127: bool, v128: bool, v129: bool, v130: i52, v131: i1, v132: i64): // preds: addr_0_block_1 addr_0_block_3
      nextln:   v133 = bool.icmp.i8.ne v107, 0x0
      nextln:   v134 = bool.bitwise_not v133
      nextln:   v135 = bool.bitwise_not v15
      nextln:   v136 = bool.and v135, 0x1
      nextln:   v137 = bool.or v136, 0x0
      nextln:   v138 = bool.icmp.i8.ne v107, 0x0
      nextln:   v139 = bool.bitwise_not v138
      nextln:   v140 = bool.and v137, v139
      nextln:   v141 = bool.icmp.i8.eq v119, 0x1
      nextln:   v142 = bool.and v140, v141
      nextln:   jumpif v142, addr_0_block_5, addr_0_block_6
      check: addr_0_block_5: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_6: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_7: // preds: addr_0_block_5 addr_0_block_6
      nextln:   v143 = bool.icmp.i8.ne v107, 0x0
      nextln:   v144 = bool.bitwise_not v143
      nextln:   v145 = bool.icmp.i8.ne v107, 0x0
      nextln:   v146 = bool.bitwise_not v145
      nextln:   v147 = bool.icmp.i8.eq v119, 0x1
      nextln:   v148 = bool.and v146, v147
      nextln:   jumpif v78, addr_0_block_8, addr_0_block_9
      check: addr_0_block_8: // preds: addr_0_block_7
      nextln:   v149 = bool.icmp.i8.eq v107, 0x0
      nextln:   jump addr_0_block_10(0x1)
      check: addr_0_block_9: // preds: addr_0_block_7
      nextln:   jump addr_0_block_10(0x0)
      check: addr_0_block_10(v150: bool): // preds: addr_0_block_8 addr_0_block_9
      nextln:   v151 = bool.icmp.i8.eq v107, 0x0
      nextln:   v152 = bool.and v79, v151
      nextln:   jumpif v152, addr_0_block_11, addr_0_block_12
      check: addr_0_block_11: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x1, 0x1)
      check: addr_0_block_12: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x0, 0x0)
      check: addr_0_block_13(v153: bool, v154: bool): // preds: addr_0_block_11 addr_0_block_12
      nextln:   v155 = bool.or v150, v153
      nextln:   jumpif v155, addr_0_block_14, addr_0_block_27
      check: addr_0_block_14: // preds: addr_0_block_13
      nextln:   v156 = i52.unsigned_from_bits v103
      nextln:   v157 = int.modulo v156, 0x8
      nextln:   v158 = int.sub v156, v157
      nextln:   v159 = i52.to_bits v158
      nextln:   v160 = bool.icmp.i52.eq v103, v159
      nextln:   v161 = i64.load v103
      nextln:   jumpif v150, addr_0_block_15, addr_0_block_16
      nextln:   jump addr_0_block_28(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v161, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, 0x0, 0x0)
      check: addr_0_block_15: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_16: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_17: // preds: addr_0_block_15 addr_0_block_16
      nextln:   jumpif v153, addr_0_block_18, addr_0_block_19
      check: addr_0_block_18: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_19: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_20: // preds: addr_0_block_18 addr_0_block_19
      nextln:   v1363 = i52.unsigned_from_bits v103
      nextln:   v1364 = int.modulo v1363, 0x8
      nextln:   v1365 = int.sub v1363, v1364
      nextln:   v1366 = i52.to_bits v1365
      nextln:   v1367 = bool.icmp.i52.eq v103, v1366
      nextln:   v1368 = bool.icmp.i52.eq v103, 0x13000000
      nextln:   jumpif v1368, addr_0_block_21, addr_0_block_25
      check: addr_0_block_21: // preds: addr_0_block_20
      nextln:   v1369 = i64.unsigned_from_bits v161
      nextln:   v1370 = bool.icmp.int.eq v1369, 0x4
      nextln:   jumpif v1370, addr_0_block_22, addr_0_block_23
      nextln:   jump addr_0_block_26
      check: addr_0_block_22: // no preds!
      nextln:   jump addr_0_block_24
      check: addr_0_block_23: // no preds!
      nextln:   v1371 = i8.trunc.i64 v161
      nextln:   v1372 = i8.unsigned_from_bits v1371
      nextln:   jump addr_0_block_24
      check: addr_0_block_24: // preds: addr_0_block_22 addr_0_block_23
      check: addr_0_block_25: // preds: addr_0_block_20
      nextln:   store.i64 v161, v103
      nextln:   jump addr_0_block_26
      check: addr_0_block_26: // preds: addr_0_block_21 addr_0_block_25
      check: addr_0_block_27: // preds: addr_0_block_13
      nextln:   jump addr_0_block_28(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_28(v162: i8, v163: i1, v164: i16, v165: i8, v166: bool, v167: bool, v168: bool, v169: int, v170: i64, v171: i8, v172: i8, v173: i52, v174: i1, v175: bool, v176: bool, v177: int, v178: i1, v179: bool, v180: i4, v181: i2, v182: i4, v183: i8, v184: i8, v185: i2, v186: i2, v187: bool, v188: i2, v189: i2, v190: bool, v191: bool, v192: bool, v193: bool, v194: i52, v195: i1, v196: i64, v197: i2, v198: bool): // preds: addr_0_block_14 addr_0_block_27
      nextln:   v199 = bool.icmp.i8.ne v107, 0x0
      nextln:   v200 = bool.bitwise_not v199
      nextln:   v201 = bool.and v200, 0x1
      nextln:   v202 = bool.icmp.i8.ne v107, 0x0
      nextln:   v203 = bool.bitwise_not v202
      nextln:   v204 = bool.and 0x1, v203
      nextln:   jumpif v204, addr_0_block_29, addr_0_block_30
      check: addr_0_block_29: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_30: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_31: // preds: addr_0_block_29 addr_0_block_30
      nextln:   v205 = bool.icmp.i8.ne v107, 0x0
      nextln:   jumpif v205, addr_0_block_32, addr_0_block_33
      check: addr_0_block_32: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_33: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_34: // preds: addr_0_block_32 addr_0_block_33
      nextln:   jumpif v128, addr_0_block_35, addr_0_block_36
      check: addr_0_block_35: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_36: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_37: // preds: addr_0_block_35 addr_0_block_36
      nextln:   v206 = i52.unsigned_from_bits v130
      nextln:   v207 = int.modulo v206, 0x1
      nextln:   v208 = int.sub v206, v207
      nextln:   v209 = i52.to_bits v208
      nextln:   v210 = bool.icmp.i52.eq v130, v209
      nextln:   v211 = bool.icmp.i52.eq v130, 0x13000000
      nextln:   jumpif v211, addr_0_block_38, addr_0_block_42
      check: addr_0_block_38: // preds: addr_0_block_37
      nextln:   v212 = i8.unsigned_from_bits v18
      nextln:   v213 = bool.icmp.int.eq v212, 0x4
      nextln:   jumpif v213, addr_0_block_39, addr_0_block_40
      nextln:   jump addr_0_block_43
      check: addr_0_block_39: // no preds!
      nextln:   jump addr_0_block_41
      check: addr_0_block_40: // no preds!
      nextln:   v1373 = i8.unsigned_from_bits v18
      nextln:   jump addr_0_block_41
      check: addr_0_block_41: // preds: addr_0_block_39 addr_0_block_40
      check: addr_0_block_42: // preds: addr_0_block_37
      nextln:   store.i8 v18, v130
      nextln:   jump addr_0_block_43
      check: addr_0_block_43: // preds: addr_0_block_38 addr_0_block_42
      nextln:   v214 = bool.bitwise_not v15
      nextln:   jumpif v214, addr_0_block_44, addr_0_block_45
      check: addr_0_block_44: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v15, 0xc)
      check: addr_0_block_45: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v15, 0x0)
      check: addr_0_block_46(v215: i64, v216: i8): // preds: addr_0_block_44 addr_0_block_45
      nextln:   v217 = i64.lshr v8, 0x8
      nextln:   v218 = i8.trunc.i64 v217
      nextln:   v219 = i64.wrapping_add v10, 0x1
      nextln:   v220 = i64.unsigned_from_bits v219
      nextln:   v221 = int.modulo v220, 0x1
      nextln:   v222 = int.sub v220, v221
      nextln:   v223 = i64.to_bits v222
      nextln:   v224 = bool.icmp.i64.eq v219, v223
      nextln:   v225 = i64.lshr v219, 0x30
      nextln:   v226 = i16.trunc.i64 v225
      nextln:   v227 = bool.icmp.i16.eq v226, 0x0
      nextln:   v228 = bool.bitwise_not v227
      nextln:   jumpif v228, addr_0_block_47, addr_0_block_48
      check: addr_0_block_47: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_48: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_49(v1353: i52, v1354: int, v1355: bool, v1356: bool): // preds: addr_0_block_48
      nextln:   v1357 = i52.trunc.i64 v219
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1357, 0x1, 0x0)
      check: addr_0_block_50(v229: i3, v230: i1, v231: i1, v232: i1, v233: i1, v234: i4, v235: i1, v236: bool, v237: int, v238: int, v239: bool, v240: bool, v241: i8, v242: i8, v243: i52, v244: i1, v245: bool, v246: bool, v247: int, v248: i1, v249: bool, v250: i4, v251: i2, v252: i4, v253: i8, v254: i8, v255: i2, v256: i2, v257: bool, v258: i2, v259: i2, v260: bool, v261: bool, v262: bool, v263: bool, v264: i52, v265: i1, v266: i64, v267: i1, v268: i8, v269: i8, v270: i52, v271: i1, v272: bool, v273: bool, v274: int, v275: i1, v276: bool, v277: i4, v278: i2, v279: i4, v280: i8, v281: i8, v282: i2, v283: i2, v284: bool, v285: i2, v286: i2, v287: bool, v288: bool, v289: bool, v290: bool, v291: i52, v292: i1, v293: i64): // preds: addr_0_block_47 addr_0_block_49
      nextln:   v294 = bool.icmp.i8.ne v268, 0x0
      nextln:   v295 = bool.bitwise_not v294
      nextln:   v296 = bool.bitwise_not v15
      nextln:   v297 = bool.and v296, 0x1
      nextln:   v298 = bool.or v297, 0x0
      nextln:   v299 = bool.icmp.i8.ne v268, 0x0
      nextln:   v300 = bool.bitwise_not v299
      nextln:   v301 = bool.and v298, v300
      nextln:   v302 = bool.icmp.i8.eq v280, 0x1
      nextln:   v303 = bool.and v301, v302
      nextln:   jumpif v303, addr_0_block_51, addr_0_block_52
      check: addr_0_block_51: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_52: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_53: // preds: addr_0_block_51 addr_0_block_52
      nextln:   v304 = bool.icmp.i8.ne v268, 0x0
      nextln:   v305 = bool.bitwise_not v304
      nextln:   v306 = bool.icmp.i8.ne v268, 0x0
      nextln:   v307 = bool.bitwise_not v306
      nextln:   v308 = bool.icmp.i8.eq v280, 0x1
      nextln:   v309 = bool.and v307, v308
      nextln:   jumpif v239, addr_0_block_54, addr_0_block_55
      check: addr_0_block_54: // preds: addr_0_block_53
      nextln:   v310 = bool.icmp.i8.eq v268, 0x0
      nextln:   jump addr_0_block_56(0x1)
      check: addr_0_block_55: // preds: addr_0_block_53
      nextln:   jump addr_0_block_56(0x0)
      check: addr_0_block_56(v311: bool): // preds: addr_0_block_54 addr_0_block_55
      nextln:   v312 = bool.icmp.i8.eq v268, 0x0
      nextln:   v313 = bool.and v240, v312
      nextln:   jumpif v313, addr_0_block_57, addr_0_block_58
      check: addr_0_block_57: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x1, 0x1)
      check: addr_0_block_58: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x0, 0x0)
      check: addr_0_block_59(v314: bool, v315: bool): // preds: addr_0_block_57 addr_0_block_58
      nextln:   v316 = bool.or v311, v314
      nextln:   jumpif v316, addr_0_block_60, addr_0_block_73
      check: addr_0_block_60: // preds: addr_0_block_59
      nextln:   v317 = i52.unsigned_from_bits v264
      nextln:   v318 = int.modulo v317, 0x8
      nextln:   v319 = int.sub v317, v318
      nextln:   v320 = i52.to_bits v319
      nextln:   v321 = bool.icmp.i52.eq v264, v320
      nextln:   v322 = i64.load v264
      nextln:   jumpif v311, addr_0_block_61, addr_0_block_62
      nextln:   jump addr_0_block_74(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v322, v241, v242, v243, v244, v245, v246, v247, v248, v249, v250, v251, v252, v253, v254, v255, v256, v257, v258, v259, v260, v261, v262, v263, v264, v265, v266, 0x0, 0x0)
      check: addr_0_block_61: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_62: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_63: // preds: addr_0_block_61 addr_0_block_62
      nextln:   jumpif v314, addr_0_block_64, addr_0_block_65
      check: addr_0_block_64: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_65: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_66: // preds: addr_0_block_64 addr_0_block_65
      nextln:   v1374 = i52.unsigned_from_bits v264
      nextln:   v1375 = int.modulo v1374, 0x8
      nextln:   v1376 = int.sub v1374, v1375
      nextln:   v1377 = i52.to_bits v1376
      nextln:   v1378 = bool.icmp.i52.eq v264, v1377
      nextln:   v1379 = bool.icmp.i52.eq v264, 0x13000000
      nextln:   jumpif v1379, addr_0_block_67, addr_0_block_71
      check: addr_0_block_67: // preds: addr_0_block_66
      nextln:   v1380 = i64.unsigned_from_bits v322
      nextln:   v1381 = bool.icmp.int.eq v1380, 0x4
      nextln:   jumpif v1381, addr_0_block_68, addr_0_block_69
      nextln:   jump addr_0_block_72
      check: addr_0_block_68: // no preds!
      nextln:   jump addr_0_block_70
      check: addr_0_block_69: // no preds!
      nextln:   v1382 = i8.trunc.i64 v322
      nextln:   v1383 = i8.unsigned_from_bits v1382
      nextln:   jump addr_0_block_70
      check: addr_0_block_70: // preds: addr_0_block_68 addr_0_block_69
      check: addr_0_block_71: // preds: addr_0_block_66
      nextln:   store.i64 v322, v264
      nextln:   jump addr_0_block_72
      check: addr_0_block_72: // preds: addr_0_block_67 addr_0_block_71
      check: addr_0_block_73: // preds: addr_0_block_59
      nextln:   jump addr_0_block_74(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_74(v323: i8, v324: i1, v325: i16, v326: i8, v327: bool, v328: bool, v329: bool, v330: int, v331: i64, v332: i8, v333: i8, v334: i52, v335: i1, v336: bool, v337: bool, v338: int, v339: i1, v340: bool, v341: i4, v342: i2, v343: i4, v344: i8, v345: i8, v346: i2, v347: i2, v348: bool, v349: i2, v350: i2, v351: bool, v352: bool, v353: bool, v354: bool, v355: i52, v356: i1, v357: i64, v358: i2, v359: bool): // preds: addr_0_block_60 addr_0_block_73
      nextln:   v360 = bool.icmp.i8.ne v268, 0x0
      nextln:   v361 = bool.bitwise_not v360
      nextln:   v362 = bool.and v361, 0x1
      nextln:   v363 = bool.icmp.i8.ne v268, 0x0
      nextln:   v364 = bool.bitwise_not v363
      nextln:   v365 = bool.and 0x1, v364
      nextln:   jumpif v365, addr_0_block_75, addr_0_block_76
      check: addr_0_block_75: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_76: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_77: // preds: addr_0_block_75 addr_0_block_76
      nextln:   v366 = bool.icmp.i8.ne v268, 0x0
      nextln:   jumpif v366, addr_0_block_78, addr_0_block_79
      check: addr_0_block_78: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_79: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_80: // preds: addr_0_block_78 addr_0_block_79
      nextln:   jumpif v289, addr_0_block_81, addr_0_block_82
      check: addr_0_block_81: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_82: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_83: // preds: addr_0_block_81 addr_0_block_82
      nextln:   v367 = i52.unsigned_from_bits v291
      nextln:   v368 = int.modulo v367, 0x1
      nextln:   v369 = int.sub v367, v368
      nextln:   v370 = i52.to_bits v369
      nextln:   v371 = bool.icmp.i52.eq v291, v370
      nextln:   v372 = bool.icmp.i52.eq v291, 0x13000000
      nextln:   jumpif v372, addr_0_block_84, addr_0_block_88
      check: addr_0_block_84: // preds: addr_0_block_83
      nextln:   v373 = i8.unsigned_from_bits v218
      nextln:   v374 = bool.icmp.int.eq v373, 0x4
      nextln:   jumpif v374, addr_0_block_85, addr_0_block_86
      nextln:   jump addr_0_block_89
      check: addr_0_block_85: // no preds!
      nextln:   jump addr_0_block_87
      check: addr_0_block_86: // no preds!
      nextln:   v1384 = i8.unsigned_from_bits v218
      nextln:   jump addr_0_block_87
      check: addr_0_block_87: // preds: addr_0_block_85 addr_0_block_86
      check: addr_0_block_88: // preds: addr_0_block_83
      nextln:   store.i8 v218, v291
      nextln:   jump addr_0_block_89
      check: addr_0_block_89: // preds: addr_0_block_84 addr_0_block_88
      nextln:   v375 = i64.lshr v8, 0x10
      nextln:   v376 = i8.trunc.i64 v375
      nextln:   v377 = i64.wrapping_add v10, 0x2
      nextln:   v378 = i64.unsigned_from_bits v377
      nextln:   v379 = int.modulo v378, 0x1
      nextln:   v380 = int.sub v378, v379
      nextln:   v381 = i64.to_bits v380
      nextln:   v382 = bool.icmp.i64.eq v377, v381
      nextln:   v383 = i64.lshr v377, 0x30
      nextln:   v384 = i16.trunc.i64 v383
      nextln:   v385 = bool.icmp.i16.eq v384, 0x0
      nextln:   v386 = bool.bitwise_not v385
      nextln:   jumpif v386, addr_0_block_90, addr_0_block_91
      check: addr_0_block_90: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_91: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_92(v1348: i52, v1349: int, v1350: bool, v1351: bool): // preds: addr_0_block_91
      nextln:   v1352 = i52.trunc.i64 v377
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1352, 0x1, 0x0)
      check: addr_0_block_93(v387: i3, v388: i1, v389: i1, v390: i1, v391: i1, v392: i4, v393: i1, v394: bool, v395: int, v396: int, v397: bool, v398: bool, v399: i8, v400: i8, v401: i52, v402: i1, v403: bool, v404: bool, v405: int, v406: i1, v407: bool, v408: i4, v409: i2, v410: i4, v411: i8, v412: i8, v413: i2, v414: i2, v415: bool, v416: i2, v417: i2, v418: bool, v419: bool, v420: bool, v421: bool, v422: i52, v423: i1, v424: i64, v425: i1, v426: i8, v427: i8, v428: i52, v429: i1, v430: bool, v431: bool, v432: int, v433: i1, v434: bool, v435: i4, v436: i2, v437: i4, v438: i8, v439: i8, v440: i2, v441: i2, v442: bool, v443: i2, v444: i2, v445: bool, v446: bool, v447: bool, v448: bool, v449: i52, v450: i1, v451: i64): // preds: addr_0_block_90 addr_0_block_92
      nextln:   v452 = bool.icmp.i8.ne v426, 0x0
      nextln:   v453 = bool.bitwise_not v452
      nextln:   v454 = bool.bitwise_not v15
      nextln:   v455 = bool.and v454, 0x1
      nextln:   v456 = bool.or v455, 0x0
      nextln:   v457 = bool.icmp.i8.ne v426, 0x0
      nextln:   v458 = bool.bitwise_not v457
      nextln:   v459 = bool.and v456, v458
      nextln:   v460 = bool.icmp.i8.eq v438, 0x1
      nextln:   v461 = bool.and v459, v460
      nextln:   jumpif v461, addr_0_block_94, addr_0_block_95
      check: addr_0_block_94: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_95: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_96: // preds: addr_0_block_94 addr_0_block_95
      nextln:   v462 = bool.icmp.i8.ne v426, 0x0
      nextln:   v463 = bool.bitwise_not v462
      nextln:   v464 = bool.icmp.i8.ne v426, 0x0
      nextln:   v465 = bool.bitwise_not v464
      nextln:   v466 = bool.icmp.i8.eq v438, 0x1
      nextln:   v467 = bool.and v465, v466
      nextln:   jumpif v397, addr_0_block_97, addr_0_block_98
      check: addr_0_block_97: // preds: addr_0_block_96
      nextln:   v468 = bool.icmp.i8.eq v426, 0x0
      nextln:   jump addr_0_block_99(0x1)
      check: addr_0_block_98: // preds: addr_0_block_96
      nextln:   jump addr_0_block_99(0x0)
      check: addr_0_block_99(v469: bool): // preds: addr_0_block_97 addr_0_block_98
      nextln:   v470 = bool.icmp.i8.eq v426, 0x0
      nextln:   v471 = bool.and v398, v470
      nextln:   jumpif v471, addr_0_block_100, addr_0_block_101
      check: addr_0_block_100: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x1, 0x1)
      check: addr_0_block_101: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x0, 0x0)
      check: addr_0_block_102(v472: bool, v473: bool): // preds: addr_0_block_100 addr_0_block_101
      nextln:   v474 = bool.or v469, v472
      nextln:   jumpif v474, addr_0_block_103, addr_0_block_116
      check: addr_0_block_103: // preds: addr_0_block_102
      nextln:   v475 = i52.unsigned_from_bits v422
      nextln:   v476 = int.modulo v475, 0x8
      nextln:   v477 = int.sub v475, v476
      nextln:   v478 = i52.to_bits v477
      nextln:   v479 = bool.icmp.i52.eq v422, v478
      nextln:   v480 = i64.load v422
      nextln:   jumpif v469, addr_0_block_104, addr_0_block_105
      nextln:   jump addr_0_block_117(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v480, v399, v400, v401, v402, v403, v404, v405, v406, v407, v408, v409, v410, v411, v412, v413, v414, v415, v416, v417, v418, v419, v420, v421, v422, v423, v424, 0x0, 0x0)
      check: addr_0_block_104: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_105: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_106: // preds: addr_0_block_104 addr_0_block_105
      nextln:   jumpif v472, addr_0_block_107, addr_0_block_108
      check: addr_0_block_107: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_108: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_109: // preds: addr_0_block_107 addr_0_block_108
      nextln:   v1385 = i52.unsigned_from_bits v422
      nextln:   v1386 = int.modulo v1385, 0x8
      nextln:   v1387 = int.sub v1385, v1386
      nextln:   v1388 = i52.to_bits v1387
      nextln:   v1389 = bool.icmp.i52.eq v422, v1388
      nextln:   v1390 = bool.icmp.i52.eq v422, 0x13000000
      nextln:   jumpif v1390, addr_0_block_110, addr_0_block_114
      check: addr_0_block_110: // preds: addr_0_block_109
      nextln:   v1391 = i64.unsigned_from_bits v480
      nextln:   v1392 = bool.icmp.int.eq v1391, 0x4
      nextln:   jumpif v1392, addr_0_block_111, addr_0_block_112
      nextln:   jump addr_0_block_115
      check: addr_0_block_111: // no preds!
      nextln:   jump addr_0_block_113
      check: addr_0_block_112: // no preds!
      nextln:   v1393 = i8.trunc.i64 v480
      nextln:   v1394 = i8.unsigned_from_bits v1393
      nextln:   jump addr_0_block_113
      check: addr_0_block_113: // preds: addr_0_block_111 addr_0_block_112
      check: addr_0_block_114: // preds: addr_0_block_109
      nextln:   store.i64 v480, v422
      nextln:   jump addr_0_block_115
      check: addr_0_block_115: // preds: addr_0_block_110 addr_0_block_114
      check: addr_0_block_116: // preds: addr_0_block_102
      nextln:   jump addr_0_block_117(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_117(v481: i8, v482: i1, v483: i16, v484: i8, v485: bool, v486: bool, v487: bool, v488: int, v489: i64, v490: i8, v491: i8, v492: i52, v493: i1, v494: bool, v495: bool, v496: int, v497: i1, v498: bool, v499: i4, v500: i2, v501: i4, v502: i8, v503: i8, v504: i2, v505: i2, v506: bool, v507: i2, v508: i2, v509: bool, v510: bool, v511: bool, v512: bool, v513: i52, v514: i1, v515: i64, v516: i2, v517: bool): // preds: addr_0_block_103 addr_0_block_116
      nextln:   v518 = bool.icmp.i8.ne v426, 0x0
      nextln:   v519 = bool.bitwise_not v518
      nextln:   v520 = bool.and v519, 0x1
      nextln:   v521 = bool.icmp.i8.ne v426, 0x0
      nextln:   v522 = bool.bitwise_not v521
      nextln:   v523 = bool.and 0x1, v522
      nextln:   jumpif v523, addr_0_block_118, addr_0_block_119
      check: addr_0_block_118: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_119: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_120: // preds: addr_0_block_118 addr_0_block_119
      nextln:   v524 = bool.icmp.i8.ne v426, 0x0
      nextln:   jumpif v524, addr_0_block_121, addr_0_block_122
      check: addr_0_block_121: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_122: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_123: // preds: addr_0_block_121 addr_0_block_122
      nextln:   jumpif v447, addr_0_block_124, addr_0_block_125
      check: addr_0_block_124: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_125: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_126: // preds: addr_0_block_124 addr_0_block_125
      nextln:   v525 = i52.unsigned_from_bits v449
      nextln:   v526 = int.modulo v525, 0x1
      nextln:   v527 = int.sub v525, v526
      nextln:   v528 = i52.to_bits v527
      nextln:   v529 = bool.icmp.i52.eq v449, v528
      nextln:   v530 = bool.icmp.i52.eq v449, 0x13000000
      nextln:   jumpif v530, addr_0_block_127, addr_0_block_131
      check: addr_0_block_127: // preds: addr_0_block_126
      nextln:   v531 = i8.unsigned_from_bits v376
      nextln:   v532 = bool.icmp.int.eq v531, 0x4
      nextln:   jumpif v532, addr_0_block_128, addr_0_block_129
      nextln:   jump addr_0_block_132
      check: addr_0_block_128: // no preds!
      nextln:   jump addr_0_block_130
      check: addr_0_block_129: // no preds!
      nextln:   v1395 = i8.unsigned_from_bits v376
      nextln:   jump addr_0_block_130
      check: addr_0_block_130: // preds: addr_0_block_128 addr_0_block_129
      check: addr_0_block_131: // preds: addr_0_block_126
      nextln:   store.i8 v376, v449
      nextln:   jump addr_0_block_132
      check: addr_0_block_132: // preds: addr_0_block_127 addr_0_block_131
      nextln:   v533 = i64.lshr v8, 0x18
      nextln:   v534 = i8.trunc.i64 v533
      nextln:   v535 = i64.wrapping_add v10, 0x3
      nextln:   v536 = i64.unsigned_from_bits v535
      nextln:   v537 = int.modulo v536, 0x1
      nextln:   v538 = int.sub v536, v537
      nextln:   v539 = i64.to_bits v538
      nextln:   v540 = bool.icmp.i64.eq v535, v539
      nextln:   v541 = i64.lshr v535, 0x30
      nextln:   v542 = i16.trunc.i64 v541
      nextln:   v543 = bool.icmp.i16.eq v542, 0x0
      nextln:   v544 = bool.bitwise_not v543
      nextln:   jumpif v544, addr_0_block_133, addr_0_block_134
      check: addr_0_block_133: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_134: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_135(v1343: i52, v1344: int, v1345: bool, v1346: bool): // preds: addr_0_block_134
      nextln:   v1347 = i52.trunc.i64 v535
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1347, 0x1, 0x0)
      check: addr_0_block_136(v545: i3, v546: i1, v547: i1, v548: i1, v549: i1, v550: i4, v551: i1, v552: bool, v553: int, v554: int, v555: bool, v556: bool, v557: i8, v558: i8, v559: i52, v560: i1, v561: bool, v562: bool, v563: int, v564: i1, v565: bool, v566: i4, v567: i2, v568: i4, v569: i8, v570: i8, v571: i2, v572: i2, v573: bool, v574: i2, v575: i2, v576: bool, v577: bool, v578: bool, v579: bool, v580: i52, v581: i1, v582: i64, v583: i1, v584: i8, v585: i8, v586: i52, v587: i1, v588: bool, v589: bool, v590: int, v591: i1, v592: bool, v593: i4, v594: i2, v595: i4, v596: i8, v597: i8, v598: i2, v599: i2, v600: bool, v601: i2, v602: i2, v603: bool, v604: bool, v605: bool, v606: bool, v607: i52, v608: i1, v609: i64): // preds: addr_0_block_133 addr_0_block_135
      nextln:   v610 = bool.icmp.i8.ne v584, 0x0
      nextln:   v611 = bool.bitwise_not v610
      nextln:   v612 = bool.bitwise_not v15
      nextln:   v613 = bool.and v612, 0x1
      nextln:   v614 = bool.or v613, 0x0
      nextln:   v615 = bool.icmp.i8.ne v584, 0x0
      nextln:   v616 = bool.bitwise_not v615
      nextln:   v617 = bool.and v614, v616
      nextln:   v618 = bool.icmp.i8.eq v596, 0x1
      nextln:   v619 = bool.and v617, v618
      nextln:   jumpif v619, addr_0_block_137, addr_0_block_138
      check: addr_0_block_137: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_138: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_139: // preds: addr_0_block_137 addr_0_block_138
      nextln:   v620 = bool.icmp.i8.ne v584, 0x0
      nextln:   v621 = bool.bitwise_not v620
      nextln:   v622 = bool.icmp.i8.ne v584, 0x0
      nextln:   v623 = bool.bitwise_not v622
      nextln:   v624 = bool.icmp.i8.eq v596, 0x1
      nextln:   v625 = bool.and v623, v624
      nextln:   jumpif v555, addr_0_block_140, addr_0_block_141
      check: addr_0_block_140: // preds: addr_0_block_139
      nextln:   v626 = bool.icmp.i8.eq v584, 0x0
      nextln:   jump addr_0_block_142(0x1)
      check: addr_0_block_141: // preds: addr_0_block_139
      nextln:   jump addr_0_block_142(0x0)
      check: addr_0_block_142(v627: bool): // preds: addr_0_block_140 addr_0_block_141
      nextln:   v628 = bool.icmp.i8.eq v584, 0x0
      nextln:   v629 = bool.and v556, v628
      nextln:   jumpif v629, addr_0_block_143, addr_0_block_144
      check: addr_0_block_143: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x1, 0x1)
      check: addr_0_block_144: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x0, 0x0)
      check: addr_0_block_145(v630: bool, v631: bool): // preds: addr_0_block_143 addr_0_block_144
      nextln:   v632 = bool.or v627, v630
      nextln:   jumpif v632, addr_0_block_146, addr_0_block_159
      check: addr_0_block_146: // preds: addr_0_block_145
      nextln:   v633 = i52.unsigned_from_bits v580
      nextln:   v634 = int.modulo v633, 0x8
      nextln:   v635 = int.sub v633, v634
      nextln:   v636 = i52.to_bits v635
      nextln:   v637 = bool.icmp.i52.eq v580, v636
      nextln:   v638 = i64.load v580
      nextln:   jumpif v627, addr_0_block_147, addr_0_block_148
      nextln:   jump addr_0_block_160(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v638, v557, v558, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569, v570, v571, v572, v573, v574, v575, v576, v577, v578, v579, v580, v581, v582, 0x0, 0x0)
      check: addr_0_block_147: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_148: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_149: // preds: addr_0_block_147 addr_0_block_148
      nextln:   jumpif v630, addr_0_block_150, addr_0_block_151
      check: addr_0_block_150: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_151: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_152: // preds: addr_0_block_150 addr_0_block_151
      nextln:   v1396 = i52.unsigned_from_bits v580
      nextln:   v1397 = int.modulo v1396, 0x8
      nextln:   v1398 = int.sub v1396, v1397
      nextln:   v1399 = i52.to_bits v1398
      nextln:   v1400 = bool.icmp.i52.eq v580, v1399
      nextln:   v1401 = bool.icmp.i52.eq v580, 0x13000000
      nextln:   jumpif v1401, addr_0_block_153, addr_0_block_157
      check: addr_0_block_153: // preds: addr_0_block_152
      nextln:   v1402 = i64.unsigned_from_bits v638
      nextln:   v1403 = bool.icmp.int.eq v1402, 0x4
      nextln:   jumpif v1403, addr_0_block_154, addr_0_block_155
      nextln:   jump addr_0_block_158
      check: addr_0_block_154: // no preds!
      nextln:   jump addr_0_block_156
      check: addr_0_block_155: // no preds!
      nextln:   v1404 = i8.trunc.i64 v638
      nextln:   v1405 = i8.unsigned_from_bits v1404
      nextln:   jump addr_0_block_156
      check: addr_0_block_156: // preds: addr_0_block_154 addr_0_block_155
      check: addr_0_block_157: // preds: addr_0_block_152
      nextln:   store.i64 v638, v580
      nextln:   jump addr_0_block_158
      check: addr_0_block_158: // preds: addr_0_block_153 addr_0_block_157
      check: addr_0_block_159: // preds: addr_0_block_145
      nextln:   jump addr_0_block_160(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_160(v639: i8, v640: i1, v641: i16, v642: i8, v643: bool, v644: bool, v645: bool, v646: int, v647: i64, v648: i8, v649: i8, v650: i52, v651: i1, v652: bool, v653: bool, v654: int, v655: i1, v656: bool, v657: i4, v658: i2, v659: i4, v660: i8, v661: i8, v662: i2, v663: i2, v664: bool, v665: i2, v666: i2, v667: bool, v668: bool, v669: bool, v670: bool, v671: i52, v672: i1, v673: i64, v674: i2, v675: bool): // preds: addr_0_block_146 addr_0_block_159
      nextln:   v676 = bool.icmp.i8.ne v584, 0x0
      nextln:   v677 = bool.bitwise_not v676
      nextln:   v678 = bool.and v677, 0x1
      nextln:   v679 = bool.icmp.i8.ne v584, 0x0
      nextln:   v680 = bool.bitwise_not v679
      nextln:   v681 = bool.and 0x1, v680
      nextln:   jumpif v681, addr_0_block_161, addr_0_block_162
      check: addr_0_block_161: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_162: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_163: // preds: addr_0_block_161 addr_0_block_162
      nextln:   v682 = bool.icmp.i8.ne v584, 0x0
      nextln:   jumpif v682, addr_0_block_164, addr_0_block_165
      check: addr_0_block_164: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_165: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_166: // preds: addr_0_block_164 addr_0_block_165
      nextln:   jumpif v605, addr_0_block_167, addr_0_block_168
      check: addr_0_block_167: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_168: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_169: // preds: addr_0_block_167 addr_0_block_168
      nextln:   v683 = i52.unsigned_from_bits v607
      nextln:   v684 = int.modulo v683, 0x1
      nextln:   v685 = int.sub v683, v684
      nextln:   v686 = i52.to_bits v685
      nextln:   v687 = bool.icmp.i52.eq v607, v686
      nextln:   v688 = bool.icmp.i52.eq v607, 0x13000000
      nextln:   jumpif v688, addr_0_block_170, addr_0_block_174
      check: addr_0_block_170: // preds: addr_0_block_169
      nextln:   v689 = i8.unsigned_from_bits v534
      nextln:   v690 = bool.icmp.int.eq v689, 0x4
      nextln:   jumpif v690, addr_0_block_171, addr_0_block_172
      nextln:   jump addr_0_block_175
      check: addr_0_block_171: // no preds!
      nextln:   jump addr_0_block_173
      check: addr_0_block_172: // no preds!
      nextln:   v1406 = i8.unsigned_from_bits v534
      nextln:   jump addr_0_block_173
      check: addr_0_block_173: // preds: addr_0_block_171 addr_0_block_172
      check: addr_0_block_174: // preds: addr_0_block_169
      nextln:   store.i8 v534, v607
      nextln:   jump addr_0_block_175
      check: addr_0_block_175: // preds: addr_0_block_170 addr_0_block_174
      nextln:   v691 = i64.lshr v8, 0x20
      nextln:   v692 = i8.trunc.i64 v691
      nextln:   v693 = i64.wrapping_add v10, 0x4
      nextln:   v694 = i64.unsigned_from_bits v693
      nextln:   v695 = int.modulo v694, 0x1
      nextln:   v696 = int.sub v694, v695
      nextln:   v697 = i64.to_bits v696
      nextln:   v698 = bool.icmp.i64.eq v693, v697
      nextln:   v699 = i64.lshr v693, 0x30
      nextln:   v700 = i16.trunc.i64 v699
      nextln:   v701 = bool.icmp.i16.eq v700, 0x0
      nextln:   v702 = bool.bitwise_not v701
      nextln:   jumpif v702, addr_0_block_176, addr_0_block_177
      check: addr_0_block_176: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_177: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_178(v1338: i52, v1339: int, v1340: bool, v1341: bool): // preds: addr_0_block_177
      nextln:   v1342 = i52.trunc.i64 v693
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1342, 0x1, 0x0)
      check: addr_0_block_179(v703: i3, v704: i1, v705: i1, v706: i1, v707: i1, v708: i4, v709: i1, v710: bool, v711: int, v712: int, v713: bool, v714: bool, v715: i8, v716: i8, v717: i52, v718: i1, v719: bool, v720: bool, v721: int, v722: i1, v723: bool, v724: i4, v725: i2, v726: i4, v727: i8, v728: i8, v729: i2, v730: i2, v731: bool, v732: i2, v733: i2, v734: bool, v735: bool, v736: bool, v737: bool, v738: i52, v739: i1, v740: i64, v741: i1, v742: i8, v743: i8, v744: i52, v745: i1, v746: bool, v747: bool, v748: int, v749: i1, v750: bool, v751: i4, v752: i2, v753: i4, v754: i8, v755: i8, v756: i2, v757: i2, v758: bool, v759: i2, v760: i2, v761: bool, v762: bool, v763: bool, v764: bool, v765: i52, v766: i1, v767: i64): // preds: addr_0_block_176 addr_0_block_178
      nextln:   v768 = bool.icmp.i8.ne v742, 0x0
      nextln:   v769 = bool.bitwise_not v768
      nextln:   v770 = bool.bitwise_not v15
      nextln:   v771 = bool.and v770, 0x1
      nextln:   v772 = bool.or v771, 0x0
      nextln:   v773 = bool.icmp.i8.ne v742, 0x0
      nextln:   v774 = bool.bitwise_not v773
      nextln:   v775 = bool.and v772, v774
      nextln:   v776 = bool.icmp.i8.eq v754, 0x1
      nextln:   v777 = bool.and v775, v776
      nextln:   jumpif v777, addr_0_block_180, addr_0_block_181
      check: addr_0_block_180: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_181: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_182: // preds: addr_0_block_180 addr_0_block_181
      nextln:   v778 = bool.icmp.i8.ne v742, 0x0
      nextln:   v779 = bool.bitwise_not v778
      nextln:   v780 = bool.icmp.i8.ne v742, 0x0
      nextln:   v781 = bool.bitwise_not v780
      nextln:   v782 = bool.icmp.i8.eq v754, 0x1
      nextln:   v783 = bool.and v781, v782
      nextln:   jumpif v713, addr_0_block_183, addr_0_block_184
      check: addr_0_block_183: // preds: addr_0_block_182
      nextln:   v784 = bool.icmp.i8.eq v742, 0x0
      nextln:   jump addr_0_block_185(0x1)
      check: addr_0_block_184: // preds: addr_0_block_182
      nextln:   jump addr_0_block_185(0x0)
      check: addr_0_block_185(v785: bool): // preds: addr_0_block_183 addr_0_block_184
      nextln:   v786 = bool.icmp.i8.eq v742, 0x0
      nextln:   v787 = bool.and v714, v786
      nextln:   jumpif v787, addr_0_block_186, addr_0_block_187
      check: addr_0_block_186: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x1, 0x1)
      check: addr_0_block_187: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x0, 0x0)
      check: addr_0_block_188(v788: bool, v789: bool): // preds: addr_0_block_186 addr_0_block_187
      nextln:   v790 = bool.or v785, v788
      nextln:   jumpif v790, addr_0_block_189, addr_0_block_202
      check: addr_0_block_189: // preds: addr_0_block_188
      nextln:   v791 = i52.unsigned_from_bits v738
      nextln:   v792 = int.modulo v791, 0x8
      nextln:   v793 = int.sub v791, v792
      nextln:   v794 = i52.to_bits v793
      nextln:   v795 = bool.icmp.i52.eq v738, v794
      nextln:   v796 = i64.load v738
      nextln:   jumpif v785, addr_0_block_190, addr_0_block_191
      nextln:   jump addr_0_block_203(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v796, v715, v716, v717, v718, v719, v720, v721, v722, v723, v724, v725, v726, v727, v728, v729, v730, v731, v732, v733, v734, v735, v736, v737, v738, v739, v740, 0x0, 0x0)
      check: addr_0_block_190: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_191: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_192: // preds: addr_0_block_190 addr_0_block_191
      nextln:   jumpif v788, addr_0_block_193, addr_0_block_194
      check: addr_0_block_193: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_194: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_195: // preds: addr_0_block_193 addr_0_block_194
      nextln:   v1407 = i52.unsigned_from_bits v738
      nextln:   v1408 = int.modulo v1407, 0x8
      nextln:   v1409 = int.sub v1407, v1408
      nextln:   v1410 = i52.to_bits v1409
      nextln:   v1411 = bool.icmp.i52.eq v738, v1410
      nextln:   v1412 = bool.icmp.i52.eq v738, 0x13000000
      nextln:   jumpif v1412, addr_0_block_196, addr_0_block_200
      check: addr_0_block_196: // preds: addr_0_block_195
      nextln:   v1413 = i64.unsigned_from_bits v796
      nextln:   v1414 = bool.icmp.int.eq v1413, 0x4
      nextln:   jumpif v1414, addr_0_block_197, addr_0_block_198
      nextln:   jump addr_0_block_201
      check: addr_0_block_197: // no preds!
      nextln:   jump addr_0_block_199
      check: addr_0_block_198: // no preds!
      nextln:   v1415 = i8.trunc.i64 v796
      nextln:   v1416 = i8.unsigned_from_bits v1415
      nextln:   jump addr_0_block_199
      check: addr_0_block_199: // preds: addr_0_block_197 addr_0_block_198
      check: addr_0_block_200: // preds: addr_0_block_195
      nextln:   store.i64 v796, v738
      nextln:   jump addr_0_block_201
      check: addr_0_block_201: // preds: addr_0_block_196 addr_0_block_200
      check: addr_0_block_202: // preds: addr_0_block_188
      nextln:   jump addr_0_block_203(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_203(v797: i8, v798: i1, v799: i16, v800: i8, v801: bool, v802: bool, v803: bool, v804: int, v805: i64, v806: i8, v807: i8, v808: i52, v809: i1, v810: bool, v811: bool, v812: int, v813: i1, v814: bool, v815: i4, v816: i2, v817: i4, v818: i8, v819: i8, v820: i2, v821: i2, v822: bool, v823: i2, v824: i2, v825: bool, v826: bool, v827: bool, v828: bool, v829: i52, v830: i1, v831: i64, v832: i2, v833: bool): // preds: addr_0_block_189 addr_0_block_202
      nextln:   v834 = bool.icmp.i8.ne v742, 0x0
      nextln:   v835 = bool.bitwise_not v834
      nextln:   v836 = bool.and v835, 0x1
      nextln:   v837 = bool.icmp.i8.ne v742, 0x0
      nextln:   v838 = bool.bitwise_not v837
      nextln:   v839 = bool.and 0x1, v838
      nextln:   jumpif v839, addr_0_block_204, addr_0_block_205
      check: addr_0_block_204: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_205: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_206: // preds: addr_0_block_204 addr_0_block_205
      nextln:   v840 = bool.icmp.i8.ne v742, 0x0
      nextln:   jumpif v840, addr_0_block_207, addr_0_block_208
      check: addr_0_block_207: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_208: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_209: // preds: addr_0_block_207 addr_0_block_208
      nextln:   jumpif v763, addr_0_block_210, addr_0_block_211
      check: addr_0_block_210: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_211: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_212: // preds: addr_0_block_210 addr_0_block_211
      nextln:   v841 = i52.unsigned_from_bits v765
      nextln:   v842 = int.modulo v841, 0x1
      nextln:   v843 = int.sub v841, v842
      nextln:   v844 = i52.to_bits v843
      nextln:   v845 = bool.icmp.i52.eq v765, v844
      nextln:   v846 = bool.icmp.i52.eq v765, 0x13000000
      nextln:   jumpif v846, addr_0_block_213, addr_0_block_217
      check: addr_0_block_213: // preds: addr_0_block_212
      nextln:   v847 = i8.unsigned_from_bits v692
      nextln:   v848 = bool.icmp.int.eq v847, 0x4
      nextln:   jumpif v848, addr_0_block_214, addr_0_block_215
      nextln:   jump addr_0_block_218
      check: addr_0_block_214: // no preds!
      nextln:   jump addr_0_block_216
      check: addr_0_block_215: // no preds!
      nextln:   v1417 = i8.unsigned_from_bits v692
      nextln:   jump addr_0_block_216
      check: addr_0_block_216: // preds: addr_0_block_214 addr_0_block_215
      check: addr_0_block_217: // preds: addr_0_block_212
      nextln:   store.i8 v692, v765
      nextln:   jump addr_0_block_218
      check: addr_0_block_218: // preds: addr_0_block_213 addr_0_block_217
      nextln:   v849 = i64.lshr v8, 0x28
      nextln:   v850 = i8.trunc.i64 v849
      nextln:   v851 = i64.wrapping_add v10, 0x5
      nextln:   v852 = i64.unsigned_from_bits v851
      nextln:   v853 = int.modulo v852, 0x1
      nextln:   v854 = int.sub v852, v853
      nextln:   v855 = i64.to_bits v854
      nextln:   v856 = bool.icmp.i64.eq v851, v855
      nextln:   v857 = i64.lshr v851, 0x30
      nextln:   v858 = i16.trunc.i64 v857
      nextln:   v859 = bool.icmp.i16.eq v858, 0x0
      nextln:   v860 = bool.bitwise_not v859
      nextln:   jumpif v860, addr_0_block_219, addr_0_block_220
      check: addr_0_block_219: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_220: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_221(v1333: i52, v1334: int, v1335: bool, v1336: bool): // preds: addr_0_block_220
      nextln:   v1337 = i52.trunc.i64 v851
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1337, 0x1, 0x0)
      check: addr_0_block_222(v861: i3, v862: i1, v863: i1, v864: i1, v865: i1, v866: i4, v867: i1, v868: bool, v869: int, v870: int, v871: bool, v872: bool, v873: i8, v874: i8, v875: i52, v876: i1, v877: bool, v878: bool, v879: int, v880: i1, v881: bool, v882: i4, v883: i2, v884: i4, v885: i8, v886: i8, v887: i2, v888: i2, v889: bool, v890: i2, v891: i2, v892: bool, v893: bool, v894: bool, v895: bool, v896: i52, v897: i1, v898: i64, v899: i1, v900: i8, v901: i8, v902: i52, v903: i1, v904: bool, v905: bool, v906: int, v907: i1, v908: bool, v909: i4, v910: i2, v911: i4, v912: i8, v913: i8, v914: i2, v915: i2, v916: bool, v917: i2, v918: i2, v919: bool, v920: bool, v921: bool, v922: bool, v923: i52, v924: i1, v925: i64): // preds: addr_0_block_219 addr_0_block_221
      nextln:   v926 = bool.icmp.i8.ne v900, 0x0
      nextln:   v927 = bool.bitwise_not v926
      nextln:   v928 = bool.bitwise_not v15
      nextln:   v929 = bool.and v928, 0x1
      nextln:   v930 = bool.or v929, 0x0
      nextln:   v931 = bool.icmp.i8.ne v900, 0x0
      nextln:   v932 = bool.bitwise_not v931
      nextln:   v933 = bool.and v930, v932
      nextln:   v934 = bool.icmp.i8.eq v912, 0x1
      nextln:   v935 = bool.and v933, v934
      nextln:   jumpif v935, addr_0_block_223, addr_0_block_224
      check: addr_0_block_223: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_224: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_225: // preds: addr_0_block_223 addr_0_block_224
      nextln:   v936 = bool.icmp.i8.ne v900, 0x0
      nextln:   v937 = bool.bitwise_not v936
      nextln:   v938 = bool.icmp.i8.ne v900, 0x0
      nextln:   v939 = bool.bitwise_not v938
      nextln:   v940 = bool.icmp.i8.eq v912, 0x1
      nextln:   v941 = bool.and v939, v940
      nextln:   jumpif v871, addr_0_block_226, addr_0_block_227
      check: addr_0_block_226: // preds: addr_0_block_225
      nextln:   v942 = bool.icmp.i8.eq v900, 0x0
      nextln:   jump addr_0_block_228(0x1)
      check: addr_0_block_227: // preds: addr_0_block_225
      nextln:   jump addr_0_block_228(0x0)
      check: addr_0_block_228(v943: bool): // preds: addr_0_block_226 addr_0_block_227
      nextln:   v944 = bool.icmp.i8.eq v900, 0x0
      nextln:   v945 = bool.and v872, v944
      nextln:   jumpif v945, addr_0_block_229, addr_0_block_230
      check: addr_0_block_229: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x1, 0x1)
      check: addr_0_block_230: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x0, 0x0)
      check: addr_0_block_231(v946: bool, v947: bool): // preds: addr_0_block_229 addr_0_block_230
      nextln:   v948 = bool.or v943, v946
      nextln:   jumpif v948, addr_0_block_232, addr_0_block_245
      check: addr_0_block_232: // preds: addr_0_block_231
      nextln:   v949 = i52.unsigned_from_bits v896
      nextln:   v950 = int.modulo v949, 0x8
      nextln:   v951 = int.sub v949, v950
      nextln:   v952 = i52.to_bits v951
      nextln:   v953 = bool.icmp.i52.eq v896, v952
      nextln:   v954 = i64.load v896
      nextln:   jumpif v943, addr_0_block_233, addr_0_block_234
      nextln:   jump addr_0_block_246(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v954, v873, v874, v875, v876, v877, v878, v879, v880, v881, v882, v883, v884, v885, v886, v887, v888, v889, v890, v891, v892, v893, v894, v895, v896, v897, v898, 0x0, 0x0)
      check: addr_0_block_233: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_234: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_235: // preds: addr_0_block_233 addr_0_block_234
      nextln:   jumpif v946, addr_0_block_236, addr_0_block_237
      check: addr_0_block_236: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_237: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_238: // preds: addr_0_block_236 addr_0_block_237
      nextln:   v1418 = i52.unsigned_from_bits v896
      nextln:   v1419 = int.modulo v1418, 0x8
      nextln:   v1420 = int.sub v1418, v1419
      nextln:   v1421 = i52.to_bits v1420
      nextln:   v1422 = bool.icmp.i52.eq v896, v1421
      nextln:   v1423 = bool.icmp.i52.eq v896, 0x13000000
      nextln:   jumpif v1423, addr_0_block_239, addr_0_block_243
      check: addr_0_block_239: // preds: addr_0_block_238
      nextln:   v1424 = i64.unsigned_from_bits v954
      nextln:   v1425 = bool.icmp.int.eq v1424, 0x4
      nextln:   jumpif v1425, addr_0_block_240, addr_0_block_241
      nextln:   jump addr_0_block_244
      check: addr_0_block_240: // no preds!
      nextln:   jump addr_0_block_242
      check: addr_0_block_241: // no preds!
      nextln:   v1426 = i8.trunc.i64 v954
      nextln:   v1427 = i8.unsigned_from_bits v1426
      nextln:   jump addr_0_block_242
      check: addr_0_block_242: // preds: addr_0_block_240 addr_0_block_241
      check: addr_0_block_243: // preds: addr_0_block_238
      nextln:   store.i64 v954, v896
      nextln:   jump addr_0_block_244
      check: addr_0_block_244: // preds: addr_0_block_239 addr_0_block_243
      check: addr_0_block_245: // preds: addr_0_block_231
      nextln:   jump addr_0_block_246(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_246(v955: i8, v956: i1, v957: i16, v958: i8, v959: bool, v960: bool, v961: bool, v962: int, v963: i64, v964: i8, v965: i8, v966: i52, v967: i1, v968: bool, v969: bool, v970: int, v971: i1, v972: bool, v973: i4, v974: i2, v975: i4, v976: i8, v977: i8, v978: i2, v979: i2, v980: bool, v981: i2, v982: i2, v983: bool, v984: bool, v985: bool, v986: bool, v987: i52, v988: i1, v989: i64, v990: i2, v991: bool): // preds: addr_0_block_232 addr_0_block_245
      nextln:   v992 = bool.icmp.i8.ne v900, 0x0
      nextln:   v993 = bool.bitwise_not v992
      nextln:   v994 = bool.and v993, 0x1
      nextln:   v995 = bool.icmp.i8.ne v900, 0x0
      nextln:   v996 = bool.bitwise_not v995
      nextln:   v997 = bool.and 0x1, v996
      nextln:   jumpif v997, addr_0_block_247, addr_0_block_248
      check: addr_0_block_247: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_248: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_249: // preds: addr_0_block_247 addr_0_block_248
      nextln:   v998 = bool.icmp.i8.ne v900, 0x0
      nextln:   jumpif v998, addr_0_block_250, addr_0_block_251
      check: addr_0_block_250: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_251: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_252: // preds: addr_0_block_250 addr_0_block_251
      nextln:   jumpif v921, addr_0_block_253, addr_0_block_254
      check: addr_0_block_253: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_254: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_255: // preds: addr_0_block_253 addr_0_block_254
      nextln:   v999 = i52.unsigned_from_bits v923
      nextln:   v1000 = int.modulo v999, 0x1
      nextln:   v1001 = int.sub v999, v1000
      nextln:   v1002 = i52.to_bits v1001
      nextln:   v1003 = bool.icmp.i52.eq v923, v1002
      nextln:   v1004 = bool.icmp.i52.eq v923, 0x13000000
      nextln:   jumpif v1004, addr_0_block_256, addr_0_block_260
      check: addr_0_block_256: // preds: addr_0_block_255
      nextln:   v1005 = i8.unsigned_from_bits v850
      nextln:   v1006 = bool.icmp.int.eq v1005, 0x4
      nextln:   jumpif v1006, addr_0_block_257, addr_0_block_258
      nextln:   jump addr_0_block_261
      check: addr_0_block_257: // no preds!
      nextln:   jump addr_0_block_259
      check: addr_0_block_258: // no preds!
      nextln:   v1428 = i8.unsigned_from_bits v850
      nextln:   jump addr_0_block_259
      check: addr_0_block_259: // preds: addr_0_block_257 addr_0_block_258
      check: addr_0_block_260: // preds: addr_0_block_255
      nextln:   store.i8 v850, v923
      nextln:   jump addr_0_block_261
      check: addr_0_block_261: // preds: addr_0_block_256 addr_0_block_260
      nextln:   v1007 = i64.lshr v8, 0x30
      nextln:   v1008 = i8.trunc.i64 v1007
      nextln:   v1009 = i64.wrapping_add v10, 0x6
      nextln:   v1010 = i64.unsigned_from_bits v1009
      nextln:   v1011 = int.modulo v1010, 0x1
      nextln:   v1012 = int.sub v1010, v1011
      nextln:   v1013 = i64.to_bits v1012
      nextln:   v1014 = bool.icmp.i64.eq v1009, v1013
      nextln:   v1015 = i64.lshr v1009, 0x30
      nextln:   v1016 = i16.trunc.i64 v1015
      nextln:   v1017 = bool.icmp.i16.eq v1016, 0x0
      nextln:   v1018 = bool.bitwise_not v1017
      nextln:   jumpif v1018, addr_0_block_262, addr_0_block_263
      check: addr_0_block_262: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_263: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_264(v1328: i52, v1329: int, v1330: bool, v1331: bool): // preds: addr_0_block_263
      nextln:   v1332 = i52.trunc.i64 v1009
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1332, 0x1, 0x0)
      check: addr_0_block_265(v1019: i3, v1020: i1, v1021: i1, v1022: i1, v1023: i1, v1024: i4, v1025: i1, v1026: bool, v1027: int, v1028: int, v1029: bool, v1030: bool, v1031: i8, v1032: i8, v1033: i52, v1034: i1, v1035: bool, v1036: bool, v1037: int, v1038: i1, v1039: bool, v1040: i4, v1041: i2, v1042: i4, v1043: i8, v1044: i8, v1045: i2, v1046: i2, v1047: bool, v1048: i2, v1049: i2, v1050: bool, v1051: bool, v1052: bool, v1053: bool, v1054: i52, v1055: i1, v1056: i64, v1057: i1, v1058: i8, v1059: i8, v1060: i52, v1061: i1, v1062: bool, v1063: bool, v1064: int, v1065: i1, v1066: bool, v1067: i4, v1068: i2, v1069: i4, v1070: i8, v1071: i8, v1072: i2, v1073: i2, v1074: bool, v1075: i2, v1076: i2, v1077: bool, v1078: bool, v1079: bool, v1080: bool, v1081: i52, v1082: i1, v1083: i64): // preds: addr_0_block_262 addr_0_block_264
      nextln:   v1084 = bool.icmp.i8.ne v1058, 0x0
      nextln:   v1085 = bool.bitwise_not v1084
      nextln:   v1086 = bool.bitwise_not v15
      nextln:   v1087 = bool.and v1086, 0x1
      nextln:   v1088 = bool.or v1087, 0x0
      nextln:   v1089 = bool.icmp.i8.ne v1058, 0x0
      nextln:   v1090 = bool.bitwise_not v1089
      nextln:   v1091 = bool.and v1088, v1090
      nextln:   v1092 = bool.icmp.i8.eq v1070, 0x1
      nextln:   v1093 = bool.and v1091, v1092
      nextln:   jumpif v1093, addr_0_block_266, addr_0_block_267
      check: addr_0_block_266: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_267: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_268: // preds: addr_0_block_266 addr_0_block_267
      nextln:   v1094 = bool.icmp.i8.ne v1058, 0x0
      nextln:   v1095 = bool.bitwise_not v1094
      nextln:   v1096 = bool.icmp.i8.ne v1058, 0x0
      nextln:   v1097 = bool.bitwise_not v1096
      nextln:   v1098 = bool.icmp.i8.eq v1070, 0x1
      nextln:   v1099 = bool.and v1097, v1098
      nextln:   jumpif v1029, addr_0_block_269, addr_0_block_270
      check: addr_0_block_269: // preds: addr_0_block_268
      nextln:   v1100 = bool.icmp.i8.eq v1058, 0x0
      nextln:   jump addr_0_block_271(0x1)
      check: addr_0_block_270: // preds: addr_0_block_268
      nextln:   jump addr_0_block_271(0x0)
      check: addr_0_block_271(v1101: bool): // preds: addr_0_block_269 addr_0_block_270
      nextln:   v1102 = bool.icmp.i8.eq v1058, 0x0
      nextln:   v1103 = bool.and v1030, v1102
      nextln:   jumpif v1103, addr_0_block_272, addr_0_block_273
      check: addr_0_block_272: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x1, 0x1)
      check: addr_0_block_273: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x0, 0x0)
      check: addr_0_block_274(v1104: bool, v1105: bool): // preds: addr_0_block_272 addr_0_block_273
      nextln:   v1106 = bool.or v1101, v1104
      nextln:   jumpif v1106, addr_0_block_275, addr_0_block_288
      check: addr_0_block_275: // preds: addr_0_block_274
      nextln:   v1107 = i52.unsigned_from_bits v1054
      nextln:   v1108 = int.modulo v1107, 0x8
      nextln:   v1109 = int.sub v1107, v1108
      nextln:   v1110 = i52.to_bits v1109
      nextln:   v1111 = bool.icmp.i52.eq v1054, v1110
      nextln:   v1112 = i64.load v1054
      nextln:   jumpif v1101, addr_0_block_276, addr_0_block_277
      nextln:   jump addr_0_block_289(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1112, v1031, v1032, v1033, v1034, v1035, v1036, v1037, v1038, v1039, v1040, v1041, v1042, v1043, v1044, v1045, v1046, v1047, v1048, v1049, v1050, v1051, v1052, v1053, v1054, v1055, v1056, 0x0, 0x0)
      check: addr_0_block_276: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_277: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_278: // preds: addr_0_block_276 addr_0_block_277
      nextln:   jumpif v1104, addr_0_block_279, addr_0_block_280
      check: addr_0_block_279: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_280: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_281: // preds: addr_0_block_279 addr_0_block_280
      nextln:   v1429 = i52.unsigned_from_bits v1054
      nextln:   v1430 = int.modulo v1429, 0x8
      nextln:   v1431 = int.sub v1429, v1430
      nextln:   v1432 = i52.to_bits v1431
      nextln:   v1433 = bool.icmp.i52.eq v1054, v1432
      nextln:   v1434 = bool.icmp.i52.eq v1054, 0x13000000
      nextln:   jumpif v1434, addr_0_block_282, addr_0_block_286
      check: addr_0_block_282: // preds: addr_0_block_281
      nextln:   v1435 = i64.unsigned_from_bits v1112
      nextln:   v1436 = bool.icmp.int.eq v1435, 0x4
      nextln:   jumpif v1436, addr_0_block_283, addr_0_block_284
      nextln:   jump addr_0_block_287
      check: addr_0_block_283: // no preds!
      nextln:   jump addr_0_block_285
      check: addr_0_block_284: // no preds!
      nextln:   v1437 = i8.trunc.i64 v1112
      nextln:   v1438 = i8.unsigned_from_bits v1437
      nextln:   jump addr_0_block_285
      check: addr_0_block_285: // preds: addr_0_block_283 addr_0_block_284
      check: addr_0_block_286: // preds: addr_0_block_281
      nextln:   store.i64 v1112, v1054
      nextln:   jump addr_0_block_287
      check: addr_0_block_287: // preds: addr_0_block_282 addr_0_block_286
      check: addr_0_block_288: // preds: addr_0_block_274
      nextln:   jump addr_0_block_289(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_289(v1113: i8, v1114: i1, v1115: i16, v1116: i8, v1117: bool, v1118: bool, v1119: bool, v1120: int, v1121: i64, v1122: i8, v1123: i8, v1124: i52, v1125: i1, v1126: bool, v1127: bool, v1128: int, v1129: i1, v1130: bool, v1131: i4, v1132: i2, v1133: i4, v1134: i8, v1135: i8, v1136: i2, v1137: i2, v1138: bool, v1139: i2, v1140: i2, v1141: bool, v1142: bool, v1143: bool, v1144: bool, v1145: i52, v1146: i1, v1147: i64, v1148: i2, v1149: bool): // preds: addr_0_block_275 addr_0_block_288
      nextln:   v1150 = bool.icmp.i8.ne v1058, 0x0
      nextln:   v1151 = bool.bitwise_not v1150
      nextln:   v1152 = bool.and v1151, 0x1
      nextln:   v1153 = bool.icmp.i8.ne v1058, 0x0
      nextln:   v1154 = bool.bitwise_not v1153
      nextln:   v1155 = bool.and 0x1, v1154
      nextln:   jumpif v1155, addr_0_block_290, addr_0_block_291
      check: addr_0_block_290: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_291: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_292: // preds: addr_0_block_290 addr_0_block_291
      nextln:   v1156 = bool.icmp.i8.ne v1058, 0x0
      nextln:   jumpif v1156, addr_0_block_293, addr_0_block_294
      check: addr_0_block_293: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_294: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_295: // preds: addr_0_block_293 addr_0_block_294
      nextln:   jumpif v1079, addr_0_block_296, addr_0_block_297
      check: addr_0_block_296: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_297: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_298: // preds: addr_0_block_296 addr_0_block_297
      nextln:   v1157 = i52.unsigned_from_bits v1081
      nextln:   v1158 = int.modulo v1157, 0x1
      nextln:   v1159 = int.sub v1157, v1158
      nextln:   v1160 = i52.to_bits v1159
      nextln:   v1161 = bool.icmp.i52.eq v1081, v1160
      nextln:   v1162 = bool.icmp.i52.eq v1081, 0x13000000
      nextln:   jumpif v1162, addr_0_block_299, addr_0_block_303
      check: addr_0_block_299: // preds: addr_0_block_298
      nextln:   v1163 = i8.unsigned_from_bits v1008
      nextln:   v1164 = bool.icmp.int.eq v1163, 0x4
      nextln:   jumpif v1164, addr_0_block_300, addr_0_block_301
      nextln:   jump addr_0_block_304
      check: addr_0_block_300: // no preds!
      nextln:   jump addr_0_block_302
      check: addr_0_block_301: // no preds!
      nextln:   v1439 = i8.unsigned_from_bits v1008
      nextln:   jump addr_0_block_302
      check: addr_0_block_302: // preds: addr_0_block_300 addr_0_block_301
      check: addr_0_block_303: // preds: addr_0_block_298
      nextln:   store.i8 v1008, v1081
      nextln:   jump addr_0_block_304
      check: addr_0_block_304: // preds: addr_0_block_299 addr_0_block_303
      nextln:   v1165 = i64.lshr v8, 0x38
      nextln:   v1166 = i8.trunc.i64 v1165
      nextln:   v1167 = i64.wrapping_add v10, 0x7
      nextln:   v1168 = i64.unsigned_from_bits v1167
      nextln:   v1169 = int.modulo v1168, 0x1
      nextln:   v1170 = int.sub v1168, v1169
      nextln:   v1171 = i64.to_bits v1170
      nextln:   v1172 = bool.icmp.i64.eq v1167, v1171
      nextln:   v1173 = i64.lshr v1167, 0x30
      nextln:   v1174 = i16.trunc.i64 v1173
      nextln:   v1175 = bool.icmp.i16.eq v1174, 0x0
      nextln:   v1176 = bool.bitwise_not v1175
      nextln:   jumpif v1176, addr_0_block_305, addr_0_block_306
      check: addr_0_block_305: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_306: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_307(v1323: i52, v1324: int, v1325: bool, v1326: bool): // preds: addr_0_block_306
      nextln:   v1327 = i52.trunc.i64 v1167
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1327, 0x1, 0x0)
      check: addr_0_block_308(v1177: i3, v1178: i1, v1179: i1, v1180: i1, v1181: i1, v1182: i4, v1183: i1, v1184: bool, v1185: int, v1186: int, v1187: bool, v1188: bool, v1189: i8, v1190: i8, v1191: i52, v1192: i1, v1193: bool, v1194: bool, v1195: int, v1196: i1, v1197: bool, v1198: i4, v1199: i2, v1200: i4, v1201: i8, v1202: i8, v1203: i2, v1204: i2, v1205: bool, v1206: i2, v1207: i2, v1208: bool, v1209: bool, v1210: bool, v1211: bool, v1212: i52, v1213: i1, v1214: i64, v1215: i1, v1216: i8, v1217: i8, v1218: i52, v1219: i1, v1220: bool, v1221: bool, v1222: int, v1223: i1, v1224: bool, v1225: i4, v1226: i2, v1227: i4, v1228: i8, v1229: i8, v1230: i2, v1231: i2, v1232: bool, v1233: i2, v1234: i2, v1235: bool, v1236: bool, v1237: bool, v1238: bool, v1239: i52, v1240: i1, v1241: i64): // preds: addr_0_block_305 addr_0_block_307
      nextln:   v1242 = bool.icmp.i8.ne v1216, 0x0
      nextln:   v1243 = bool.bitwise_not v1242
      nextln:   v1244 = bool.bitwise_not v15
      nextln:   v1245 = bool.and v1244, 0x1
      nextln:   v1246 = bool.or v1245, 0x0
      nextln:   v1247 = bool.icmp.i8.ne v1216, 0x0
      nextln:   v1248 = bool.bitwise_not v1247
      nextln:   v1249 = bool.and v1246, v1248
      nextln:   v1250 = bool.icmp.i8.eq v1228, 0x1
      nextln:   v1251 = bool.and v1249, v1250
      nextln:   jumpif v1251, addr_0_block_309, addr_0_block_310
      check: addr_0_block_309: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_310: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_311: // preds: addr_0_block_309 addr_0_block_310
      nextln:   v1252 = bool.icmp.i8.ne v1216, 0x0
      nextln:   v1253 = bool.bitwise_not v1252
      nextln:   v1254 = bool.icmp.i8.ne v1216, 0x0
      nextln:   v1255 = bool.bitwise_not v1254
      nextln:   v1256 = bool.icmp.i8.eq v1228, 0x1
      nextln:   v1257 = bool.and v1255, v1256
      nextln:   jumpif v1187, addr_0_block_312, addr_0_block_313
      check: addr_0_block_312: // preds: addr_0_block_311
      nextln:   v1258 = bool.icmp.i8.eq v1216, 0x0
      nextln:   jump addr_0_block_314(0x1)
      check: addr_0_block_313: // preds: addr_0_block_311
      nextln:   jump addr_0_block_314(0x0)
      check: addr_0_block_314(v1259: bool): // preds: addr_0_block_312 addr_0_block_313
      nextln:   v1260 = bool.icmp.i8.eq v1216, 0x0
      nextln:   v1261 = bool.and v1188, v1260
      nextln:   jumpif v1261, addr_0_block_315, addr_0_block_316
      check: addr_0_block_315: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x1, 0x1)
      check: addr_0_block_316: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x0, 0x0)
      check: addr_0_block_317(v1262: bool, v1263: bool): // preds: addr_0_block_315 addr_0_block_316
      nextln:   v1264 = bool.or v1259, v1262
      nextln:   jumpif v1264, addr_0_block_318, addr_0_block_331
      check: addr_0_block_318: // preds: addr_0_block_317
      nextln:   v1265 = i52.unsigned_from_bits v1212
      nextln:   v1266 = int.modulo v1265, 0x8
      nextln:   v1267 = int.sub v1265, v1266
      nextln:   v1268 = i52.to_bits v1267
      nextln:   v1269 = bool.icmp.i52.eq v1212, v1268
      nextln:   v1270 = i64.load v1212
      nextln:   jumpif v1259, addr_0_block_319, addr_0_block_320
      nextln:   jump addr_0_block_332(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1270, v1189, v1190, v1191, v1192, v1193, v1194, v1195, v1196, v1197, v1198, v1199, v1200, v1201, v1202, v1203, v1204, v1205, v1206, v1207, v1208, v1209, v1210, v1211, v1212, v1213, v1214, 0x0, 0x0)
      check: addr_0_block_319: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_320: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_321: // preds: addr_0_block_319 addr_0_block_320
      nextln:   jumpif v1262, addr_0_block_322, addr_0_block_323
      check: addr_0_block_322: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_323: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_324: // preds: addr_0_block_322 addr_0_block_323
      nextln:   v1440 = i52.unsigned_from_bits v1212
      nextln:   v1441 = int.modulo v1440, 0x8
      nextln:   v1442 = int.sub v1440, v1441
      nextln:   v1443 = i52.to_bits v1442
      nextln:   v1444 = bool.icmp.i52.eq v1212, v1443
      nextln:   v1445 = bool.icmp.i52.eq v1212, 0x13000000
      nextln:   jumpif v1445, addr_0_block_325, addr_0_block_329
      check: addr_0_block_325: // preds: addr_0_block_324
      nextln:   v1446 = i64.unsigned_from_bits v1270
      nextln:   v1447 = bool.icmp.int.eq v1446, 0x4
      nextln:   jumpif v1447, addr_0_block_326, addr_0_block_327
      nextln:   jump addr_0_block_330
      check: addr_0_block_326: // no preds!
      nextln:   jump addr_0_block_328
      check: addr_0_block_327: // no preds!
      nextln:   v1448 = i8.trunc.i64 v1270
      nextln:   v1449 = i8.unsigned_from_bits v1448
      nextln:   jump addr_0_block_328
      check: addr_0_block_328: // preds: addr_0_block_326 addr_0_block_327
      check: addr_0_block_329: // preds: addr_0_block_324
      nextln:   store.i64 v1270, v1212
      nextln:   jump addr_0_block_330
      check: addr_0_block_330: // preds: addr_0_block_325 addr_0_block_329
      check: addr_0_block_331: // preds: addr_0_block_317
      nextln:   jump addr_0_block_332(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_332(v1271: i8, v1272: i1, v1273: i16, v1274: i8, v1275: bool, v1276: bool, v1277: bool, v1278: int, v1279: i64, v1280: i8, v1281: i8, v1282: i52, v1283: i1, v1284: bool, v1285: bool, v1286: int, v1287: i1, v1288: bool, v1289: i4, v1290: i2, v1291: i4, v1292: i8, v1293: i8, v1294: i2, v1295: i2, v1296: bool, v1297: i2, v1298: i2, v1299: bool, v1300: bool, v1301: bool, v1302: bool, v1303: i52, v1304: i1, v1305: i64, v1306: i2, v1307: bool): // preds: addr_0_block_318 addr_0_block_331
      nextln:   v1308 = bool.icmp.i8.ne v1216, 0x0
      nextln:   v1309 = bool.bitwise_not v1308
      nextln:   v1310 = bool.and v1309, 0x1
      nextln:   v1311 = bool.icmp.i8.ne v1216, 0x0
      nextln:   v1312 = bool.bitwise_not v1311
      nextln:   v1313 = bool.and 0x1, v1312
      nextln:   jumpif v1313, addr_0_block_333, addr_0_block_334
      check: addr_0_block_333: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_334: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_335: // preds: addr_0_block_333 addr_0_block_334
      nextln:   v1314 = bool.icmp.i8.ne v1216, 0x0
      nextln:   jumpif v1314, addr_0_block_336, addr_0_block_337
      check: addr_0_block_336: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_337: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_338: // preds: addr_0_block_336 addr_0_block_337
      nextln:   jumpif v1237, addr_0_block_339, addr_0_block_340
      check: addr_0_block_339: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_340: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_341: // preds: addr_0_block_339 addr_0_block_340
      nextln:   v1315 = i52.unsigned_from_bits v1239
      nextln:   v1316 = int.modulo v1315, 0x1
      nextln:   v1317 = int.sub v1315, v1316
      nextln:   v1318 = i52.to_bits v1317
      nextln:   v1319 = bool.icmp.i52.eq v1239, v1318
      nextln:   v1320 = bool.icmp.i52.eq v1239, 0x13000000
      nextln:   jumpif v1320, addr_0_block_342, addr_0_block_346
      check: addr_0_block_342: // preds: addr_0_block_341
      nextln:   v1321 = i8.unsigned_from_bits v1166
      nextln:   v1322 = bool.icmp.int.eq v1321, 0x4
      nextln:   jumpif v1322, addr_0_block_343, addr_0_block_344
      nextln:   jump addr_0_block_347
      check: addr_0_block_343: // no preds!
      nextln:   jump addr_0_block_345
      check: addr_0_block_344: // no preds!
      nextln:   v1450 = i8.unsigned_from_bits v1166
      nextln:   jump addr_0_block_345
      check: addr_0_block_345: // preds: addr_0_block_343 addr_0_block_344
      check: addr_0_block_346: // preds: addr_0_block_341
      nextln:   store.i8 v1166, v1239
      nextln:   jump addr_0_block_347
      check: addr_0_block_347: // preds: addr_0_block_342 addr_0_block_346
      check: addr_0_block_348: // preds: entry
      nextln:   v59 = i64.unsigned_from_bits v10
      nextln:   v60 = int.modulo v59, 0x8
      nextln:   v61 = int.sub v59, v60
      nextln:   v62 = i64.to_bits v61
      nextln:   v63 = bool.icmp.i64.eq v10, v62
      nextln:   v64 = i64.lshr v10, 0x30
      nextln:   v65 = i16.trunc.i64 v64
      nextln:   v66 = bool.icmp.i16.eq v65, 0x0
      nextln:   v67 = bool.bitwise_not v66
      nextln:   jumpif v67, addr_0_block_349, addr_0_block_350
      nextln:   jump addr_0_block_392(v15, 0x0)
      check: addr_0_block_349: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_350: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_351(v1597: i52, v1598: int, v1599: bool, v1600: bool): // preds: addr_0_block_350
      nextln:   v1601 = i52.trunc.i64 v10
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1601, 0x1, 0x0)
      check: addr_0_block_352(v1451: i3, v1452: i1, v1453: i1, v1454: i1, v1455: i1, v1456: i4, v1457: i1, v1458: bool, v1459: int, v1460: int, v1461: bool, v1462: bool, v1463: i8, v1464: i8, v1465: i52, v1466: i1, v1467: bool, v1468: bool, v1469: int, v1470: i1, v1471: bool, v1472: i4, v1473: i2, v1474: i4, v1475: i8, v1476: i8, v1477: i2, v1478: i2, v1479: bool, v1480: i2, v1481: i2, v1482: bool, v1483: bool, v1484: bool, v1485: bool, v1486: i52, v1487: i1, v1488: i64, v1489: i1, v1490: i8, v1491: i8, v1492: i52, v1493: i1, v1494: bool, v1495: bool, v1496: int, v1497: i1, v1498: bool, v1499: i4, v1500: i2, v1501: i4, v1502: i8, v1503: i8, v1504: i2, v1505: i2, v1506: bool, v1507: i2, v1508: i2, v1509: bool, v1510: bool, v1511: bool, v1512: bool, v1513: i52, v1514: i1, v1515: i64): // preds: addr_0_block_349 addr_0_block_351
      nextln:   v1516 = bool.icmp.i8.ne v1490, 0x0
      nextln:   v1517 = bool.bitwise_not v1516
      nextln:   v1518 = bool.bitwise_not v15
      nextln:   v1519 = bool.and v1518, 0x1
      nextln:   v1520 = bool.or v1519, 0x0
      nextln:   v1521 = bool.icmp.i8.ne v1490, 0x0
      nextln:   v1522 = bool.bitwise_not v1521
      nextln:   v1523 = bool.and v1520, v1522
      nextln:   v1524 = bool.icmp.i8.eq v1502, 0x1
      nextln:   v1525 = bool.and v1523, v1524
      nextln:   jumpif v1525, addr_0_block_353, addr_0_block_354
      check: addr_0_block_353: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_354: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_355: // preds: addr_0_block_353 addr_0_block_354
      nextln:   v1526 = bool.icmp.i8.ne v1490, 0x0
      nextln:   v1527 = bool.bitwise_not v1526
      nextln:   v1528 = bool.icmp.i8.ne v1490, 0x0
      nextln:   v1529 = bool.bitwise_not v1528
      nextln:   v1530 = bool.icmp.i8.eq v1502, 0x1
      nextln:   v1531 = bool.and v1529, v1530
      nextln:   jumpif v1461, addr_0_block_356, addr_0_block_357
      check: addr_0_block_356: // preds: addr_0_block_355
      nextln:   v1532 = bool.icmp.i8.eq v1490, 0x0
      nextln:   jump addr_0_block_358(0x1)
      check: addr_0_block_357: // preds: addr_0_block_355
      nextln:   jump addr_0_block_358(0x0)
      check: addr_0_block_358(v1533: bool): // preds: addr_0_block_356 addr_0_block_357
      nextln:   v1534 = bool.icmp.i8.eq v1490, 0x0
      nextln:   v1535 = bool.and v1462, v1534
      nextln:   jumpif v1535, addr_0_block_359, addr_0_block_360
      check: addr_0_block_359: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x1, 0x1)
      check: addr_0_block_360: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x0, 0x0)
      check: addr_0_block_361(v1536: bool, v1537: bool): // preds: addr_0_block_359 addr_0_block_360
      nextln:   v1538 = bool.or v1533, v1536
      nextln:   jumpif v1538, addr_0_block_362, addr_0_block_375
      check: addr_0_block_362: // preds: addr_0_block_361
      nextln:   v1539 = i52.unsigned_from_bits v1486
      nextln:   v1540 = int.modulo v1539, 0x8
      nextln:   v1541 = int.sub v1539, v1540
      nextln:   v1542 = i52.to_bits v1541
      nextln:   v1543 = bool.icmp.i52.eq v1486, v1542
      nextln:   v1544 = i64.load v1486
      nextln:   jumpif v1533, addr_0_block_363, addr_0_block_364
      nextln:   jump addr_0_block_376(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1544, v1463, v1464, v1465, v1466, v1467, v1468, v1469, v1470, v1471, v1472, v1473, v1474, v1475, v1476, v1477, v1478, v1479, v1480, v1481, v1482, v1483, v1484, v1485, v1486, v1487, v1488, 0x0, 0x0)
      check: addr_0_block_363: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_364: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_365: // preds: addr_0_block_363 addr_0_block_364
      nextln:   jumpif v1536, addr_0_block_366, addr_0_block_367
      check: addr_0_block_366: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_367: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_368: // preds: addr_0_block_366 addr_0_block_367
      nextln:   v1602 = i52.unsigned_from_bits v1486
      nextln:   v1603 = int.modulo v1602, 0x8
      nextln:   v1604 = int.sub v1602, v1603
      nextln:   v1605 = i52.to_bits v1604
      nextln:   v1606 = bool.icmp.i52.eq v1486, v1605
      nextln:   v1607 = bool.icmp.i52.eq v1486, 0x13000000
      nextln:   jumpif v1607, addr_0_block_369, addr_0_block_373
      check: addr_0_block_369: // preds: addr_0_block_368
      nextln:   v1608 = i64.unsigned_from_bits v1544
      nextln:   v1609 = bool.icmp.int.eq v1608, 0x4
      nextln:   jumpif v1609, addr_0_block_370, addr_0_block_371
      nextln:   jump addr_0_block_374
      check: addr_0_block_370: // no preds!
      nextln:   jump addr_0_block_372
      check: addr_0_block_371: // no preds!
      nextln:   v1610 = i8.trunc.i64 v1544
      nextln:   v1611 = i8.unsigned_from_bits v1610
      nextln:   jump addr_0_block_372
      check: addr_0_block_372: // preds: addr_0_block_370 addr_0_block_371
      check: addr_0_block_373: // preds: addr_0_block_368
      nextln:   store.i64 v1544, v1486
      nextln:   jump addr_0_block_374
      check: addr_0_block_374: // preds: addr_0_block_369 addr_0_block_373
      check: addr_0_block_375: // preds: addr_0_block_361
      nextln:   jump addr_0_block_376(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_376(v1545: i8, v1546: i1, v1547: i16, v1548: i8, v1549: bool, v1550: bool, v1551: bool, v1552: int, v1553: i64, v1554: i8, v1555: i8, v1556: i52, v1557: i1, v1558: bool, v1559: bool, v1560: int, v1561: i1, v1562: bool, v1563: i4, v1564: i2, v1565: i4, v1566: i8, v1567: i8, v1568: i2, v1569: i2, v1570: bool, v1571: i2, v1572: i2, v1573: bool, v1574: bool, v1575: bool, v1576: bool, v1577: i52, v1578: i1, v1579: i64, v1580: i2, v1581: bool): // preds: addr_0_block_362 addr_0_block_375
      nextln:   v1582 = bool.icmp.i8.ne v1490, 0x0
      nextln:   v1583 = bool.bitwise_not v1582
      nextln:   v1584 = bool.and v1583, 0x1
      nextln:   v1585 = bool.icmp.i8.ne v1490, 0x0
      nextln:   v1586 = bool.bitwise_not v1585
      nextln:   v1587 = bool.and 0x1, v1586
      nextln:   jumpif v1587, addr_0_block_377, addr_0_block_378
      check: addr_0_block_377: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_378: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_379: // preds: addr_0_block_377 addr_0_block_378
      nextln:   v1588 = bool.icmp.i8.ne v1490, 0x0
      nextln:   jumpif v1588, addr_0_block_380, addr_0_block_381
      check: addr_0_block_380: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_381: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_382: // preds: addr_0_block_380 addr_0_block_381
      nextln:   jumpif v1511, addr_0_block_383, addr_0_block_384
      check: addr_0_block_383: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_384: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_385: // preds: addr_0_block_383 addr_0_block_384
      nextln:   v1589 = i52.unsigned_from_bits v1513
      nextln:   v1590 = int.modulo v1589, 0x8
      nextln:   v1591 = int.sub v1589, v1590
      nextln:   v1592 = i52.to_bits v1591
      nextln:   v1593 = bool.icmp.i52.eq v1513, v1592
      nextln:   v1594 = bool.icmp.i52.eq v1513, 0x13000000
      nextln:   jumpif v1594, addr_0_block_386, addr_0_block_390
      check: addr_0_block_386: // preds: addr_0_block_385
      nextln:   v1595 = i64.unsigned_from_bits v8
      nextln:   v1596 = bool.icmp.int.eq v1595, 0x4
      nextln:   jumpif v1596, addr_0_block_387, addr_0_block_388
      nextln:   jump addr_0_block_391
      check: addr_0_block_387: // no preds!
      nextln:   jump addr_0_block_389
      check: addr_0_block_388: // no preds!
      nextln:   v1612 = i8.trunc.i64 v8
      nextln:   v1613 = i8.unsigned_from_bits v1612
      nextln:   jump addr_0_block_389
      check: addr_0_block_389: // preds: addr_0_block_387 addr_0_block_388
      check: addr_0_block_390: // preds: addr_0_block_385
      nextln:   store.i64 v8, v1513
      nextln:   jump addr_0_block_391
      check: addr_0_block_391: // preds: addr_0_block_386 addr_0_block_390
      check: addr_0_block_392(v28: i64, v29: i8): // preds: addr_0_block_0 addr_0_block_348
      nextln:   v30 = i64.wrapping_add v7, 0x8
      nextln:   v31 = i64.unsigned_from_bits v30
      nextln:   v32 = int.modulo v31, 0x8
      nextln:   v33 = int.sub v31, v32
      nextln:   v34 = i64.to_bits v33
      nextln:   v35 = bool.icmp.i64.eq v30, v34
      nextln:   v36 = bool.bitwise_not v35
      nextln:   v37 = bool.bitwise_not v35
      nextln:   jumpif v37, addr_0_block_393, addr_0_block_741
      check: addr_0_block_393: // preds: addr_0_block_392
      nextln:   v38 = i8.trunc.i64 v9
      nextln:   v39 = i64.unsigned_from_bits v30
      nextln:   v40 = int.modulo v39, 0x1
      nextln:   v41 = int.sub v39, v40
      nextln:   v42 = i64.to_bits v41
      nextln:   v43 = bool.icmp.i64.eq v30, v42
      nextln:   v44 = i64.lshr v30, 0x30
      nextln:   v45 = i16.trunc.i64 v44
      nextln:   v46 = bool.icmp.i16.eq v45, 0x0
      nextln:   v47 = bool.bitwise_not v46
      nextln:   jumpif v47, addr_0_block_394, addr_0_block_395
      nextln:   jump addr_0_block_785(v1761, v1762)
      check: addr_0_block_394: // no preds!
      nextln:   jump addr_0_block_396(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_397(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_395: // no preds!
      nextln:   jump addr_0_block_396(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_396(v2904: i52, v2905: int, v2906: bool, v2907: bool): // preds: addr_0_block_395
      nextln:   v2908 = i52.trunc.i64 v30
      nextln:   jump addr_0_block_397(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2908, 0x1, 0x0)
      check: addr_0_block_397(v1614: i3, v1615: i1, v1616: i1, v1617: i1, v1618: i1, v1619: i4, v1620: i1, v1621: bool, v1622: int, v1623: int, v1624: bool, v1625: bool, v1626: i8, v1627: i8, v1628: i52, v1629: i1, v1630: bool, v1631: bool, v1632: int, v1633: i1, v1634: bool, v1635: i4, v1636: i2, v1637: i4, v1638: i8, v1639: i8, v1640: i2, v1641: i2, v1642: bool, v1643: i2, v1644: i2, v1645: bool, v1646: bool, v1647: bool, v1648: bool, v1649: i52, v1650: i1, v1651: i64, v1652: i1, v1653: i8, v1654: i8, v1655: i52, v1656: i1, v1657: bool, v1658: bool, v1659: int, v1660: i1, v1661: bool, v1662: i4, v1663: i2, v1664: i4, v1665: i8, v1666: i8, v1667: i2, v1668: i2, v1669: bool, v1670: i2, v1671: i2, v1672: bool, v1673: bool, v1674: bool, v1675: bool, v1676: i52, v1677: i1, v1678: i64): // preds: addr_0_block_394 addr_0_block_396
      nextln:   v1679 = bool.icmp.i8.ne v1653, 0x0
      nextln:   v1680 = bool.bitwise_not v1679
      nextln:   v1681 = bool.bitwise_not v35
      nextln:   v1682 = bool.and v1681, 0x1
      nextln:   v1683 = bool.or v1682, 0x0
      nextln:   v1684 = bool.icmp.i8.ne v1653, 0x0
      nextln:   v1685 = bool.bitwise_not v1684
      nextln:   v1686 = bool.and v1683, v1685
      nextln:   v1687 = bool.icmp.i8.eq v1665, 0x1
      nextln:   v1688 = bool.and v1686, v1687
      nextln:   jumpif v1688, addr_0_block_398, addr_0_block_399
      check: addr_0_block_398: // preds: addr_0_block_397
      nextln:   jump addr_0_block_400
      check: addr_0_block_399: // preds: addr_0_block_397
      nextln:   jump addr_0_block_400
      check: addr_0_block_400: // preds: addr_0_block_398 addr_0_block_399
      nextln:   v1689 = bool.icmp.i8.ne v1653, 0x0
      nextln:   v1690 = bool.bitwise_not v1689
      nextln:   v1691 = bool.icmp.i8.ne v1653, 0x0
      nextln:   v1692 = bool.bitwise_not v1691
      nextln:   v1693 = bool.icmp.i8.eq v1665, 0x1
      nextln:   v1694 = bool.and v1692, v1693
      nextln:   jumpif v1624, addr_0_block_401, addr_0_block_402
      check: addr_0_block_401: // preds: addr_0_block_400
      nextln:   v1695 = bool.icmp.i8.eq v1653, 0x0
      nextln:   jump addr_0_block_403(0x1)
      check: addr_0_block_402: // preds: addr_0_block_400
      nextln:   jump addr_0_block_403(0x0)
      check: addr_0_block_403(v1696: bool): // preds: addr_0_block_401 addr_0_block_402
      nextln:   v1697 = bool.icmp.i8.eq v1653, 0x0
      nextln:   v1698 = bool.and v1625, v1697
      nextln:   jumpif v1698, addr_0_block_404, addr_0_block_405
      check: addr_0_block_404: // preds: addr_0_block_403
      nextln:   jump addr_0_block_406(0x1, 0x1)
      check: addr_0_block_405: // preds: addr_0_block_403
      nextln:   jump addr_0_block_406(0x0, 0x0)
      check: addr_0_block_406(v1699: bool, v1700: bool): // preds: addr_0_block_404 addr_0_block_405
      nextln:   v1701 = bool.or v1696, v1699
      nextln:   jumpif v1701, addr_0_block_407, addr_0_block_420
      check: addr_0_block_407: // preds: addr_0_block_406
      nextln:   v1702 = i52.unsigned_from_bits v1649
      nextln:   v1703 = int.modulo v1702, 0x8
      nextln:   v1704 = int.sub v1702, v1703
      nextln:   v1705 = i52.to_bits v1704
      nextln:   v1706 = bool.icmp.i52.eq v1649, v1705
      nextln:   v1707 = i64.load v1649
      nextln:   jumpif v1696, addr_0_block_408, addr_0_block_409
      nextln:   jump addr_0_block_421(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1707, v1626, v1627, v1628, v1629, v1630, v1631, v1632, v1633, v1634, v1635, v1636, v1637, v1638, v1639, v1640, v1641, v1642, v1643, v1644, v1645, v1646, v1647, v1648, v1649, v1650, v1651, 0x0, 0x0)
      check: addr_0_block_408: // no preds!
      nextln:   jump addr_0_block_410
      check: addr_0_block_409: // no preds!
      nextln:   jump addr_0_block_410
      check: addr_0_block_410: // preds: addr_0_block_408 addr_0_block_409
      nextln:   jumpif v1699, addr_0_block_411, addr_0_block_412
      check: addr_0_block_411: // preds: addr_0_block_410
      nextln:   jump addr_0_block_413
      check: addr_0_block_412: // preds: addr_0_block_410
      nextln:   jump addr_0_block_413
      check: addr_0_block_413: // preds: addr_0_block_411 addr_0_block_412
      nextln:   v2909 = i52.unsigned_from_bits v1649
      nextln:   v2910 = int.modulo v2909, 0x8
      nextln:   v2911 = int.sub v2909, v2910
      nextln:   v2912 = i52.to_bits v2911
      nextln:   v2913 = bool.icmp.i52.eq v1649, v2912
      nextln:   v2914 = bool.icmp.i52.eq v1649, 0x13000000
      nextln:   jumpif v2914, addr_0_block_414, addr_0_block_418
      check: addr_0_block_414: // preds: addr_0_block_413
      nextln:   v2915 = i64.unsigned_from_bits v1707
      nextln:   v2916 = bool.icmp.int.eq v2915, 0x4
      nextln:   jumpif v2916, addr_0_block_415, addr_0_block_416
      nextln:   jump addr_0_block_419
      check: addr_0_block_415: // no preds!
      nextln:   jump addr_0_block_417
      check: addr_0_block_416: // no preds!
      nextln:   v2917 = i8.trunc.i64 v1707
      nextln:   v2918 = i8.unsigned_from_bits v2917
      nextln:   jump addr_0_block_417
      check: addr_0_block_417: // preds: addr_0_block_415 addr_0_block_416
      check: addr_0_block_418: // preds: addr_0_block_413
      nextln:   store.i64 v1707, v1649
      nextln:   jump addr_0_block_419
      check: addr_0_block_419: // preds: addr_0_block_414 addr_0_block_418
      check: addr_0_block_420: // preds: addr_0_block_406
      nextln:   jump addr_0_block_421(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_421(v1708: i8, v1709: i1, v1710: i16, v1711: i8, v1712: bool, v1713: bool, v1714: bool, v1715: int, v1716: i64, v1717: i8, v1718: i8, v1719: i52, v1720: i1, v1721: bool, v1722: bool, v1723: int, v1724: i1, v1725: bool, v1726: i4, v1727: i2, v1728: i4, v1729: i8, v1730: i8, v1731: i2, v1732: i2, v1733: bool, v1734: i2, v1735: i2, v1736: bool, v1737: bool, v1738: bool, v1739: bool, v1740: i52, v1741: i1, v1742: i64, v1743: i2, v1744: bool): // preds: addr_0_block_407 addr_0_block_420
      nextln:   v1745 = bool.icmp.i8.ne v1653, 0x0
      nextln:   v1746 = bool.bitwise_not v1745
      nextln:   v1747 = bool.and v1746, 0x1
      nextln:   v1748 = bool.icmp.i8.ne v1653, 0x0
      nextln:   v1749 = bool.bitwise_not v1748
      nextln:   v1750 = bool.and 0x1, v1749
      nextln:   jumpif v1750, addr_0_block_422, addr_0_block_423
      check: addr_0_block_422: // preds: addr_0_block_421
      nextln:   jump addr_0_block_424
      check: addr_0_block_423: // preds: addr_0_block_421
      nextln:   jump addr_0_block_424
      check: addr_0_block_424: // preds: addr_0_block_422 addr_0_block_423
      nextln:   v1751 = bool.icmp.i8.ne v1653, 0x0
      nextln:   jumpif v1751, addr_0_block_425, addr_0_block_426
      check: addr_0_block_425: // preds: addr_0_block_424
      nextln:   jump addr_0_block_427
      check: addr_0_block_426: // preds: addr_0_block_424
      nextln:   jump addr_0_block_427
      check: addr_0_block_427: // preds: addr_0_block_425 addr_0_block_426
      nextln:   jumpif v1674, addr_0_block_428, addr_0_block_429
      check: addr_0_block_428: // preds: addr_0_block_427
      nextln:   jump addr_0_block_430
      check: addr_0_block_429: // preds: addr_0_block_427
      nextln:   jump addr_0_block_430
      check: addr_0_block_430: // preds: addr_0_block_428 addr_0_block_429
      nextln:   v1752 = i52.unsigned_from_bits v1676
      nextln:   v1753 = int.modulo v1752, 0x1
      nextln:   v1754 = int.sub v1752, v1753
      nextln:   v1755 = i52.to_bits v1754
      nextln:   v1756 = bool.icmp.i52.eq v1676, v1755
      nextln:   v1757 = bool.icmp.i52.eq v1676, 0x13000000
      nextln:   jumpif v1757, addr_0_block_431, addr_0_block_435
      check: addr_0_block_431: // preds: addr_0_block_430
      nextln:   v1758 = i8.unsigned_from_bits v38
      nextln:   v1759 = bool.icmp.int.eq v1758, 0x4
      nextln:   jumpif v1759, addr_0_block_432, addr_0_block_433
      nextln:   jump addr_0_block_436
      check: addr_0_block_432: // no preds!
      nextln:   jump addr_0_block_434
      check: addr_0_block_433: // no preds!
      nextln:   v2919 = i8.unsigned_from_bits v38
      nextln:   jump addr_0_block_434
      check: addr_0_block_434: // preds: addr_0_block_432 addr_0_block_433
      check: addr_0_block_435: // preds: addr_0_block_430
      nextln:   store.i8 v38, v1676
      nextln:   jump addr_0_block_436
      check: addr_0_block_436: // preds: addr_0_block_431 addr_0_block_435
      nextln:   v1760 = bool.bitwise_not v35
      nextln:   jumpif v1760, addr_0_block_437, addr_0_block_438
      check: addr_0_block_437: // preds: addr_0_block_436
      nextln:   jump addr_0_block_439(v35, 0xc)
      check: addr_0_block_438: // preds: addr_0_block_436
      nextln:   jump addr_0_block_439(v35, 0x0)
      check: addr_0_block_439(v1761: i64, v1762: i8): // preds: addr_0_block_437 addr_0_block_438
      nextln:   v1763 = i64.lshr v9, 0x8
      nextln:   v1764 = i8.trunc.i64 v1763
      nextln:   v1765 = i64.wrapping_add v30, 0x1
      nextln:   v1766 = i64.unsigned_from_bits v1765
      nextln:   v1767 = int.modulo v1766, 0x1
      nextln:   v1768 = int.sub v1766, v1767
      nextln:   v1769 = i64.to_bits v1768
      nextln:   v1770 = bool.icmp.i64.eq v1765, v1769
      nextln:   v1771 = i64.lshr v1765, 0x30
      nextln:   v1772 = i16.trunc.i64 v1771
      nextln:   v1773 = bool.icmp.i16.eq v1772, 0x0
      nextln:   v1774 = bool.bitwise_not v1773
      nextln:   jumpif v1774, addr_0_block_440, addr_0_block_441
      check: addr_0_block_440: // preds: addr_0_block_439
      nextln:   jump addr_0_block_442(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_443(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_441: // preds: addr_0_block_439
      nextln:   jump addr_0_block_442(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_442(v2899: i52, v2900: int, v2901: bool, v2902: bool): // preds: addr_0_block_441
      nextln:   v2903 = i52.trunc.i64 v1765
      nextln:   jump addr_0_block_443(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2903, 0x1, 0x0)
      check: addr_0_block_443(v1775: i3, v1776: i1, v1777: i1, v1778: i1, v1779: i1, v1780: i4, v1781: i1, v1782: bool, v1783: int, v1784: int, v1785: bool, v1786: bool, v1787: i8, v1788: i8, v1789: i52, v1790: i1, v1791: bool, v1792: bool, v1793: int, v1794: i1, v1795: bool, v1796: i4, v1797: i2, v1798: i4, v1799: i8, v1800: i8, v1801: i2, v1802: i2, v1803: bool, v1804: i2, v1805: i2, v1806: bool, v1807: bool, v1808: bool, v1809: bool, v1810: i52, v1811: i1, v1812: i64, v1813: i1, v1814: i8, v1815: i8, v1816: i52, v1817: i1, v1818: bool, v1819: bool, v1820: int, v1821: i1, v1822: bool, v1823: i4, v1824: i2, v1825: i4, v1826: i8, v1827: i8, v1828: i2, v1829: i2, v1830: bool, v1831: i2, v1832: i2, v1833: bool, v1834: bool, v1835: bool, v1836: bool, v1837: i52, v1838: i1, v1839: i64): // preds: addr_0_block_440 addr_0_block_442
      nextln:   v1840 = bool.icmp.i8.ne v1814, 0x0
      nextln:   v1841 = bool.bitwise_not v1840
      nextln:   v1842 = bool.bitwise_not v35
      nextln:   v1843 = bool.and v1842, 0x1
      nextln:   v1844 = bool.or v1843, 0x0
      nextln:   v1845 = bool.icmp.i8.ne v1814, 0x0
      nextln:   v1846 = bool.bitwise_not v1845
      nextln:   v1847 = bool.and v1844, v1846
      nextln:   v1848 = bool.icmp.i8.eq v1826, 0x1
      nextln:   v1849 = bool.and v1847, v1848
      nextln:   jumpif v1849, addr_0_block_444, addr_0_block_445
      check: addr_0_block_444: // preds: addr_0_block_443
      nextln:   jump addr_0_block_446
      check: addr_0_block_445: // preds: addr_0_block_443
      nextln:   jump addr_0_block_446
      check: addr_0_block_446: // preds: addr_0_block_444 addr_0_block_445
      nextln:   v1850 = bool.icmp.i8.ne v1814, 0x0
      nextln:   v1851 = bool.bitwise_not v1850
      nextln:   v1852 = bool.icmp.i8.ne v1814, 0x0
      nextln:   v1853 = bool.bitwise_not v1852
      nextln:   v1854 = bool.icmp.i8.eq v1826, 0x1
      nextln:   v1855 = bool.and v1853, v1854
      nextln:   jumpif v1785, addr_0_block_447, addr_0_block_448
      check: addr_0_block_447: // preds: addr_0_block_446
      nextln:   v1856 = bool.icmp.i8.eq v1814, 0x0
      nextln:   jump addr_0_block_449(0x1)
      check: addr_0_block_448: // preds: addr_0_block_446
      nextln:   jump addr_0_block_449(0x0)
      check: addr_0_block_449(v1857: bool): // preds: addr_0_block_447 addr_0_block_448
      nextln:   v1858 = bool.icmp.i8.eq v1814, 0x0
      nextln:   v1859 = bool.and v1786, v1858
      nextln:   jumpif v1859, addr_0_block_450, addr_0_block_451
      check: addr_0_block_450: // preds: addr_0_block_449
      nextln:   jump addr_0_block_452(0x1, 0x1)
      check: addr_0_block_451: // preds: addr_0_block_449
      nextln:   jump addr_0_block_452(0x0, 0x0)
      check: addr_0_block_452(v1860: bool, v1861: bool): // preds: addr_0_block_450 addr_0_block_451
      nextln:   v1862 = bool.or v1857, v1860
      nextln:   jumpif v1862, addr_0_block_453, addr_0_block_466
      check: addr_0_block_453: // preds: addr_0_block_452
      nextln:   v1863 = i52.unsigned_from_bits v1810
      nextln:   v1864 = int.modulo v1863, 0x8
      nextln:   v1865 = int.sub v1863, v1864
      nextln:   v1866 = i52.to_bits v1865
      nextln:   v1867 = bool.icmp.i52.eq v1810, v1866
      nextln:   v1868 = i64.load v1810
      nextln:   jumpif v1857, addr_0_block_454, addr_0_block_455
      nextln:   jump addr_0_block_467(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1868, v1787, v1788, v1789, v1790, v1791, v1792, v1793, v1794, v1795, v1796, v1797, v1798, v1799, v1800, v1801, v1802, v1803, v1804, v1805, v1806, v1807, v1808, v1809, v1810, v1811, v1812, 0x0, 0x0)
      check: addr_0_block_454: // no preds!
      nextln:   jump addr_0_block_456
      check: addr_0_block_455: // no preds!
      nextln:   jump addr_0_block_456
      check: addr_0_block_456: // preds: addr_0_block_454 addr_0_block_455
      nextln:   jumpif v1860, addr_0_block_457, addr_0_block_458
      check: addr_0_block_457: // preds: addr_0_block_456
      nextln:   jump addr_0_block_459
      check: addr_0_block_458: // preds: addr_0_block_456
      nextln:   jump addr_0_block_459
      check: addr_0_block_459: // preds: addr_0_block_457 addr_0_block_458
      nextln:   v2920 = i52.unsigned_from_bits v1810
      nextln:   v2921 = int.modulo v2920, 0x8
      nextln:   v2922 = int.sub v2920, v2921
      nextln:   v2923 = i52.to_bits v2922
      nextln:   v2924 = bool.icmp.i52.eq v1810, v2923
      nextln:   v2925 = bool.icmp.i52.eq v1810, 0x13000000
      nextln:   jumpif v2925, addr_0_block_460, addr_0_block_464
      check: addr_0_block_460: // preds: addr_0_block_459
      nextln:   v2926 = i64.unsigned_from_bits v1868
      nextln:   v2927 = bool.icmp.int.eq v2926, 0x4
      nextln:   jumpif v2927, addr_0_block_461, addr_0_block_462
      nextln:   jump addr_0_block_465
      check: addr_0_block_461: // no preds!
      nextln:   jump addr_0_block_463
      check: addr_0_block_462: // no preds!
      nextln:   v2928 = i8.trunc.i64 v1868
      nextln:   v2929 = i8.unsigned_from_bits v2928
      nextln:   jump addr_0_block_463
      check: addr_0_block_463: // preds: addr_0_block_461 addr_0_block_462
      check: addr_0_block_464: // preds: addr_0_block_459
      nextln:   store.i64 v1868, v1810
      nextln:   jump addr_0_block_465
      check: addr_0_block_465: // preds: addr_0_block_460 addr_0_block_464
      check: addr_0_block_466: // preds: addr_0_block_452
      nextln:   jump addr_0_block_467(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_467(v1869: i8, v1870: i1, v1871: i16, v1872: i8, v1873: bool, v1874: bool, v1875: bool, v1876: int, v1877: i64, v1878: i8, v1879: i8, v1880: i52, v1881: i1, v1882: bool, v1883: bool, v1884: int, v1885: i1, v1886: bool, v1887: i4, v1888: i2, v1889: i4, v1890: i8, v1891: i8, v1892: i2, v1893: i2, v1894: bool, v1895: i2, v1896: i2, v1897: bool, v1898: bool, v1899: bool, v1900: bool, v1901: i52, v1902: i1, v1903: i64, v1904: i2, v1905: bool): // preds: addr_0_block_453 addr_0_block_466
      nextln:   v1906 = bool.icmp.i8.ne v1814, 0x0
      nextln:   v1907 = bool.bitwise_not v1906
      nextln:   v1908 = bool.and v1907, 0x1
      nextln:   v1909 = bool.icmp.i8.ne v1814, 0x0
      nextln:   v1910 = bool.bitwise_not v1909
      nextln:   v1911 = bool.and 0x1, v1910
      nextln:   jumpif v1911, addr_0_block_468, addr_0_block_469
      check: addr_0_block_468: // preds: addr_0_block_467
      nextln:   jump addr_0_block_470
      check: addr_0_block_469: // preds: addr_0_block_467
      nextln:   jump addr_0_block_470
      check: addr_0_block_470: // preds: addr_0_block_468 addr_0_block_469
      nextln:   v1912 = bool.icmp.i8.ne v1814, 0x0
      nextln:   jumpif v1912, addr_0_block_471, addr_0_block_472
      check: addr_0_block_471: // preds: addr_0_block_470
      nextln:   jump addr_0_block_473
      check: addr_0_block_472: // preds: addr_0_block_470
      nextln:   jump addr_0_block_473
      check: addr_0_block_473: // preds: addr_0_block_471 addr_0_block_472
      nextln:   jumpif v1835, addr_0_block_474, addr_0_block_475
      check: addr_0_block_474: // preds: addr_0_block_473
      nextln:   jump addr_0_block_476
      check: addr_0_block_475: // preds: addr_0_block_473
      nextln:   jump addr_0_block_476
      check: addr_0_block_476: // preds: addr_0_block_474 addr_0_block_475
      nextln:   v1913 = i52.unsigned_from_bits v1837
      nextln:   v1914 = int.modulo v1913, 0x1
      nextln:   v1915 = int.sub v1913, v1914
      nextln:   v1916 = i52.to_bits v1915
      nextln:   v1917 = bool.icmp.i52.eq v1837, v1916
      nextln:   v1918 = bool.icmp.i52.eq v1837, 0x13000000
      nextln:   jumpif v1918, addr_0_block_477, addr_0_block_481
      check: addr_0_block_477: // preds: addr_0_block_476
      nextln:   v1919 = i8.unsigned_from_bits v1764
      nextln:   v1920 = bool.icmp.int.eq v1919, 0x4
      nextln:   jumpif v1920, addr_0_block_478, addr_0_block_479
      nextln:   jump addr_0_block_482
      check: addr_0_block_478: // no preds!
      nextln:   jump addr_0_block_480
      check: addr_0_block_479: // no preds!
      nextln:   v2930 = i8.unsigned_from_bits v1764
      nextln:   jump addr_0_block_480
      check: addr_0_block_480: // preds: addr_0_block_478 addr_0_block_479
      check: addr_0_block_481: // preds: addr_0_block_476
      nextln:   store.i8 v1764, v1837
      nextln:   jump addr_0_block_482
      check: addr_0_block_482: // preds: addr_0_block_477 addr_0_block_481
      nextln:   v1921 = i64.lshr v9, 0x10
      nextln:   v1922 = i8.trunc.i64 v1921
      nextln:   v1923 = i64.wrapping_add v30, 0x2
      nextln:   v1924 = i64.unsigned_from_bits v1923
      nextln:   v1925 = int.modulo v1924, 0x1
      nextln:   v1926 = int.sub v1924, v1925
      nextln:   v1927 = i64.to_bits v1926
      nextln:   v1928 = bool.icmp.i64.eq v1923, v1927
      nextln:   v1929 = i64.lshr v1923, 0x30
      nextln:   v1930 = i16.trunc.i64 v1929
      nextln:   v1931 = bool.icmp.i16.eq v1930, 0x0
      nextln:   v1932 = bool.bitwise_not v1931
      nextln:   jumpif v1932, addr_0_block_483, addr_0_block_484
      check: addr_0_block_483: // preds: addr_0_block_482
      nextln:   jump addr_0_block_485(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_486(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_484: // preds: addr_0_block_482
      nextln:   jump addr_0_block_485(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_485(v2894: i52, v2895: int, v2896: bool, v2897: bool): // preds: addr_0_block_484
      nextln:   v2898 = i52.trunc.i64 v1923
      nextln:   jump addr_0_block_486(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2898, 0x1, 0x0)
      check: addr_0_block_486(v1933: i3, v1934: i1, v1935: i1, v1936: i1, v1937: i1, v1938: i4, v1939: i1, v1940: bool, v1941: int, v1942: int, v1943: bool, v1944: bool, v1945: i8, v1946: i8, v1947: i52, v1948: i1, v1949: bool, v1950: bool, v1951: int, v1952: i1, v1953: bool, v1954: i4, v1955: i2, v1956: i4, v1957: i8, v1958: i8, v1959: i2, v1960: i2, v1961: bool, v1962: i2, v1963: i2, v1964: bool, v1965: bool, v1966: bool, v1967: bool, v1968: i52, v1969: i1, v1970: i64, v1971: i1, v1972: i8, v1973: i8, v1974: i52, v1975: i1, v1976: bool, v1977: bool, v1978: int, v1979: i1, v1980: bool, v1981: i4, v1982: i2, v1983: i4, v1984: i8, v1985: i8, v1986: i2, v1987: i2, v1988: bool, v1989: i2, v1990: i2, v1991: bool, v1992: bool, v1993: bool, v1994: bool, v1995: i52, v1996: i1, v1997: i64): // preds: addr_0_block_483 addr_0_block_485
      nextln:   v1998 = bool.icmp.i8.ne v1972, 0x0
      nextln:   v1999 = bool.bitwise_not v1998
      nextln:   v2000 = bool.bitwise_not v35
      nextln:   v2001 = bool.and v2000, 0x1
      nextln:   v2002 = bool.or v2001, 0x0
      nextln:   v2003 = bool.icmp.i8.ne v1972, 0x0
      nextln:   v2004 = bool.bitwise_not v2003
      nextln:   v2005 = bool.and v2002, v2004
      nextln:   v2006 = bool.icmp.i8.eq v1984, 0x1
      nextln:   v2007 = bool.and v2005, v2006
      nextln:   jumpif v2007, addr_0_block_487, addr_0_block_488
      check: addr_0_block_487: // preds: addr_0_block_486
      nextln:   jump addr_0_block_489
      check: addr_0_block_488: // preds: addr_0_block_486
      nextln:   jump addr_0_block_489
      check: addr_0_block_489: // preds: addr_0_block_487 addr_0_block_488
      nextln:   v2008 = bool.icmp.i8.ne v1972, 0x0
      nextln:   v2009 = bool.bitwise_not v2008
      nextln:   v2010 = bool.icmp.i8.ne v1972, 0x0
      nextln:   v2011 = bool.bitwise_not v2010
      nextln:   v2012 = bool.icmp.i8.eq v1984, 0x1
      nextln:   v2013 = bool.and v2011, v2012
      nextln:   jumpif v1943, addr_0_block_490, addr_0_block_491
      check: addr_0_block_490: // preds: addr_0_block_489
      nextln:   v2014 = bool.icmp.i8.eq v1972, 0x0
      nextln:   jump addr_0_block_492(0x1)
      check: addr_0_block_491: // preds: addr_0_block_489
      nextln:   jump addr_0_block_492(0x0)
      check: addr_0_block_492(v2015: bool): // preds: addr_0_block_490 addr_0_block_491
      nextln:   v2016 = bool.icmp.i8.eq v1972, 0x0
      nextln:   v2017 = bool.and v1944, v2016
      nextln:   jumpif v2017, addr_0_block_493, addr_0_block_494
      check: addr_0_block_493: // preds: addr_0_block_492
      nextln:   jump addr_0_block_495(0x1, 0x1)
      check: addr_0_block_494: // preds: addr_0_block_492
      nextln:   jump addr_0_block_495(0x0, 0x0)
      check: addr_0_block_495(v2018: bool, v2019: bool): // preds: addr_0_block_493 addr_0_block_494
      nextln:   v2020 = bool.or v2015, v2018
      nextln:   jumpif v2020, addr_0_block_496, addr_0_block_509
      check: addr_0_block_496: // preds: addr_0_block_495
      nextln:   v2021 = i52.unsigned_from_bits v1968
      nextln:   v2022 = int.modulo v2021, 0x8
      nextln:   v2023 = int.sub v2021, v2022
      nextln:   v2024 = i52.to_bits v2023
      nextln:   v2025 = bool.icmp.i52.eq v1968, v2024
      nextln:   v2026 = i64.load v1968
      nextln:   jumpif v2015, addr_0_block_497, addr_0_block_498
      nextln:   jump addr_0_block_510(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2026, v1945, v1946, v1947, v1948, v1949, v1950, v1951, v1952, v1953, v1954, v1955, v1956, v1957, v1958, v1959, v1960, v1961, v1962, v1963, v1964, v1965, v1966, v1967, v1968, v1969, v1970, 0x0, 0x0)
      check: addr_0_block_497: // no preds!
      nextln:   jump addr_0_block_499
      check: addr_0_block_498: // no preds!
      nextln:   jump addr_0_block_499
      check: addr_0_block_499: // preds: addr_0_block_497 addr_0_block_498
      nextln:   jumpif v2018, addr_0_block_500, addr_0_block_501
      check: addr_0_block_500: // preds: addr_0_block_499
      nextln:   jump addr_0_block_502
      check: addr_0_block_501: // preds: addr_0_block_499
      nextln:   jump addr_0_block_502
      check: addr_0_block_502: // preds: addr_0_block_500 addr_0_block_501
      nextln:   v2931 = i52.unsigned_from_bits v1968
      nextln:   v2932 = int.modulo v2931, 0x8
      nextln:   v2933 = int.sub v2931, v2932
      nextln:   v2934 = i52.to_bits v2933
      nextln:   v2935 = bool.icmp.i52.eq v1968, v2934
      nextln:   v2936 = bool.icmp.i52.eq v1968, 0x13000000
      nextln:   jumpif v2936, addr_0_block_503, addr_0_block_507
      check: addr_0_block_503: // preds: addr_0_block_502
      nextln:   v2937 = i64.unsigned_from_bits v2026
      nextln:   v2938 = bool.icmp.int.eq v2937, 0x4
      nextln:   jumpif v2938, addr_0_block_504, addr_0_block_505
      nextln:   jump addr_0_block_508
      check: addr_0_block_504: // no preds!
      nextln:   jump addr_0_block_506
      check: addr_0_block_505: // no preds!
      nextln:   v2939 = i8.trunc.i64 v2026
      nextln:   v2940 = i8.unsigned_from_bits v2939
      nextln:   jump addr_0_block_506
      check: addr_0_block_506: // preds: addr_0_block_504 addr_0_block_505
      check: addr_0_block_507: // preds: addr_0_block_502
      nextln:   store.i64 v2026, v1968
      nextln:   jump addr_0_block_508
      check: addr_0_block_508: // preds: addr_0_block_503 addr_0_block_507
      check: addr_0_block_509: // preds: addr_0_block_495
      nextln:   jump addr_0_block_510(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_510(v2027: i8, v2028: i1, v2029: i16, v2030: i8, v2031: bool, v2032: bool, v2033: bool, v2034: int, v2035: i64, v2036: i8, v2037: i8, v2038: i52, v2039: i1, v2040: bool, v2041: bool, v2042: int, v2043: i1, v2044: bool, v2045: i4, v2046: i2, v2047: i4, v2048: i8, v2049: i8, v2050: i2, v2051: i2, v2052: bool, v2053: i2, v2054: i2, v2055: bool, v2056: bool, v2057: bool, v2058: bool, v2059: i52, v2060: i1, v2061: i64, v2062: i2, v2063: bool): // preds: addr_0_block_496 addr_0_block_509
      nextln:   v2064 = bool.icmp.i8.ne v1972, 0x0
      nextln:   v2065 = bool.bitwise_not v2064
      nextln:   v2066 = bool.and v2065, 0x1
      nextln:   v2067 = bool.icmp.i8.ne v1972, 0x0
      nextln:   v2068 = bool.bitwise_not v2067
      nextln:   v2069 = bool.and 0x1, v2068
      nextln:   jumpif v2069, addr_0_block_511, addr_0_block_512
      check: addr_0_block_511: // preds: addr_0_block_510
      nextln:   jump addr_0_block_513
      check: addr_0_block_512: // preds: addr_0_block_510
      nextln:   jump addr_0_block_513
      check: addr_0_block_513: // preds: addr_0_block_511 addr_0_block_512
      nextln:   v2070 = bool.icmp.i8.ne v1972, 0x0
      nextln:   jumpif v2070, addr_0_block_514, addr_0_block_515
      check: addr_0_block_514: // preds: addr_0_block_513
      nextln:   jump addr_0_block_516
      check: addr_0_block_515: // preds: addr_0_block_513
      nextln:   jump addr_0_block_516
      check: addr_0_block_516: // preds: addr_0_block_514 addr_0_block_515
      nextln:   jumpif v1993, addr_0_block_517, addr_0_block_518
      check: addr_0_block_517: // preds: addr_0_block_516
      nextln:   jump addr_0_block_519
      check: addr_0_block_518: // preds: addr_0_block_516
      nextln:   jump addr_0_block_519
      check: addr_0_block_519: // preds: addr_0_block_517 addr_0_block_518
      nextln:   v2071 = i52.unsigned_from_bits v1995
      nextln:   v2072 = int.modulo v2071, 0x1
      nextln:   v2073 = int.sub v2071, v2072
      nextln:   v2074 = i52.to_bits v2073
      nextln:   v2075 = bool.icmp.i52.eq v1995, v2074
      nextln:   v2076 = bool.icmp.i52.eq v1995, 0x13000000
      nextln:   jumpif v2076, addr_0_block_520, addr_0_block_524
      check: addr_0_block_520: // preds: addr_0_block_519
      nextln:   v2077 = i8.unsigned_from_bits v1922
      nextln:   v2078 = bool.icmp.int.eq v2077, 0x4
      nextln:   jumpif v2078, addr_0_block_521, addr_0_block_522
      nextln:   jump addr_0_block_525
      check: addr_0_block_521: // no preds!
      nextln:   jump addr_0_block_523
      check: addr_0_block_522: // no preds!
      nextln:   v2941 = i8.unsigned_from_bits v1922
      nextln:   jump addr_0_block_523
      check: addr_0_block_523: // preds: addr_0_block_521 addr_0_block_522
      check: addr_0_block_524: // preds: addr_0_block_519
      nextln:   store.i8 v1922, v1995
      nextln:   jump addr_0_block_525
      check: addr_0_block_525: // preds: addr_0_block_520 addr_0_block_524
      nextln:   v2079 = i64.lshr v9, 0x18
      nextln:   v2080 = i8.trunc.i64 v2079
      nextln:   v2081 = i64.wrapping_add v30, 0x3
      nextln:   v2082 = i64.unsigned_from_bits v2081
      nextln:   v2083 = int.modulo v2082, 0x1
      nextln:   v2084 = int.sub v2082, v2083
      nextln:   v2085 = i64.to_bits v2084
      nextln:   v2086 = bool.icmp.i64.eq v2081, v2085
      nextln:   v2087 = i64.lshr v2081, 0x30
      nextln:   v2088 = i16.trunc.i64 v2087
      nextln:   v2089 = bool.icmp.i16.eq v2088, 0x0
      nextln:   v2090 = bool.bitwise_not v2089
      nextln:   jumpif v2090, addr_0_block_526, addr_0_block_527
      check: addr_0_block_526: // preds: addr_0_block_525
      nextln:   jump addr_0_block_528(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_529(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_527: // preds: addr_0_block_525
      nextln:   jump addr_0_block_528(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_528(v2889: i52, v2890: int, v2891: bool, v2892: bool): // preds: addr_0_block_527
      nextln:   v2893 = i52.trunc.i64 v2081
      nextln:   jump addr_0_block_529(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2893, 0x1, 0x0)
      check: addr_0_block_529(v2091: i3, v2092: i1, v2093: i1, v2094: i1, v2095: i1, v2096: i4, v2097: i1, v2098: bool, v2099: int, v2100: int, v2101: bool, v2102: bool, v2103: i8, v2104: i8, v2105: i52, v2106: i1, v2107: bool, v2108: bool, v2109: int, v2110: i1, v2111: bool, v2112: i4, v2113: i2, v2114: i4, v2115: i8, v2116: i8, v2117: i2, v2118: i2, v2119: bool, v2120: i2, v2121: i2, v2122: bool, v2123: bool, v2124: bool, v2125: bool, v2126: i52, v2127: i1, v2128: i64, v2129: i1, v2130: i8, v2131: i8, v2132: i52, v2133: i1, v2134: bool, v2135: bool, v2136: int, v2137: i1, v2138: bool, v2139: i4, v2140: i2, v2141: i4, v2142: i8, v2143: i8, v2144: i2, v2145: i2, v2146: bool, v2147: i2, v2148: i2, v2149: bool, v2150: bool, v2151: bool, v2152: bool, v2153: i52, v2154: i1, v2155: i64): // preds: addr_0_block_526 addr_0_block_528
      nextln:   v2156 = bool.icmp.i8.ne v2130, 0x0
      nextln:   v2157 = bool.bitwise_not v2156
      nextln:   v2158 = bool.bitwise_not v35
      nextln:   v2159 = bool.and v2158, 0x1
      nextln:   v2160 = bool.or v2159, 0x0
      nextln:   v2161 = bool.icmp.i8.ne v2130, 0x0
      nextln:   v2162 = bool.bitwise_not v2161
      nextln:   v2163 = bool.and v2160, v2162
      nextln:   v2164 = bool.icmp.i8.eq v2142, 0x1
      nextln:   v2165 = bool.and v2163, v2164
      nextln:   jumpif v2165, addr_0_block_530, addr_0_block_531
      check: addr_0_block_530: // preds: addr_0_block_529
      nextln:   jump addr_0_block_532
      check: addr_0_block_531: // preds: addr_0_block_529
      nextln:   jump addr_0_block_532
      check: addr_0_block_532: // preds: addr_0_block_530 addr_0_block_531
      nextln:   v2166 = bool.icmp.i8.ne v2130, 0x0
      nextln:   v2167 = bool.bitwise_not v2166
      nextln:   v2168 = bool.icmp.i8.ne v2130, 0x0
      nextln:   v2169 = bool.bitwise_not v2168
      nextln:   v2170 = bool.icmp.i8.eq v2142, 0x1
      nextln:   v2171 = bool.and v2169, v2170
      nextln:   jumpif v2101, addr_0_block_533, addr_0_block_534
      check: addr_0_block_533: // preds: addr_0_block_532
      nextln:   v2172 = bool.icmp.i8.eq v2130, 0x0
      nextln:   jump addr_0_block_535(0x1)
      check: addr_0_block_534: // preds: addr_0_block_532
      nextln:   jump addr_0_block_535(0x0)
      check: addr_0_block_535(v2173: bool): // preds: addr_0_block_533 addr_0_block_534
      nextln:   v2174 = bool.icmp.i8.eq v2130, 0x0
      nextln:   v2175 = bool.and v2102, v2174
      nextln:   jumpif v2175, addr_0_block_536, addr_0_block_537
      check: addr_0_block_536: // preds: addr_0_block_535
      nextln:   jump addr_0_block_538(0x1, 0x1)
      check: addr_0_block_537: // preds: addr_0_block_535
      nextln:   jump addr_0_block_538(0x0, 0x0)
      check: addr_0_block_538(v2176: bool, v2177: bool): // preds: addr_0_block_536 addr_0_block_537
      nextln:   v2178 = bool.or v2173, v2176
      nextln:   jumpif v2178, addr_0_block_539, addr_0_block_552
      check: addr_0_block_539: // preds: addr_0_block_538
      nextln:   v2179 = i52.unsigned_from_bits v2126
      nextln:   v2180 = int.modulo v2179, 0x8
      nextln:   v2181 = int.sub v2179, v2180
      nextln:   v2182 = i52.to_bits v2181
      nextln:   v2183 = bool.icmp.i52.eq v2126, v2182
      nextln:   v2184 = i64.load v2126
      nextln:   jumpif v2173, addr_0_block_540, addr_0_block_541
      nextln:   jump addr_0_block_553(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2184, v2103, v2104, v2105, v2106, v2107, v2108, v2109, v2110, v2111, v2112, v2113, v2114, v2115, v2116, v2117, v2118, v2119, v2120, v2121, v2122, v2123, v2124, v2125, v2126, v2127, v2128, 0x0, 0x0)
      check: addr_0_block_540: // no preds!
      nextln:   jump addr_0_block_542
      check: addr_0_block_541: // no preds!
      nextln:   jump addr_0_block_542
      check: addr_0_block_542: // preds: addr_0_block_540 addr_0_block_541
      nextln:   jumpif v2176, addr_0_block_543, addr_0_block_544
      check: addr_0_block_543: // preds: addr_0_block_542
      nextln:   jump addr_0_block_545
      check: addr_0_block_544: // preds: addr_0_block_542
      nextln:   jump addr_0_block_545
      check: addr_0_block_545: // preds: addr_0_block_543 addr_0_block_544
      nextln:   v2942 = i52.unsigned_from_bits v2126
      nextln:   v2943 = int.modulo v2942, 0x8
      nextln:   v2944 = int.sub v2942, v2943
      nextln:   v2945 = i52.to_bits v2944
      nextln:   v2946 = bool.icmp.i52.eq v2126, v2945
      nextln:   v2947 = bool.icmp.i52.eq v2126, 0x13000000
      nextln:   jumpif v2947, addr_0_block_546, addr_0_block_550
      check: addr_0_block_546: // preds: addr_0_block_545
      nextln:   v2948 = i64.unsigned_from_bits v2184
      nextln:   v2949 = bool.icmp.int.eq v2948, 0x4
      nextln:   jumpif v2949, addr_0_block_547, addr_0_block_548
      nextln:   jump addr_0_block_551
      check: addr_0_block_547: // no preds!
      nextln:   jump addr_0_block_549
      check: addr_0_block_548: // no preds!
      nextln:   v2950 = i8.trunc.i64 v2184
      nextln:   v2951 = i8.unsigned_from_bits v2950
      nextln:   jump addr_0_block_549
      check: addr_0_block_549: // preds: addr_0_block_547 addr_0_block_548
      check: addr_0_block_550: // preds: addr_0_block_545
      nextln:   store.i64 v2184, v2126
      nextln:   jump addr_0_block_551
      check: addr_0_block_551: // preds: addr_0_block_546 addr_0_block_550
      check: addr_0_block_552: // preds: addr_0_block_538
      nextln:   jump addr_0_block_553(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_553(v2185: i8, v2186: i1, v2187: i16, v2188: i8, v2189: bool, v2190: bool, v2191: bool, v2192: int, v2193: i64, v2194: i8, v2195: i8, v2196: i52, v2197: i1, v2198: bool, v2199: bool, v2200: int, v2201: i1, v2202: bool, v2203: i4, v2204: i2, v2205: i4, v2206: i8, v2207: i8, v2208: i2, v2209: i2, v2210: bool, v2211: i2, v2212: i2, v2213: bool, v2214: bool, v2215: bool, v2216: bool, v2217: i52, v2218: i1, v2219: i64, v2220: i2, v2221: bool): // preds: addr_0_block_539 addr_0_block_552
      nextln:   v2222 = bool.icmp.i8.ne v2130, 0x0
      nextln:   v2223 = bool.bitwise_not v2222
      nextln:   v2224 = bool.and v2223, 0x1
      nextln:   v2225 = bool.icmp.i8.ne v2130, 0x0
      nextln:   v2226 = bool.bitwise_not v2225
      nextln:   v2227 = bool.and 0x1, v2226
      nextln:   jumpif v2227, addr_0_block_554, addr_0_block_555
      check: addr_0_block_554: // preds: addr_0_block_553
      nextln:   jump addr_0_block_556
      check: addr_0_block_555: // preds: addr_0_block_553
      nextln:   jump addr_0_block_556
      check: addr_0_block_556: // preds: addr_0_block_554 addr_0_block_555
      nextln:   v2228 = bool.icmp.i8.ne v2130, 0x0
      nextln:   jumpif v2228, addr_0_block_557, addr_0_block_558
      check: addr_0_block_557: // preds: addr_0_block_556
      nextln:   jump addr_0_block_559
      check: addr_0_block_558: // preds: addr_0_block_556
      nextln:   jump addr_0_block_559
      check: addr_0_block_559: // preds: addr_0_block_557 addr_0_block_558
      nextln:   jumpif v2151, addr_0_block_560, addr_0_block_561
      check: addr_0_block_560: // preds: addr_0_block_559
      nextln:   jump addr_0_block_562
      check: addr_0_block_561: // preds: addr_0_block_559
      nextln:   jump addr_0_block_562
      check: addr_0_block_562: // preds: addr_0_block_560 addr_0_block_561
      nextln:   v2229 = i52.unsigned_from_bits v2153
      nextln:   v2230 = int.modulo v2229, 0x1
      nextln:   v2231 = int.sub v2229, v2230
      nextln:   v2232 = i52.to_bits v2231
      nextln:   v2233 = bool.icmp.i52.eq v2153, v2232
      nextln:   v2234 = bool.icmp.i52.eq v2153, 0x13000000
      nextln:   jumpif v2234, addr_0_block_563, addr_0_block_567
      check: addr_0_block_563: // preds: addr_0_block_562
      nextln:   v2235 = i8.unsigned_from_bits v2080
      nextln:   v2236 = bool.icmp.int.eq v2235, 0x4
      nextln:   jumpif v2236, addr_0_block_564, addr_0_block_565
      nextln:   jump addr_0_block_568
      check: addr_0_block_564: // no preds!
      nextln:   jump addr_0_block_566
      check: addr_0_block_565: // no preds!
      nextln:   v2952 = i8.unsigned_from_bits v2080
      nextln:   jump addr_0_block_566
      check: addr_0_block_566: // preds: addr_0_block_564 addr_0_block_565
      check: addr_0_block_567: // preds: addr_0_block_562
      nextln:   store.i8 v2080, v2153
      nextln:   jump addr_0_block_568
      check: addr_0_block_568: // preds: addr_0_block_563 addr_0_block_567
      nextln:   v2237 = i64.lshr v9, 0x20
      nextln:   v2238 = i8.trunc.i64 v2237
      nextln:   v2239 = i64.wrapping_add v30, 0x4
      nextln:   v2240 = i64.unsigned_from_bits v2239
      nextln:   v2241 = int.modulo v2240, 0x1
      nextln:   v2242 = int.sub v2240, v2241
      nextln:   v2243 = i64.to_bits v2242
      nextln:   v2244 = bool.icmp.i64.eq v2239, v2243
      nextln:   v2245 = i64.lshr v2239, 0x30
      nextln:   v2246 = i16.trunc.i64 v2245
      nextln:   v2247 = bool.icmp.i16.eq v2246, 0x0
      nextln:   v2248 = bool.bitwise_not v2247
      nextln:   jumpif v2248, addr_0_block_569, addr_0_block_570
      check: addr_0_block_569: // preds: addr_0_block_568
      nextln:   jump addr_0_block_571(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_572(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_570: // preds: addr_0_block_568
      nextln:   jump addr_0_block_571(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_571(v2884: i52, v2885: int, v2886: bool, v2887: bool): // preds: addr_0_block_570
      nextln:   v2888 = i52.trunc.i64 v2239
      nextln:   jump addr_0_block_572(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2888, 0x1, 0x0)
      check: addr_0_block_572(v2249: i3, v2250: i1, v2251: i1, v2252: i1, v2253: i1, v2254: i4, v2255: i1, v2256: bool, v2257: int, v2258: int, v2259: bool, v2260: bool, v2261: i8, v2262: i8, v2263: i52, v2264: i1, v2265: bool, v2266: bool, v2267: int, v2268: i1, v2269: bool, v2270: i4, v2271: i2, v2272: i4, v2273: i8, v2274: i8, v2275: i2, v2276: i2, v2277: bool, v2278: i2, v2279: i2, v2280: bool, v2281: bool, v2282: bool, v2283: bool, v2284: i52, v2285: i1, v2286: i64, v2287: i1, v2288: i8, v2289: i8, v2290: i52, v2291: i1, v2292: bool, v2293: bool, v2294: int, v2295: i1, v2296: bool, v2297: i4, v2298: i2, v2299: i4, v2300: i8, v2301: i8, v2302: i2, v2303: i2, v2304: bool, v2305: i2, v2306: i2, v2307: bool, v2308: bool, v2309: bool, v2310: bool, v2311: i52, v2312: i1, v2313: i64): // preds: addr_0_block_569 addr_0_block_571
      nextln:   v2314 = bool.icmp.i8.ne v2288, 0x0
      nextln:   v2315 = bool.bitwise_not v2314
      nextln:   v2316 = bool.bitwise_not v35
      nextln:   v2317 = bool.and v2316, 0x1
      nextln:   v2318 = bool.or v2317, 0x0
      nextln:   v2319 = bool.icmp.i8.ne v2288, 0x0
      nextln:   v2320 = bool.bitwise_not v2319
      nextln:   v2321 = bool.and v2318, v2320
      nextln:   v2322 = bool.icmp.i8.eq v2300, 0x1
      nextln:   v2323 = bool.and v2321, v2322
      nextln:   jumpif v2323, addr_0_block_573, addr_0_block_574
      check: addr_0_block_573: // preds: addr_0_block_572
      nextln:   jump addr_0_block_575
      check: addr_0_block_574: // preds: addr_0_block_572
      nextln:   jump addr_0_block_575
      check: addr_0_block_575: // preds: addr_0_block_573 addr_0_block_574
      nextln:   v2324 = bool.icmp.i8.ne v2288, 0x0
      nextln:   v2325 = bool.bitwise_not v2324
      nextln:   v2326 = bool.icmp.i8.ne v2288, 0x0
      nextln:   v2327 = bool.bitwise_not v2326
      nextln:   v2328 = bool.icmp.i8.eq v2300, 0x1
      nextln:   v2329 = bool.and v2327, v2328
      nextln:   jumpif v2259, addr_0_block_576, addr_0_block_577
      check: addr_0_block_576: // preds: addr_0_block_575
      nextln:   v2330 = bool.icmp.i8.eq v2288, 0x0
      nextln:   jump addr_0_block_578(0x1)
      check: addr_0_block_577: // preds: addr_0_block_575
      nextln:   jump addr_0_block_578(0x0)
      check: addr_0_block_578(v2331: bool): // preds: addr_0_block_576 addr_0_block_577
      nextln:   v2332 = bool.icmp.i8.eq v2288, 0x0
      nextln:   v2333 = bool.and v2260, v2332
      nextln:   jumpif v2333, addr_0_block_579, addr_0_block_580
      check: addr_0_block_579: // preds: addr_0_block_578
      nextln:   jump addr_0_block_581(0x1, 0x1)
      check: addr_0_block_580: // preds: addr_0_block_578
      nextln:   jump addr_0_block_581(0x0, 0x0)
      check: addr_0_block_581(v2334: bool, v2335: bool): // preds: addr_0_block_579 addr_0_block_580
      nextln:   v2336 = bool.or v2331, v2334
      nextln:   jumpif v2336, addr_0_block_582, addr_0_block_595
      check: addr_0_block_582: // preds: addr_0_block_581
      nextln:   v2337 = i52.unsigned_from_bits v2284
      nextln:   v2338 = int.modulo v2337, 0x8
      nextln:   v2339 = int.sub v2337, v2338
      nextln:   v2340 = i52.to_bits v2339
      nextln:   v2341 = bool.icmp.i52.eq v2284, v2340
      nextln:   v2342 = i64.load v2284
      nextln:   jumpif v2331, addr_0_block_583, addr_0_block_584
      nextln:   jump addr_0_block_596(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2342, v2261, v2262, v2263, v2264, v2265, v2266, v2267, v2268, v2269, v2270, v2271, v2272, v2273, v2274, v2275, v2276, v2277, v2278, v2279, v2280, v2281, v2282, v2283, v2284, v2285, v2286, 0x0, 0x0)
      check: addr_0_block_583: // no preds!
      nextln:   jump addr_0_block_585
      check: addr_0_block_584: // no preds!
      nextln:   jump addr_0_block_585
      check: addr_0_block_585: // preds: addr_0_block_583 addr_0_block_584
      nextln:   jumpif v2334, addr_0_block_586, addr_0_block_587
      check: addr_0_block_586: // preds: addr_0_block_585
      nextln:   jump addr_0_block_588
      check: addr_0_block_587: // preds: addr_0_block_585
      nextln:   jump addr_0_block_588
      check: addr_0_block_588: // preds: addr_0_block_586 addr_0_block_587
      nextln:   v2953 = i52.unsigned_from_bits v2284
      nextln:   v2954 = int.modulo v2953, 0x8
      nextln:   v2955 = int.sub v2953, v2954
      nextln:   v2956 = i52.to_bits v2955
      nextln:   v2957 = bool.icmp.i52.eq v2284, v2956
      nextln:   v2958 = bool.icmp.i52.eq v2284, 0x13000000
      nextln:   jumpif v2958, addr_0_block_589, addr_0_block_593
      check: addr_0_block_589: // preds: addr_0_block_588
      nextln:   v2959 = i64.unsigned_from_bits v2342
      nextln:   v2960 = bool.icmp.int.eq v2959, 0x4
      nextln:   jumpif v2960, addr_0_block_590, addr_0_block_591
      nextln:   jump addr_0_block_594
      check: addr_0_block_590: // no preds!
      nextln:   jump addr_0_block_592
      check: addr_0_block_591: // no preds!
      nextln:   v2961 = i8.trunc.i64 v2342
      nextln:   v2962 = i8.unsigned_from_bits v2961
      nextln:   jump addr_0_block_592
      check: addr_0_block_592: // preds: addr_0_block_590 addr_0_block_591
      check: addr_0_block_593: // preds: addr_0_block_588
      nextln:   store.i64 v2342, v2284
      nextln:   jump addr_0_block_594
      check: addr_0_block_594: // preds: addr_0_block_589 addr_0_block_593
      check: addr_0_block_595: // preds: addr_0_block_581
      nextln:   jump addr_0_block_596(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_596(v2343: i8, v2344: i1, v2345: i16, v2346: i8, v2347: bool, v2348: bool, v2349: bool, v2350: int, v2351: i64, v2352: i8, v2353: i8, v2354: i52, v2355: i1, v2356: bool, v2357: bool, v2358: int, v2359: i1, v2360: bool, v2361: i4, v2362: i2, v2363: i4, v2364: i8, v2365: i8, v2366: i2, v2367: i2, v2368: bool, v2369: i2, v2370: i2, v2371: bool, v2372: bool, v2373: bool, v2374: bool, v2375: i52, v2376: i1, v2377: i64, v2378: i2, v2379: bool): // preds: addr_0_block_582 addr_0_block_595
      nextln:   v2380 = bool.icmp.i8.ne v2288, 0x0
      nextln:   v2381 = bool.bitwise_not v2380
      nextln:   v2382 = bool.and v2381, 0x1
      nextln:   v2383 = bool.icmp.i8.ne v2288, 0x0
      nextln:   v2384 = bool.bitwise_not v2383
      nextln:   v2385 = bool.and 0x1, v2384
      nextln:   jumpif v2385, addr_0_block_597, addr_0_block_598
      check: addr_0_block_597: // preds: addr_0_block_596
      nextln:   jump addr_0_block_599
      check: addr_0_block_598: // preds: addr_0_block_596
      nextln:   jump addr_0_block_599
      check: addr_0_block_599: // preds: addr_0_block_597 addr_0_block_598
      nextln:   v2386 = bool.icmp.i8.ne v2288, 0x0
      nextln:   jumpif v2386, addr_0_block_600, addr_0_block_601
      check: addr_0_block_600: // preds: addr_0_block_599
      nextln:   jump addr_0_block_602
      check: addr_0_block_601: // preds: addr_0_block_599
      nextln:   jump addr_0_block_602
      check: addr_0_block_602: // preds: addr_0_block_600 addr_0_block_601
      nextln:   jumpif v2309, addr_0_block_603, addr_0_block_604
      check: addr_0_block_603: // preds: addr_0_block_602
      nextln:   jump addr_0_block_605
      check: addr_0_block_604: // preds: addr_0_block_602
      nextln:   jump addr_0_block_605
      check: addr_0_block_605: // preds: addr_0_block_603 addr_0_block_604
      nextln:   v2387 = i52.unsigned_from_bits v2311
      nextln:   v2388 = int.modulo v2387, 0x1
      nextln:   v2389 = int.sub v2387, v2388
      nextln:   v2390 = i52.to_bits v2389
      nextln:   v2391 = bool.icmp.i52.eq v2311, v2390
      nextln:   v2392 = bool.icmp.i52.eq v2311, 0x13000000
      nextln:   jumpif v2392, addr_0_block_606, addr_0_block_610
      check: addr_0_block_606: // preds: addr_0_block_605
      nextln:   v2393 = i8.unsigned_from_bits v2238
      nextln:   v2394 = bool.icmp.int.eq v2393, 0x4
      nextln:   jumpif v2394, addr_0_block_607, addr_0_block_608
      nextln:   jump addr_0_block_611
      check: addr_0_block_607: // no preds!
      nextln:   jump addr_0_block_609
      check: addr_0_block_608: // no preds!
      nextln:   v2963 = i8.unsigned_from_bits v2238
      nextln:   jump addr_0_block_609
      check: addr_0_block_609: // preds: addr_0_block_607 addr_0_block_608
      check: addr_0_block_610: // preds: addr_0_block_605
      nextln:   store.i8 v2238, v2311
      nextln:   jump addr_0_block_611
      check: addr_0_block_611: // preds: addr_0_block_606 addr_0_block_610
      nextln:   v2395 = i64.lshr v9, 0x28
      nextln:   v2396 = i8.trunc.i64 v2395
      nextln:   v2397 = i64.wrapping_add v30, 0x5
      nextln:   v2398 = i64.unsigned_from_bits v2397
      nextln:   v2399 = int.modulo v2398, 0x1
      nextln:   v2400 = int.sub v2398, v2399
      nextln:   v2401 = i64.to_bits v2400
      nextln:   v2402 = bool.icmp.i64.eq v2397, v2401
      nextln:   v2403 = i64.lshr v2397, 0x30
      nextln:   v2404 = i16.trunc.i64 v2403
      nextln:   v2405 = bool.icmp.i16.eq v2404, 0x0
      nextln:   v2406 = bool.bitwise_not v2405
      nextln:   jumpif v2406, addr_0_block_612, addr_0_block_613
      check: addr_0_block_612: // preds: addr_0_block_611
      nextln:   jump addr_0_block_614(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_615(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_613: // preds: addr_0_block_611
      nextln:   jump addr_0_block_614(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_614(v2879: i52, v2880: int, v2881: bool, v2882: bool): // preds: addr_0_block_613
      nextln:   v2883 = i52.trunc.i64 v2397
      nextln:   jump addr_0_block_615(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2883, 0x1, 0x0)
      check: addr_0_block_615(v2407: i3, v2408: i1, v2409: i1, v2410: i1, v2411: i1, v2412: i4, v2413: i1, v2414: bool, v2415: int, v2416: int, v2417: bool, v2418: bool, v2419: i8, v2420: i8, v2421: i52, v2422: i1, v2423: bool, v2424: bool, v2425: int, v2426: i1, v2427: bool, v2428: i4, v2429: i2, v2430: i4, v2431: i8, v2432: i8, v2433: i2, v2434: i2, v2435: bool, v2436: i2, v2437: i2, v2438: bool, v2439: bool, v2440: bool, v2441: bool, v2442: i52, v2443: i1, v2444: i64, v2445: i1, v2446: i8, v2447: i8, v2448: i52, v2449: i1, v2450: bool, v2451: bool, v2452: int, v2453: i1, v2454: bool, v2455: i4, v2456: i2, v2457: i4, v2458: i8, v2459: i8, v2460: i2, v2461: i2, v2462: bool, v2463: i2, v2464: i2, v2465: bool, v2466: bool, v2467: bool, v2468: bool, v2469: i52, v2470: i1, v2471: i64): // preds: addr_0_block_612 addr_0_block_614
      nextln:   v2472 = bool.icmp.i8.ne v2446, 0x0
      nextln:   v2473 = bool.bitwise_not v2472
      nextln:   v2474 = bool.bitwise_not v35
      nextln:   v2475 = bool.and v2474, 0x1
      nextln:   v2476 = bool.or v2475, 0x0
      nextln:   v2477 = bool.icmp.i8.ne v2446, 0x0
      nextln:   v2478 = bool.bitwise_not v2477
      nextln:   v2479 = bool.and v2476, v2478
      nextln:   v2480 = bool.icmp.i8.eq v2458, 0x1
      nextln:   v2481 = bool.and v2479, v2480
      nextln:   jumpif v2481, addr_0_block_616, addr_0_block_617
      check: addr_0_block_616: // preds: addr_0_block_615
      nextln:   jump addr_0_block_618
      check: addr_0_block_617: // preds: addr_0_block_615
      nextln:   jump addr_0_block_618
      check: addr_0_block_618: // preds: addr_0_block_616 addr_0_block_617
      nextln:   v2482 = bool.icmp.i8.ne v2446, 0x0
      nextln:   v2483 = bool.bitwise_not v2482
      nextln:   v2484 = bool.icmp.i8.ne v2446, 0x0
      nextln:   v2485 = bool.bitwise_not v2484
      nextln:   v2486 = bool.icmp.i8.eq v2458, 0x1
      nextln:   v2487 = bool.and v2485, v2486
      nextln:   jumpif v2417, addr_0_block_619, addr_0_block_620
      check: addr_0_block_619: // preds: addr_0_block_618
      nextln:   v2488 = bool.icmp.i8.eq v2446, 0x0
      nextln:   jump addr_0_block_621(0x1)
      check: addr_0_block_620: // preds: addr_0_block_618
      nextln:   jump addr_0_block_621(0x0)
      check: addr_0_block_621(v2489: bool): // preds: addr_0_block_619 addr_0_block_620
      nextln:   v2490 = bool.icmp.i8.eq v2446, 0x0
      nextln:   v2491 = bool.and v2418, v2490
      nextln:   jumpif v2491, addr_0_block_622, addr_0_block_623
      check: addr_0_block_622: // preds: addr_0_block_621
      nextln:   jump addr_0_block_624(0x1, 0x1)
      check: addr_0_block_623: // preds: addr_0_block_621
      nextln:   jump addr_0_block_624(0x0, 0x0)
      check: addr_0_block_624(v2492: bool, v2493: bool): // preds: addr_0_block_622 addr_0_block_623
      nextln:   v2494 = bool.or v2489, v2492
      nextln:   jumpif v2494, addr_0_block_625, addr_0_block_638
      check: addr_0_block_625: // preds: addr_0_block_624
      nextln:   v2495 = i52.unsigned_from_bits v2442
      nextln:   v2496 = int.modulo v2495, 0x8
      nextln:   v2497 = int.sub v2495, v2496
      nextln:   v2498 = i52.to_bits v2497
      nextln:   v2499 = bool.icmp.i52.eq v2442, v2498
      nextln:   v2500 = i64.load v2442
      nextln:   jumpif v2489, addr_0_block_626, addr_0_block_627
      nextln:   jump addr_0_block_639(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2500, v2419, v2420, v2421, v2422, v2423, v2424, v2425, v2426, v2427, v2428, v2429, v2430, v2431, v2432, v2433, v2434, v2435, v2436, v2437, v2438, v2439, v2440, v2441, v2442, v2443, v2444, 0x0, 0x0)
      check: addr_0_block_626: // no preds!
      nextln:   jump addr_0_block_628
      check: addr_0_block_627: // no preds!
      nextln:   jump addr_0_block_628
      check: addr_0_block_628: // preds: addr_0_block_626 addr_0_block_627
      nextln:   jumpif v2492, addr_0_block_629, addr_0_block_630
      check: addr_0_block_629: // preds: addr_0_block_628
      nextln:   jump addr_0_block_631
      check: addr_0_block_630: // preds: addr_0_block_628
      nextln:   jump addr_0_block_631
      check: addr_0_block_631: // preds: addr_0_block_629 addr_0_block_630
      nextln:   v2964 = i52.unsigned_from_bits v2442
      nextln:   v2965 = int.modulo v2964, 0x8
      nextln:   v2966 = int.sub v2964, v2965
      nextln:   v2967 = i52.to_bits v2966
      nextln:   v2968 = bool.icmp.i52.eq v2442, v2967
      nextln:   v2969 = bool.icmp.i52.eq v2442, 0x13000000
      nextln:   jumpif v2969, addr_0_block_632, addr_0_block_636
      check: addr_0_block_632: // preds: addr_0_block_631
      nextln:   v2970 = i64.unsigned_from_bits v2500
      nextln:   v2971 = bool.icmp.int.eq v2970, 0x4
      nextln:   jumpif v2971, addr_0_block_633, addr_0_block_634
      nextln:   jump addr_0_block_637
      check: addr_0_block_633: // no preds!
      nextln:   jump addr_0_block_635
      check: addr_0_block_634: // no preds!
      nextln:   v2972 = i8.trunc.i64 v2500
      nextln:   v2973 = i8.unsigned_from_bits v2972
      nextln:   jump addr_0_block_635
      check: addr_0_block_635: // preds: addr_0_block_633 addr_0_block_634
      check: addr_0_block_636: // preds: addr_0_block_631
      nextln:   store.i64 v2500, v2442
      nextln:   jump addr_0_block_637
      check: addr_0_block_637: // preds: addr_0_block_632 addr_0_block_636
      check: addr_0_block_638: // preds: addr_0_block_624
      nextln:   jump addr_0_block_639(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_639(v2501: i8, v2502: i1, v2503: i16, v2504: i8, v2505: bool, v2506: bool, v2507: bool, v2508: int, v2509: i64, v2510: i8, v2511: i8, v2512: i52, v2513: i1, v2514: bool, v2515: bool, v2516: int, v2517: i1, v2518: bool, v2519: i4, v2520: i2, v2521: i4, v2522: i8, v2523: i8, v2524: i2, v2525: i2, v2526: bool, v2527: i2, v2528: i2, v2529: bool, v2530: bool, v2531: bool, v2532: bool, v2533: i52, v2534: i1, v2535: i64, v2536: i2, v2537: bool): // preds: addr_0_block_625 addr_0_block_638
      nextln:   v2538 = bool.icmp.i8.ne v2446, 0x0
      nextln:   v2539 = bool.bitwise_not v2538
      nextln:   v2540 = bool.and v2539, 0x1
      nextln:   v2541 = bool.icmp.i8.ne v2446, 0x0
      nextln:   v2542 = bool.bitwise_not v2541
      nextln:   v2543 = bool.and 0x1, v2542
      nextln:   jumpif v2543, addr_0_block_640, addr_0_block_641
      check: addr_0_block_640: // preds: addr_0_block_639
      nextln:   jump addr_0_block_642
      check: addr_0_block_641: // preds: addr_0_block_639
      nextln:   jump addr_0_block_642
      check: addr_0_block_642: // preds: addr_0_block_640 addr_0_block_641
      nextln:   v2544 = bool.icmp.i8.ne v2446, 0x0
      nextln:   jumpif v2544, addr_0_block_643, addr_0_block_644
      check: addr_0_block_643: // preds: addr_0_block_642
      nextln:   jump addr_0_block_645
      check: addr_0_block_644: // preds: addr_0_block_642
      nextln:   jump addr_0_block_645
      check: addr_0_block_645: // preds: addr_0_block_643 addr_0_block_644
      nextln:   jumpif v2467, addr_0_block_646, addr_0_block_647
      check: addr_0_block_646: // preds: addr_0_block_645
      nextln:   jump addr_0_block_648
      check: addr_0_block_647: // preds: addr_0_block_645
      nextln:   jump addr_0_block_648
      check: addr_0_block_648: // preds: addr_0_block_646 addr_0_block_647
      nextln:   v2545 = i52.unsigned_from_bits v2469
      nextln:   v2546 = int.modulo v2545, 0x1
      nextln:   v2547 = int.sub v2545, v2546
      nextln:   v2548 = i52.to_bits v2547
      nextln:   v2549 = bool.icmp.i52.eq v2469, v2548
      nextln:   v2550 = bool.icmp.i52.eq v2469, 0x13000000
      nextln:   jumpif v2550, addr_0_block_649, addr_0_block_653
      check: addr_0_block_649: // preds: addr_0_block_648
      nextln:   v2551 = i8.unsigned_from_bits v2396
      nextln:   v2552 = bool.icmp.int.eq v2551, 0x4
      nextln:   jumpif v2552, addr_0_block_650, addr_0_block_651
      nextln:   jump addr_0_block_654
      check: addr_0_block_650: // no preds!
      nextln:   jump addr_0_block_652
      check: addr_0_block_651: // no preds!
      nextln:   v2974 = i8.unsigned_from_bits v2396
      nextln:   jump addr_0_block_652
      check: addr_0_block_652: // preds: addr_0_block_650 addr_0_block_651
      check: addr_0_block_653: // preds: addr_0_block_648
      nextln:   store.i8 v2396, v2469
      nextln:   jump addr_0_block_654
      check: addr_0_block_654: // preds: addr_0_block_649 addr_0_block_653
      nextln:   v2553 = i64.lshr v9, 0x30
      nextln:   v2554 = i8.trunc.i64 v2553
      nextln:   v2555 = i64.wrapping_add v30, 0x6
      nextln:   v2556 = i64.unsigned_from_bits v2555
      nextln:   v2557 = int.modulo v2556, 0x1
      nextln:   v2558 = int.sub v2556, v2557
      nextln:   v2559 = i64.to_bits v2558
      nextln:   v2560 = bool.icmp.i64.eq v2555, v2559
      nextln:   v2561 = i64.lshr v2555, 0x30
      nextln:   v2562 = i16.trunc.i64 v2561
      nextln:   v2563 = bool.icmp.i16.eq v2562, 0x0
      nextln:   v2564 = bool.bitwise_not v2563
      nextln:   jumpif v2564, addr_0_block_655, addr_0_block_656
      check: addr_0_block_655: // preds: addr_0_block_654
      nextln:   jump addr_0_block_657(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_658(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_656: // preds: addr_0_block_654
      nextln:   jump addr_0_block_657(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_657(v2874: i52, v2875: int, v2876: bool, v2877: bool): // preds: addr_0_block_656
      nextln:   v2878 = i52.trunc.i64 v2555
      nextln:   jump addr_0_block_658(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2878, 0x1, 0x0)
      check: addr_0_block_658(v2565: i3, v2566: i1, v2567: i1, v2568: i1, v2569: i1, v2570: i4, v2571: i1, v2572: bool, v2573: int, v2574: int, v2575: bool, v2576: bool, v2577: i8, v2578: i8, v2579: i52, v2580: i1, v2581: bool, v2582: bool, v2583: int, v2584: i1, v2585: bool, v2586: i4, v2587: i2, v2588: i4, v2589: i8, v2590: i8, v2591: i2, v2592: i2, v2593: bool, v2594: i2, v2595: i2, v2596: bool, v2597: bool, v2598: bool, v2599: bool, v2600: i52, v2601: i1, v2602: i64, v2603: i1, v2604: i8, v2605: i8, v2606: i52, v2607: i1, v2608: bool, v2609: bool, v2610: int, v2611: i1, v2612: bool, v2613: i4, v2614: i2, v2615: i4, v2616: i8, v2617: i8, v2618: i2, v2619: i2, v2620: bool, v2621: i2, v2622: i2, v2623: bool, v2624: bool, v2625: bool, v2626: bool, v2627: i52, v2628: i1, v2629: i64): // preds: addr_0_block_655 addr_0_block_657
      nextln:   v2630 = bool.icmp.i8.ne v2604, 0x0
      nextln:   v2631 = bool.bitwise_not v2630
      nextln:   v2632 = bool.bitwise_not v35
      nextln:   v2633 = bool.and v2632, 0x1
      nextln:   v2634 = bool.or v2633, 0x0
      nextln:   v2635 = bool.icmp.i8.ne v2604, 0x0
      nextln:   v2636 = bool.bitwise_not v2635
      nextln:   v2637 = bool.and v2634, v2636
      nextln:   v2638 = bool.icmp.i8.eq v2616, 0x1
      nextln:   v2639 = bool.and v2637, v2638
      nextln:   jumpif v2639, addr_0_block_659, addr_0_block_660
      check: addr_0_block_659: // preds: addr_0_block_658
      nextln:   jump addr_0_block_661
      check: addr_0_block_660: // preds: addr_0_block_658
      nextln:   jump addr_0_block_661
      check: addr_0_block_661: // preds: addr_0_block_659 addr_0_block_660
      nextln:   v2640 = bool.icmp.i8.ne v2604, 0x0
      nextln:   v2641 = bool.bitwise_not v2640
      nextln:   v2642 = bool.icmp.i8.ne v2604, 0x0
      nextln:   v2643 = bool.bitwise_not v2642
      nextln:   v2644 = bool.icmp.i8.eq v2616, 0x1
      nextln:   v2645 = bool.and v2643, v2644
      nextln:   jumpif v2575, addr_0_block_662, addr_0_block_663
      check: addr_0_block_662: // preds: addr_0_block_661
      nextln:   v2646 = bool.icmp.i8.eq v2604, 0x0
      nextln:   jump addr_0_block_664(0x1)
      check: addr_0_block_663: // preds: addr_0_block_661
      nextln:   jump addr_0_block_664(0x0)
      check: addr_0_block_664(v2647: bool): // preds: addr_0_block_662 addr_0_block_663
      nextln:   v2648 = bool.icmp.i8.eq v2604, 0x0
      nextln:   v2649 = bool.and v2576, v2648
      nextln:   jumpif v2649, addr_0_block_665, addr_0_block_666
      check: addr_0_block_665: // preds: addr_0_block_664
      nextln:   jump addr_0_block_667(0x1, 0x1)
      check: addr_0_block_666: // preds: addr_0_block_664
      nextln:   jump addr_0_block_667(0x0, 0x0)
      check: addr_0_block_667(v2650: bool, v2651: bool): // preds: addr_0_block_665 addr_0_block_666
      nextln:   v2652 = bool.or v2647, v2650
      nextln:   jumpif v2652, addr_0_block_668, addr_0_block_681
      check: addr_0_block_668: // preds: addr_0_block_667
      nextln:   v2653 = i52.unsigned_from_bits v2600
      nextln:   v2654 = int.modulo v2653, 0x8
      nextln:   v2655 = int.sub v2653, v2654
      nextln:   v2656 = i52.to_bits v2655
      nextln:   v2657 = bool.icmp.i52.eq v2600, v2656
      nextln:   v2658 = i64.load v2600
      nextln:   jumpif v2647, addr_0_block_669, addr_0_block_670
      nextln:   jump addr_0_block_682(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2658, v2577, v2578, v2579, v2580, v2581, v2582, v2583, v2584, v2585, v2586, v2587, v2588, v2589, v2590, v2591, v2592, v2593, v2594, v2595, v2596, v2597, v2598, v2599, v2600, v2601, v2602, 0x0, 0x0)
      check: addr_0_block_669: // no preds!
      nextln:   jump addr_0_block_671
      check: addr_0_block_670: // no preds!
      nextln:   jump addr_0_block_671
      check: addr_0_block_671: // preds: addr_0_block_669 addr_0_block_670
      nextln:   jumpif v2650, addr_0_block_672, addr_0_block_673
      check: addr_0_block_672: // preds: addr_0_block_671
      nextln:   jump addr_0_block_674
      check: addr_0_block_673: // preds: addr_0_block_671
      nextln:   jump addr_0_block_674
      check: addr_0_block_674: // preds: addr_0_block_672 addr_0_block_673
      nextln:   v2975 = i52.unsigned_from_bits v2600
      nextln:   v2976 = int.modulo v2975, 0x8
      nextln:   v2977 = int.sub v2975, v2976
      nextln:   v2978 = i52.to_bits v2977
      nextln:   v2979 = bool.icmp.i52.eq v2600, v2978
      nextln:   v2980 = bool.icmp.i52.eq v2600, 0x13000000
      nextln:   jumpif v2980, addr_0_block_675, addr_0_block_679
      check: addr_0_block_675: // preds: addr_0_block_674
      nextln:   v2981 = i64.unsigned_from_bits v2658
      nextln:   v2982 = bool.icmp.int.eq v2981, 0x4
      nextln:   jumpif v2982, addr_0_block_676, addr_0_block_677
      nextln:   jump addr_0_block_680
      check: addr_0_block_676: // no preds!
      nextln:   jump addr_0_block_678
      check: addr_0_block_677: // no preds!
      nextln:   v2983 = i8.trunc.i64 v2658
      nextln:   v2984 = i8.unsigned_from_bits v2983
      nextln:   jump addr_0_block_678
      check: addr_0_block_678: // preds: addr_0_block_676 addr_0_block_677
      check: addr_0_block_679: // preds: addr_0_block_674
      nextln:   store.i64 v2658, v2600
      nextln:   jump addr_0_block_680
      check: addr_0_block_680: // preds: addr_0_block_675 addr_0_block_679
      check: addr_0_block_681: // preds: addr_0_block_667
      nextln:   jump addr_0_block_682(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_682(v2659: i8, v2660: i1, v2661: i16, v2662: i8, v2663: bool, v2664: bool, v2665: bool, v2666: int, v2667: i64, v2668: i8, v2669: i8, v2670: i52, v2671: i1, v2672: bool, v2673: bool, v2674: int, v2675: i1, v2676: bool, v2677: i4, v2678: i2, v2679: i4, v2680: i8, v2681: i8, v2682: i2, v2683: i2, v2684: bool, v2685: i2, v2686: i2, v2687: bool, v2688: bool, v2689: bool, v2690: bool, v2691: i52, v2692: i1, v2693: i64, v2694: i2, v2695: bool): // preds: addr_0_block_668 addr_0_block_681
      nextln:   v2696 = bool.icmp.i8.ne v2604, 0x0
      nextln:   v2697 = bool.bitwise_not v2696
      nextln:   v2698 = bool.and v2697, 0x1
      nextln:   v2699 = bool.icmp.i8.ne v2604, 0x0
      nextln:   v2700 = bool.bitwise_not v2699
      nextln:   v2701 = bool.and 0x1, v2700
      nextln:   jumpif v2701, addr_0_block_683, addr_0_block_684
      check: addr_0_block_683: // preds: addr_0_block_682
      nextln:   jump addr_0_block_685
      check: addr_0_block_684: // preds: addr_0_block_682
      nextln:   jump addr_0_block_685
      check: addr_0_block_685: // preds: addr_0_block_683 addr_0_block_684
      nextln:   v2702 = bool.icmp.i8.ne v2604, 0x0
      nextln:   jumpif v2702, addr_0_block_686, addr_0_block_687
      check: addr_0_block_686: // preds: addr_0_block_685
      nextln:   jump addr_0_block_688
      check: addr_0_block_687: // preds: addr_0_block_685
      nextln:   jump addr_0_block_688
      check: addr_0_block_688: // preds: addr_0_block_686 addr_0_block_687
      nextln:   jumpif v2625, addr_0_block_689, addr_0_block_690
      check: addr_0_block_689: // preds: addr_0_block_688
      nextln:   jump addr_0_block_691
      check: addr_0_block_690: // preds: addr_0_block_688
      nextln:   jump addr_0_block_691
      check: addr_0_block_691: // preds: addr_0_block_689 addr_0_block_690
      nextln:   v2703 = i52.unsigned_from_bits v2627
      nextln:   v2704 = int.modulo v2703, 0x1
      nextln:   v2705 = int.sub v2703, v2704
      nextln:   v2706 = i52.to_bits v2705
      nextln:   v2707 = bool.icmp.i52.eq v2627, v2706
      nextln:   v2708 = bool.icmp.i52.eq v2627, 0x13000000
      nextln:   jumpif v2708, addr_0_block_692, addr_0_block_696
      check: addr_0_block_692: // preds: addr_0_block_691
      nextln:   v2709 = i8.unsigned_from_bits v2554
      nextln:   v2710 = bool.icmp.int.eq v2709, 0x4
      nextln:   jumpif v2710, addr_0_block_693, addr_0_block_694
      nextln:   jump addr_0_block_697
      check: addr_0_block_693: // no preds!
      nextln:   jump addr_0_block_695
      check: addr_0_block_694: // no preds!
      nextln:   v2985 = i8.unsigned_from_bits v2554
      nextln:   jump addr_0_block_695
      check: addr_0_block_695: // preds: addr_0_block_693 addr_0_block_694
      check: addr_0_block_696: // preds: addr_0_block_691
      nextln:   store.i8 v2554, v2627
      nextln:   jump addr_0_block_697
      check: addr_0_block_697: // preds: addr_0_block_692 addr_0_block_696
      nextln:   v2711 = i64.lshr v9, 0x38
      nextln:   v2712 = i8.trunc.i64 v2711
      nextln:   v2713 = i64.wrapping_add v30, 0x7
      nextln:   v2714 = i64.unsigned_from_bits v2713
      nextln:   v2715 = int.modulo v2714, 0x1
      nextln:   v2716 = int.sub v2714, v2715
      nextln:   v2717 = i64.to_bits v2716
      nextln:   v2718 = bool.icmp.i64.eq v2713, v2717
      nextln:   v2719 = i64.lshr v2713, 0x30
      nextln:   v2720 = i16.trunc.i64 v2719
      nextln:   v2721 = bool.icmp.i16.eq v2720, 0x0
      nextln:   v2722 = bool.bitwise_not v2721
      nextln:   jumpif v2722, addr_0_block_698, addr_0_block_699
      check: addr_0_block_698: // preds: addr_0_block_697
      nextln:   jump addr_0_block_700(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_701(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_699: // preds: addr_0_block_697
      nextln:   jump addr_0_block_700(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_700(v2869: i52, v2870: int, v2871: bool, v2872: bool): // preds: addr_0_block_699
      nextln:   v2873 = i52.trunc.i64 v2713
      nextln:   jump addr_0_block_701(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v2873, 0x1, 0x0)
      check: addr_0_block_701(v2723: i3, v2724: i1, v2725: i1, v2726: i1, v2727: i1, v2728: i4, v2729: i1, v2730: bool, v2731: int, v2732: int, v2733: bool, v2734: bool, v2735: i8, v2736: i8, v2737: i52, v2738: i1, v2739: bool, v2740: bool, v2741: int, v2742: i1, v2743: bool, v2744: i4, v2745: i2, v2746: i4, v2747: i8, v2748: i8, v2749: i2, v2750: i2, v2751: bool, v2752: i2, v2753: i2, v2754: bool, v2755: bool, v2756: bool, v2757: bool, v2758: i52, v2759: i1, v2760: i64, v2761: i1, v2762: i8, v2763: i8, v2764: i52, v2765: i1, v2766: bool, v2767: bool, v2768: int, v2769: i1, v2770: bool, v2771: i4, v2772: i2, v2773: i4, v2774: i8, v2775: i8, v2776: i2, v2777: i2, v2778: bool, v2779: i2, v2780: i2, v2781: bool, v2782: bool, v2783: bool, v2784: bool, v2785: i52, v2786: i1, v2787: i64): // preds: addr_0_block_698 addr_0_block_700
      nextln:   v2788 = bool.icmp.i8.ne v2762, 0x0
      nextln:   v2789 = bool.bitwise_not v2788
      nextln:   v2790 = bool.bitwise_not v35
      nextln:   v2791 = bool.and v2790, 0x1
      nextln:   v2792 = bool.or v2791, 0x0
      nextln:   v2793 = bool.icmp.i8.ne v2762, 0x0
      nextln:   v2794 = bool.bitwise_not v2793
      nextln:   v2795 = bool.and v2792, v2794
      nextln:   v2796 = bool.icmp.i8.eq v2774, 0x1
      nextln:   v2797 = bool.and v2795, v2796
      nextln:   jumpif v2797, addr_0_block_702, addr_0_block_703
      check: addr_0_block_702: // preds: addr_0_block_701
      nextln:   jump addr_0_block_704
      check: addr_0_block_703: // preds: addr_0_block_701
      nextln:   jump addr_0_block_704
      check: addr_0_block_704: // preds: addr_0_block_702 addr_0_block_703
      nextln:   v2798 = bool.icmp.i8.ne v2762, 0x0
      nextln:   v2799 = bool.bitwise_not v2798
      nextln:   v2800 = bool.icmp.i8.ne v2762, 0x0
      nextln:   v2801 = bool.bitwise_not v2800
      nextln:   v2802 = bool.icmp.i8.eq v2774, 0x1
      nextln:   v2803 = bool.and v2801, v2802
      nextln:   jumpif v2733, addr_0_block_705, addr_0_block_706
      check: addr_0_block_705: // preds: addr_0_block_704
      nextln:   v2804 = bool.icmp.i8.eq v2762, 0x0
      nextln:   jump addr_0_block_707(0x1)
      check: addr_0_block_706: // preds: addr_0_block_704
      nextln:   jump addr_0_block_707(0x0)
      check: addr_0_block_707(v2805: bool): // preds: addr_0_block_705 addr_0_block_706
      nextln:   v2806 = bool.icmp.i8.eq v2762, 0x0
      nextln:   v2807 = bool.and v2734, v2806
      nextln:   jumpif v2807, addr_0_block_708, addr_0_block_709
      check: addr_0_block_708: // preds: addr_0_block_707
      nextln:   jump addr_0_block_710(0x1, 0x1)
      check: addr_0_block_709: // preds: addr_0_block_707
      nextln:   jump addr_0_block_710(0x0, 0x0)
      check: addr_0_block_710(v2808: bool, v2809: bool): // preds: addr_0_block_708 addr_0_block_709
      nextln:   v2810 = bool.or v2805, v2808
      nextln:   jumpif v2810, addr_0_block_711, addr_0_block_724
      check: addr_0_block_711: // preds: addr_0_block_710
      nextln:   v2811 = i52.unsigned_from_bits v2758
      nextln:   v2812 = int.modulo v2811, 0x8
      nextln:   v2813 = int.sub v2811, v2812
      nextln:   v2814 = i52.to_bits v2813
      nextln:   v2815 = bool.icmp.i52.eq v2758, v2814
      nextln:   v2816 = i64.load v2758
      nextln:   jumpif v2805, addr_0_block_712, addr_0_block_713
      nextln:   jump addr_0_block_725(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v2816, v2735, v2736, v2737, v2738, v2739, v2740, v2741, v2742, v2743, v2744, v2745, v2746, v2747, v2748, v2749, v2750, v2751, v2752, v2753, v2754, v2755, v2756, v2757, v2758, v2759, v2760, 0x0, 0x0)
      check: addr_0_block_712: // no preds!
      nextln:   jump addr_0_block_714
      check: addr_0_block_713: // no preds!
      nextln:   jump addr_0_block_714
      check: addr_0_block_714: // preds: addr_0_block_712 addr_0_block_713
      nextln:   jumpif v2808, addr_0_block_715, addr_0_block_716
      check: addr_0_block_715: // preds: addr_0_block_714
      nextln:   jump addr_0_block_717
      check: addr_0_block_716: // preds: addr_0_block_714
      nextln:   jump addr_0_block_717
      check: addr_0_block_717: // preds: addr_0_block_715 addr_0_block_716
      nextln:   v2986 = i52.unsigned_from_bits v2758
      nextln:   v2987 = int.modulo v2986, 0x8
      nextln:   v2988 = int.sub v2986, v2987
      nextln:   v2989 = i52.to_bits v2988
      nextln:   v2990 = bool.icmp.i52.eq v2758, v2989
      nextln:   v2991 = bool.icmp.i52.eq v2758, 0x13000000
      nextln:   jumpif v2991, addr_0_block_718, addr_0_block_722
      check: addr_0_block_718: // preds: addr_0_block_717
      nextln:   v2992 = i64.unsigned_from_bits v2816
      nextln:   v2993 = bool.icmp.int.eq v2992, 0x4
      nextln:   jumpif v2993, addr_0_block_719, addr_0_block_720
      nextln:   jump addr_0_block_723
      check: addr_0_block_719: // no preds!
      nextln:   jump addr_0_block_721
      check: addr_0_block_720: // no preds!
      nextln:   v2994 = i8.trunc.i64 v2816
      nextln:   v2995 = i8.unsigned_from_bits v2994
      nextln:   jump addr_0_block_721
      check: addr_0_block_721: // preds: addr_0_block_719 addr_0_block_720
      check: addr_0_block_722: // preds: addr_0_block_717
      nextln:   store.i64 v2816, v2758
      nextln:   jump addr_0_block_723
      check: addr_0_block_723: // preds: addr_0_block_718 addr_0_block_722
      check: addr_0_block_724: // preds: addr_0_block_710
      nextln:   jump addr_0_block_725(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_725(v2817: i8, v2818: i1, v2819: i16, v2820: i8, v2821: bool, v2822: bool, v2823: bool, v2824: int, v2825: i64, v2826: i8, v2827: i8, v2828: i52, v2829: i1, v2830: bool, v2831: bool, v2832: int, v2833: i1, v2834: bool, v2835: i4, v2836: i2, v2837: i4, v2838: i8, v2839: i8, v2840: i2, v2841: i2, v2842: bool, v2843: i2, v2844: i2, v2845: bool, v2846: bool, v2847: bool, v2848: bool, v2849: i52, v2850: i1, v2851: i64, v2852: i2, v2853: bool): // preds: addr_0_block_711 addr_0_block_724
      nextln:   v2854 = bool.icmp.i8.ne v2762, 0x0
      nextln:   v2855 = bool.bitwise_not v2854
      nextln:   v2856 = bool.and v2855, 0x1
      nextln:   v2857 = bool.icmp.i8.ne v2762, 0x0
      nextln:   v2858 = bool.bitwise_not v2857
      nextln:   v2859 = bool.and 0x1, v2858
      nextln:   jumpif v2859, addr_0_block_726, addr_0_block_727
      check: addr_0_block_726: // preds: addr_0_block_725
      nextln:   jump addr_0_block_728
      check: addr_0_block_727: // preds: addr_0_block_725
      nextln:   jump addr_0_block_728
      check: addr_0_block_728: // preds: addr_0_block_726 addr_0_block_727
      nextln:   v2860 = bool.icmp.i8.ne v2762, 0x0
      nextln:   jumpif v2860, addr_0_block_729, addr_0_block_730
      check: addr_0_block_729: // preds: addr_0_block_728
      nextln:   jump addr_0_block_731
      check: addr_0_block_730: // preds: addr_0_block_728
      nextln:   jump addr_0_block_731
      check: addr_0_block_731: // preds: addr_0_block_729 addr_0_block_730
      nextln:   jumpif v2783, addr_0_block_732, addr_0_block_733
      check: addr_0_block_732: // preds: addr_0_block_731
      nextln:   jump addr_0_block_734
      check: addr_0_block_733: // preds: addr_0_block_731
      nextln:   jump addr_0_block_734
      check: addr_0_block_734: // preds: addr_0_block_732 addr_0_block_733
      nextln:   v2861 = i52.unsigned_from_bits v2785
      nextln:   v2862 = int.modulo v2861, 0x1
      nextln:   v2863 = int.sub v2861, v2862
      nextln:   v2864 = i52.to_bits v2863
      nextln:   v2865 = bool.icmp.i52.eq v2785, v2864
      nextln:   v2866 = bool.icmp.i52.eq v2785, 0x13000000
      nextln:   jumpif v2866, addr_0_block_735, addr_0_block_739
      check: addr_0_block_735: // preds: addr_0_block_734
      nextln:   v2867 = i8.unsigned_from_bits v2712
      nextln:   v2868 = bool.icmp.int.eq v2867, 0x4
      nextln:   jumpif v2868, addr_0_block_736, addr_0_block_737
      nextln:   jump addr_0_block_740
      check: addr_0_block_736: // no preds!
      nextln:   jump addr_0_block_738
      check: addr_0_block_737: // no preds!
      nextln:   v2996 = i8.unsigned_from_bits v2712
      nextln:   jump addr_0_block_738
      check: addr_0_block_738: // preds: addr_0_block_736 addr_0_block_737
      check: addr_0_block_739: // preds: addr_0_block_734
      nextln:   store.i8 v2712, v2785
      nextln:   jump addr_0_block_740
      check: addr_0_block_740: // preds: addr_0_block_735 addr_0_block_739
      check: addr_0_block_741: // preds: addr_0_block_392
      nextln:   v50 = i64.unsigned_from_bits v30
      nextln:   v51 = int.modulo v50, 0x8
      nextln:   v52 = int.sub v50, v51
      nextln:   v53 = i64.to_bits v52
      nextln:   v54 = bool.icmp.i64.eq v30, v53
      nextln:   v55 = i64.lshr v30, 0x30
      nextln:   v56 = i16.trunc.i64 v55
      nextln:   v57 = bool.icmp.i16.eq v56, 0x0
      nextln:   v58 = bool.bitwise_not v57
      nextln:   jumpif v58, addr_0_block_742, addr_0_block_743
      nextln:   jump addr_0_block_785(v35, 0x0)
      check: addr_0_block_742: // no preds!
      nextln:   jump addr_0_block_744(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_745(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_743: // no preds!
      nextln:   jump addr_0_block_744(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_744(v3143: i52, v3144: int, v3145: bool, v3146: bool): // preds: addr_0_block_743
      nextln:   v3147 = i52.trunc.i64 v30
      nextln:   jump addr_0_block_745(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v3147, 0x1, 0x0)
      check: addr_0_block_745(v2997: i3, v2998: i1, v2999: i1, v3000: i1, v3001: i1, v3002: i4, v3003: i1, v3004: bool, v3005: int, v3006: int, v3007: bool, v3008: bool, v3009: i8, v3010: i8, v3011: i52, v3012: i1, v3013: bool, v3014: bool, v3015: int, v3016: i1, v3017: bool, v3018: i4, v3019: i2, v3020: i4, v3021: i8, v3022: i8, v3023: i2, v3024: i2, v3025: bool, v3026: i2, v3027: i2, v3028: bool, v3029: bool, v3030: bool, v3031: bool, v3032: i52, v3033: i1, v3034: i64, v3035: i1, v3036: i8, v3037: i8, v3038: i52, v3039: i1, v3040: bool, v3041: bool, v3042: int, v3043: i1, v3044: bool, v3045: i4, v3046: i2, v3047: i4, v3048: i8, v3049: i8, v3050: i2, v3051: i2, v3052: bool, v3053: i2, v3054: i2, v3055: bool, v3056: bool, v3057: bool, v3058: bool, v3059: i52, v3060: i1, v3061: i64): // preds: addr_0_block_742 addr_0_block_744
      nextln:   v3062 = bool.icmp.i8.ne v3036, 0x0
      nextln:   v3063 = bool.bitwise_not v3062
      nextln:   v3064 = bool.bitwise_not v35
      nextln:   v3065 = bool.and v3064, 0x1
      nextln:   v3066 = bool.or v3065, 0x0
      nextln:   v3067 = bool.icmp.i8.ne v3036, 0x0
      nextln:   v3068 = bool.bitwise_not v3067
      nextln:   v3069 = bool.and v3066, v3068
      nextln:   v3070 = bool.icmp.i8.eq v3048, 0x1
      nextln:   v3071 = bool.and v3069, v3070
      nextln:   jumpif v3071, addr_0_block_746, addr_0_block_747
      check: addr_0_block_746: // preds: addr_0_block_745
      nextln:   jump addr_0_block_748
      check: addr_0_block_747: // preds: addr_0_block_745
      nextln:   jump addr_0_block_748
      check: addr_0_block_748: // preds: addr_0_block_746 addr_0_block_747
      nextln:   v3072 = bool.icmp.i8.ne v3036, 0x0
      nextln:   v3073 = bool.bitwise_not v3072
      nextln:   v3074 = bool.icmp.i8.ne v3036, 0x0
      nextln:   v3075 = bool.bitwise_not v3074
      nextln:   v3076 = bool.icmp.i8.eq v3048, 0x1
      nextln:   v3077 = bool.and v3075, v3076
      nextln:   jumpif v3007, addr_0_block_749, addr_0_block_750
      check: addr_0_block_749: // preds: addr_0_block_748
      nextln:   v3078 = bool.icmp.i8.eq v3036, 0x0
      nextln:   jump addr_0_block_751(0x1)
      check: addr_0_block_750: // preds: addr_0_block_748
      nextln:   jump addr_0_block_751(0x0)
      check: addr_0_block_751(v3079: bool): // preds: addr_0_block_749 addr_0_block_750
      nextln:   v3080 = bool.icmp.i8.eq v3036, 0x0
      nextln:   v3081 = bool.and v3008, v3080
      nextln:   jumpif v3081, addr_0_block_752, addr_0_block_753
      check: addr_0_block_752: // preds: addr_0_block_751
      nextln:   jump addr_0_block_754(0x1, 0x1)
      check: addr_0_block_753: // preds: addr_0_block_751
      nextln:   jump addr_0_block_754(0x0, 0x0)
      check: addr_0_block_754(v3082: bool, v3083: bool): // preds: addr_0_block_752 addr_0_block_753
      nextln:   v3084 = bool.or v3079, v3082
      nextln:   jumpif v3084, addr_0_block_755, addr_0_block_768
      check: addr_0_block_755: // preds: addr_0_block_754
      nextln:   v3085 = i52.unsigned_from_bits v3032
      nextln:   v3086 = int.modulo v3085, 0x8
      nextln:   v3087 = int.sub v3085, v3086
      nextln:   v3088 = i52.to_bits v3087
      nextln:   v3089 = bool.icmp.i52.eq v3032, v3088
      nextln:   v3090 = i64.load v3032
      nextln:   jumpif v3079, addr_0_block_756, addr_0_block_757
      nextln:   jump addr_0_block_769(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v3090, v3009, v3010, v3011, v3012, v3013, v3014, v3015, v3016, v3017, v3018, v3019, v3020, v3021, v3022, v3023, v3024, v3025, v3026, v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, 0x0, 0x0)
      check: addr_0_block_756: // no preds!
      nextln:   jump addr_0_block_758
      check: addr_0_block_757: // no preds!
      nextln:   jump addr_0_block_758
      check: addr_0_block_758: // preds: addr_0_block_756 addr_0_block_757
      nextln:   jumpif v3082, addr_0_block_759, addr_0_block_760
      check: addr_0_block_759: // preds: addr_0_block_758
      nextln:   jump addr_0_block_761
      check: addr_0_block_760: // preds: addr_0_block_758
      nextln:   jump addr_0_block_761
      check: addr_0_block_761: // preds: addr_0_block_759 addr_0_block_760
      nextln:   v3148 = i52.unsigned_from_bits v3032
      nextln:   v3149 = int.modulo v3148, 0x8
      nextln:   v3150 = int.sub v3148, v3149
      nextln:   v3151 = i52.to_bits v3150
      nextln:   v3152 = bool.icmp.i52.eq v3032, v3151
      nextln:   v3153 = bool.icmp.i52.eq v3032, 0x13000000
      nextln:   jumpif v3153, addr_0_block_762, addr_0_block_766
      check: addr_0_block_762: // preds: addr_0_block_761
      nextln:   v3154 = i64.unsigned_from_bits v3090
      nextln:   v3155 = bool.icmp.int.eq v3154, 0x4
      nextln:   jumpif v3155, addr_0_block_763, addr_0_block_764
      nextln:   jump addr_0_block_767
      check: addr_0_block_763: // no preds!
      nextln:   jump addr_0_block_765
      check: addr_0_block_764: // no preds!
      nextln:   v3156 = i8.trunc.i64 v3090
      nextln:   v3157 = i8.unsigned_from_bits v3156
      nextln:   jump addr_0_block_765
      check: addr_0_block_765: // preds: addr_0_block_763 addr_0_block_764
      check: addr_0_block_766: // preds: addr_0_block_761
      nextln:   store.i64 v3090, v3032
      nextln:   jump addr_0_block_767
      check: addr_0_block_767: // preds: addr_0_block_762 addr_0_block_766
      check: addr_0_block_768: // preds: addr_0_block_754
      nextln:   jump addr_0_block_769(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_769(v3091: i8, v3092: i1, v3093: i16, v3094: i8, v3095: bool, v3096: bool, v3097: bool, v3098: int, v3099: i64, v3100: i8, v3101: i8, v3102: i52, v3103: i1, v3104: bool, v3105: bool, v3106: int, v3107: i1, v3108: bool, v3109: i4, v3110: i2, v3111: i4, v3112: i8, v3113: i8, v3114: i2, v3115: i2, v3116: bool, v3117: i2, v3118: i2, v3119: bool, v3120: bool, v3121: bool, v3122: bool, v3123: i52, v3124: i1, v3125: i64, v3126: i2, v3127: bool): // preds: addr_0_block_755 addr_0_block_768
      nextln:   v3128 = bool.icmp.i8.ne v3036, 0x0
      nextln:   v3129 = bool.bitwise_not v3128
      nextln:   v3130 = bool.and v3129, 0x1
      nextln:   v3131 = bool.icmp.i8.ne v3036, 0x0
      nextln:   v3132 = bool.bitwise_not v3131
      nextln:   v3133 = bool.and 0x1, v3132
      nextln:   jumpif v3133, addr_0_block_770, addr_0_block_771
      check: addr_0_block_770: // preds: addr_0_block_769
      nextln:   jump addr_0_block_772
      check: addr_0_block_771: // preds: addr_0_block_769
      nextln:   jump addr_0_block_772
      check: addr_0_block_772: // preds: addr_0_block_770 addr_0_block_771
      nextln:   v3134 = bool.icmp.i8.ne v3036, 0x0
      nextln:   jumpif v3134, addr_0_block_773, addr_0_block_774
      check: addr_0_block_773: // preds: addr_0_block_772
      nextln:   jump addr_0_block_775
      check: addr_0_block_774: // preds: addr_0_block_772
      nextln:   jump addr_0_block_775
      check: addr_0_block_775: // preds: addr_0_block_773 addr_0_block_774
      nextln:   jumpif v3057, addr_0_block_776, addr_0_block_777
      check: addr_0_block_776: // preds: addr_0_block_775
      nextln:   jump addr_0_block_778
      check: addr_0_block_777: // preds: addr_0_block_775
      nextln:   jump addr_0_block_778
      check: addr_0_block_778: // preds: addr_0_block_776 addr_0_block_777
      nextln:   v3135 = i52.unsigned_from_bits v3059
      nextln:   v3136 = int.modulo v3135, 0x8
      nextln:   v3137 = int.sub v3135, v3136
      nextln:   v3138 = i52.to_bits v3137
      nextln:   v3139 = bool.icmp.i52.eq v3059, v3138
      nextln:   v3140 = bool.icmp.i52.eq v3059, 0x13000000
      nextln:   jumpif v3140, addr_0_block_779, addr_0_block_783
      check: addr_0_block_779: // preds: addr_0_block_778
      nextln:   v3141 = i64.unsigned_from_bits v9
      nextln:   v3142 = bool.icmp.int.eq v3141, 0x4
      nextln:   jumpif v3142, addr_0_block_780, addr_0_block_781
      nextln:   jump addr_0_block_784
      check: addr_0_block_780: // no preds!
      nextln:   jump addr_0_block_782
      check: addr_0_block_781: // no preds!
      nextln:   v3158 = i8.trunc.i64 v9
      nextln:   v3159 = i8.unsigned_from_bits v3158
      nextln:   jump addr_0_block_782
      check: addr_0_block_782: // preds: addr_0_block_780 addr_0_block_781
      check: addr_0_block_783: // preds: addr_0_block_778
      nextln:   store.i64 v9, v3059
      nextln:   jump addr_0_block_784
      check: addr_0_block_784: // preds: addr_0_block_779 addr_0_block_783
      check: addr_0_block_785(v48: i64, v49: i8): // preds: addr_0_block_393 addr_0_block_741
