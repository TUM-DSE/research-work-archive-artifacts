tests:
- name: str_1
  bytes: [0x00, 0x24, 0x00, 0xf8]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x0"
      nextln:   v1 = i64.read_reg "x0"
      nextln:   v2 = i64.unsigned_from_bits v0
      nextln:   v3 = int.modulo v2, 0x8
      nextln:   v4 = int.sub v2, v3
      nextln:   v5 = i64.to_bits v4
      nextln:   v6 = bool.icmp.i64.eq v0, v5
      nextln:   v7 = bool.bitwise_not v6
      nextln:   v8 = bool.bitwise_not v6
      nextln:   jumpif v8, addr_0_block_0, addr_0_block_348
      check: addr_0_block_0: // preds: entry
      nextln:   v9 = i8.trunc.i64 v1
      nextln:   v10 = i64.unsigned_from_bits v0
      nextln:   v11 = int.modulo v10, 0x1
      nextln:   v12 = int.sub v10, v11
      nextln:   v13 = i64.to_bits v12
      nextln:   v14 = bool.icmp.i64.eq v0, v13
      nextln:   v15 = i64.lshr v0, 0x30
      nextln:   v16 = i16.trunc.i64 v15
      nextln:   v17 = bool.icmp.i16.eq v16, 0x0
      nextln:   v18 = bool.bitwise_not v17
      nextln:   jumpif v18, addr_0_block_1, addr_0_block_2
      nextln:   jump addr_0_block_392(v178, v179)
      check: addr_0_block_1: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_2: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_3(v1321: i52, v1322: int, v1323: bool, v1324: bool): // preds: addr_0_block_2
      nextln:   v1325 = i52.trunc.i64 v0
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1325, 0x1, 0x0)
      check: addr_0_block_4(v31: i3, v32: i1, v33: i1, v34: i1, v35: i1, v36: i4, v37: i1, v38: bool, v39: int, v40: int, v41: bool, v42: bool, v43: i8, v44: i8, v45: i52, v46: i1, v47: bool, v48: bool, v49: int, v50: i1, v51: bool, v52: i4, v53: i2, v54: i4, v55: i8, v56: i8, v57: i2, v58: i2, v59: bool, v60: i2, v61: i2, v62: bool, v63: bool, v64: bool, v65: bool, v66: i52, v67: i1, v68: i64, v69: i1, v70: i8, v71: i8, v72: i52, v73: i1, v74: bool, v75: bool, v76: int, v77: i1, v78: bool, v79: i4, v80: i2, v81: i4, v82: i8, v83: i8, v84: i2, v85: i2, v86: bool, v87: i2, v88: i2, v89: bool, v90: bool, v91: bool, v92: bool, v93: i52, v94: i1, v95: i64): // preds: addr_0_block_1 addr_0_block_3
      nextln:   v96 = bool.icmp.i8.ne v70, 0x0
      nextln:   v97 = bool.bitwise_not v96
      nextln:   v98 = bool.bitwise_not v6
      nextln:   v99 = bool.and v98, 0x1
      nextln:   v100 = bool.or v99, 0x0
      nextln:   v101 = bool.icmp.i8.ne v70, 0x0
      nextln:   v102 = bool.bitwise_not v101
      nextln:   v103 = bool.and v100, v102
      nextln:   v104 = bool.icmp.i8.eq v82, 0x1
      nextln:   v105 = bool.and v103, v104
      nextln:   jumpif v105, addr_0_block_5, addr_0_block_6
      check: addr_0_block_5: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_6: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_7: // preds: addr_0_block_5 addr_0_block_6
      nextln:   v106 = bool.icmp.i8.ne v70, 0x0
      nextln:   v107 = bool.bitwise_not v106
      nextln:   v108 = bool.icmp.i8.ne v70, 0x0
      nextln:   v109 = bool.bitwise_not v108
      nextln:   v110 = bool.icmp.i8.eq v82, 0x1
      nextln:   v111 = bool.and v109, v110
      nextln:   jumpif v41, addr_0_block_8, addr_0_block_9
      check: addr_0_block_8: // preds: addr_0_block_7
      nextln:   v112 = bool.icmp.i8.eq v70, 0x0
      nextln:   jump addr_0_block_10(0x1)
      check: addr_0_block_9: // preds: addr_0_block_7
      nextln:   jump addr_0_block_10(0x0)
      check: addr_0_block_10(v113: bool): // preds: addr_0_block_8 addr_0_block_9
      nextln:   v114 = bool.icmp.i8.eq v70, 0x0
      nextln:   v115 = bool.and v42, v114
      nextln:   jumpif v115, addr_0_block_11, addr_0_block_12
      check: addr_0_block_11: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x1, 0x1)
      check: addr_0_block_12: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x0, 0x0)
      check: addr_0_block_13(v116: bool, v117: bool): // preds: addr_0_block_11 addr_0_block_12
      nextln:   v118 = bool.or v113, v116
      nextln:   jumpif v118, addr_0_block_14, addr_0_block_27
      check: addr_0_block_14: // preds: addr_0_block_13
      nextln:   v119 = i52.unsigned_from_bits v66
      nextln:   v120 = int.modulo v119, 0x8
      nextln:   v121 = int.sub v119, v120
      nextln:   v122 = i52.to_bits v121
      nextln:   v123 = bool.icmp.i52.eq v66, v122
      nextln:   v124 = i64.load v66
      nextln:   jumpif v113, addr_0_block_15, addr_0_block_16
      nextln:   jump addr_0_block_28(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v124, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, 0x0, 0x0)
      check: addr_0_block_15: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_16: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_17: // preds: addr_0_block_15 addr_0_block_16
      nextln:   jumpif v116, addr_0_block_18, addr_0_block_19
      check: addr_0_block_18: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_19: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_20: // preds: addr_0_block_18 addr_0_block_19
      nextln:   v1326 = i52.unsigned_from_bits v66
      nextln:   v1327 = int.modulo v1326, 0x8
      nextln:   v1328 = int.sub v1326, v1327
      nextln:   v1329 = i52.to_bits v1328
      nextln:   v1330 = bool.icmp.i52.eq v66, v1329
      nextln:   v1331 = bool.icmp.i52.eq v66, 0x13000000
      nextln:   jumpif v1331, addr_0_block_21, addr_0_block_25
      check: addr_0_block_21: // preds: addr_0_block_20
      nextln:   v1332 = i64.unsigned_from_bits v124
      nextln:   v1333 = bool.icmp.int.eq v1332, 0x4
      nextln:   jumpif v1333, addr_0_block_22, addr_0_block_23
      nextln:   jump addr_0_block_26
      check: addr_0_block_22: // no preds!
      nextln:   jump addr_0_block_24
      check: addr_0_block_23: // no preds!
      nextln:   v1334 = i8.trunc.i64 v124
      nextln:   v1335 = i8.unsigned_from_bits v1334
      nextln:   jump addr_0_block_24
      check: addr_0_block_24: // preds: addr_0_block_22 addr_0_block_23
      check: addr_0_block_25: // preds: addr_0_block_20
      nextln:   store.i64 v124, v66
      nextln:   jump addr_0_block_26
      check: addr_0_block_26: // preds: addr_0_block_21 addr_0_block_25
      check: addr_0_block_27: // preds: addr_0_block_13
      nextln:   jump addr_0_block_28(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_28(v125: i8, v126: i1, v127: i16, v128: i8, v129: bool, v130: bool, v131: bool, v132: int, v133: i64, v134: i8, v135: i8, v136: i52, v137: i1, v138: bool, v139: bool, v140: int, v141: i1, v142: bool, v143: i4, v144: i2, v145: i4, v146: i8, v147: i8, v148: i2, v149: i2, v150: bool, v151: i2, v152: i2, v153: bool, v154: bool, v155: bool, v156: bool, v157: i52, v158: i1, v159: i64, v160: i2, v161: bool): // preds: addr_0_block_14 addr_0_block_27
      nextln:   v162 = bool.icmp.i8.ne v70, 0x0
      nextln:   v163 = bool.bitwise_not v162
      nextln:   v164 = bool.and v163, 0x1
      nextln:   v165 = bool.icmp.i8.ne v70, 0x0
      nextln:   v166 = bool.bitwise_not v165
      nextln:   v167 = bool.and 0x1, v166
      nextln:   jumpif v167, addr_0_block_29, addr_0_block_30
      check: addr_0_block_29: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_30: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_31: // preds: addr_0_block_29 addr_0_block_30
      nextln:   v168 = bool.icmp.i8.ne v70, 0x0
      nextln:   jumpif v168, addr_0_block_32, addr_0_block_33
      check: addr_0_block_32: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_33: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_34: // preds: addr_0_block_32 addr_0_block_33
      nextln:   jumpif v91, addr_0_block_35, addr_0_block_36
      check: addr_0_block_35: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_36: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_37: // preds: addr_0_block_35 addr_0_block_36
      nextln:   v169 = i52.unsigned_from_bits v93
      nextln:   v170 = int.modulo v169, 0x1
      nextln:   v171 = int.sub v169, v170
      nextln:   v172 = i52.to_bits v171
      nextln:   v173 = bool.icmp.i52.eq v93, v172
      nextln:   v174 = bool.icmp.i52.eq v93, 0x13000000
      nextln:   jumpif v174, addr_0_block_38, addr_0_block_42
      check: addr_0_block_38: // preds: addr_0_block_37
      nextln:   v175 = i8.unsigned_from_bits v9
      nextln:   v176 = bool.icmp.int.eq v175, 0x4
      nextln:   jumpif v176, addr_0_block_39, addr_0_block_40
      nextln:   jump addr_0_block_43
      check: addr_0_block_39: // no preds!
      nextln:   jump addr_0_block_41
      check: addr_0_block_40: // no preds!
      nextln:   v1336 = i8.unsigned_from_bits v9
      nextln:   jump addr_0_block_41
      check: addr_0_block_41: // preds: addr_0_block_39 addr_0_block_40
      check: addr_0_block_42: // preds: addr_0_block_37
      nextln:   store.i8 v9, v93
      nextln:   jump addr_0_block_43
      check: addr_0_block_43: // preds: addr_0_block_38 addr_0_block_42
      nextln:   v177 = bool.bitwise_not v6
      nextln:   jumpif v177, addr_0_block_44, addr_0_block_45
      check: addr_0_block_44: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v6, 0xc)
      check: addr_0_block_45: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v6, 0x0)
      check: addr_0_block_46(v178: i64, v179: i8): // preds: addr_0_block_44 addr_0_block_45
      nextln:   v180 = i64.lshr v1, 0x8
      nextln:   v181 = i8.trunc.i64 v180
      nextln:   v182 = i64.wrapping_add v0, 0x1
      nextln:   v183 = i64.unsigned_from_bits v182
      nextln:   v184 = int.modulo v183, 0x1
      nextln:   v185 = int.sub v183, v184
      nextln:   v186 = i64.to_bits v185
      nextln:   v187 = bool.icmp.i64.eq v182, v186
      nextln:   v188 = i64.lshr v182, 0x30
      nextln:   v189 = i16.trunc.i64 v188
      nextln:   v190 = bool.icmp.i16.eq v189, 0x0
      nextln:   v191 = bool.bitwise_not v190
      nextln:   jumpif v191, addr_0_block_47, addr_0_block_48
      check: addr_0_block_47: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_48: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_49(v1316: i52, v1317: int, v1318: bool, v1319: bool): // preds: addr_0_block_48
      nextln:   v1320 = i52.trunc.i64 v182
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1320, 0x1, 0x0)
      check: addr_0_block_50(v192: i3, v193: i1, v194: i1, v195: i1, v196: i1, v197: i4, v198: i1, v199: bool, v200: int, v201: int, v202: bool, v203: bool, v204: i8, v205: i8, v206: i52, v207: i1, v208: bool, v209: bool, v210: int, v211: i1, v212: bool, v213: i4, v214: i2, v215: i4, v216: i8, v217: i8, v218: i2, v219: i2, v220: bool, v221: i2, v222: i2, v223: bool, v224: bool, v225: bool, v226: bool, v227: i52, v228: i1, v229: i64, v230: i1, v231: i8, v232: i8, v233: i52, v234: i1, v235: bool, v236: bool, v237: int, v238: i1, v239: bool, v240: i4, v241: i2, v242: i4, v243: i8, v244: i8, v245: i2, v246: i2, v247: bool, v248: i2, v249: i2, v250: bool, v251: bool, v252: bool, v253: bool, v254: i52, v255: i1, v256: i64): // preds: addr_0_block_47 addr_0_block_49
      nextln:   v257 = bool.icmp.i8.ne v231, 0x0
      nextln:   v258 = bool.bitwise_not v257
      nextln:   v259 = bool.bitwise_not v6
      nextln:   v260 = bool.and v259, 0x1
      nextln:   v261 = bool.or v260, 0x0
      nextln:   v262 = bool.icmp.i8.ne v231, 0x0
      nextln:   v263 = bool.bitwise_not v262
      nextln:   v264 = bool.and v261, v263
      nextln:   v265 = bool.icmp.i8.eq v243, 0x1
      nextln:   v266 = bool.and v264, v265
      nextln:   jumpif v266, addr_0_block_51, addr_0_block_52
      check: addr_0_block_51: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_52: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_53: // preds: addr_0_block_51 addr_0_block_52
      nextln:   v267 = bool.icmp.i8.ne v231, 0x0
      nextln:   v268 = bool.bitwise_not v267
      nextln:   v269 = bool.icmp.i8.ne v231, 0x0
      nextln:   v270 = bool.bitwise_not v269
      nextln:   v271 = bool.icmp.i8.eq v243, 0x1
      nextln:   v272 = bool.and v270, v271
      nextln:   jumpif v202, addr_0_block_54, addr_0_block_55
      check: addr_0_block_54: // preds: addr_0_block_53
      nextln:   v273 = bool.icmp.i8.eq v231, 0x0
      nextln:   jump addr_0_block_56(0x1)
      check: addr_0_block_55: // preds: addr_0_block_53
      nextln:   jump addr_0_block_56(0x0)
      check: addr_0_block_56(v274: bool): // preds: addr_0_block_54 addr_0_block_55
      nextln:   v275 = bool.icmp.i8.eq v231, 0x0
      nextln:   v276 = bool.and v203, v275
      nextln:   jumpif v276, addr_0_block_57, addr_0_block_58
      check: addr_0_block_57: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x1, 0x1)
      check: addr_0_block_58: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x0, 0x0)
      check: addr_0_block_59(v277: bool, v278: bool): // preds: addr_0_block_57 addr_0_block_58
      nextln:   v279 = bool.or v274, v277
      nextln:   jumpif v279, addr_0_block_60, addr_0_block_73
      check: addr_0_block_60: // preds: addr_0_block_59
      nextln:   v280 = i52.unsigned_from_bits v227
      nextln:   v281 = int.modulo v280, 0x8
      nextln:   v282 = int.sub v280, v281
      nextln:   v283 = i52.to_bits v282
      nextln:   v284 = bool.icmp.i52.eq v227, v283
      nextln:   v285 = i64.load v227
      nextln:   jumpif v274, addr_0_block_61, addr_0_block_62
      nextln:   jump addr_0_block_74(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v285, v204, v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, 0x0, 0x0)
      check: addr_0_block_61: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_62: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_63: // preds: addr_0_block_61 addr_0_block_62
      nextln:   jumpif v277, addr_0_block_64, addr_0_block_65
      check: addr_0_block_64: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_65: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_66: // preds: addr_0_block_64 addr_0_block_65
      nextln:   v1337 = i52.unsigned_from_bits v227
      nextln:   v1338 = int.modulo v1337, 0x8
      nextln:   v1339 = int.sub v1337, v1338
      nextln:   v1340 = i52.to_bits v1339
      nextln:   v1341 = bool.icmp.i52.eq v227, v1340
      nextln:   v1342 = bool.icmp.i52.eq v227, 0x13000000
      nextln:   jumpif v1342, addr_0_block_67, addr_0_block_71
      check: addr_0_block_67: // preds: addr_0_block_66
      nextln:   v1343 = i64.unsigned_from_bits v285
      nextln:   v1344 = bool.icmp.int.eq v1343, 0x4
      nextln:   jumpif v1344, addr_0_block_68, addr_0_block_69
      nextln:   jump addr_0_block_72
      check: addr_0_block_68: // no preds!
      nextln:   jump addr_0_block_70
      check: addr_0_block_69: // no preds!
      nextln:   v1345 = i8.trunc.i64 v285
      nextln:   v1346 = i8.unsigned_from_bits v1345
      nextln:   jump addr_0_block_70
      check: addr_0_block_70: // preds: addr_0_block_68 addr_0_block_69
      check: addr_0_block_71: // preds: addr_0_block_66
      nextln:   store.i64 v285, v227
      nextln:   jump addr_0_block_72
      check: addr_0_block_72: // preds: addr_0_block_67 addr_0_block_71
      check: addr_0_block_73: // preds: addr_0_block_59
      nextln:   jump addr_0_block_74(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_74(v286: i8, v287: i1, v288: i16, v289: i8, v290: bool, v291: bool, v292: bool, v293: int, v294: i64, v295: i8, v296: i8, v297: i52, v298: i1, v299: bool, v300: bool, v301: int, v302: i1, v303: bool, v304: i4, v305: i2, v306: i4, v307: i8, v308: i8, v309: i2, v310: i2, v311: bool, v312: i2, v313: i2, v314: bool, v315: bool, v316: bool, v317: bool, v318: i52, v319: i1, v320: i64, v321: i2, v322: bool): // preds: addr_0_block_60 addr_0_block_73
      nextln:   v323 = bool.icmp.i8.ne v231, 0x0
      nextln:   v324 = bool.bitwise_not v323
      nextln:   v325 = bool.and v324, 0x1
      nextln:   v326 = bool.icmp.i8.ne v231, 0x0
      nextln:   v327 = bool.bitwise_not v326
      nextln:   v328 = bool.and 0x1, v327
      nextln:   jumpif v328, addr_0_block_75, addr_0_block_76
      check: addr_0_block_75: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_76: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_77: // preds: addr_0_block_75 addr_0_block_76
      nextln:   v329 = bool.icmp.i8.ne v231, 0x0
      nextln:   jumpif v329, addr_0_block_78, addr_0_block_79
      check: addr_0_block_78: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_79: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_80: // preds: addr_0_block_78 addr_0_block_79
      nextln:   jumpif v252, addr_0_block_81, addr_0_block_82
      check: addr_0_block_81: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_82: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_83: // preds: addr_0_block_81 addr_0_block_82
      nextln:   v330 = i52.unsigned_from_bits v254
      nextln:   v331 = int.modulo v330, 0x1
      nextln:   v332 = int.sub v330, v331
      nextln:   v333 = i52.to_bits v332
      nextln:   v334 = bool.icmp.i52.eq v254, v333
      nextln:   v335 = bool.icmp.i52.eq v254, 0x13000000
      nextln:   jumpif v335, addr_0_block_84, addr_0_block_88
      check: addr_0_block_84: // preds: addr_0_block_83
      nextln:   v336 = i8.unsigned_from_bits v181
      nextln:   v337 = bool.icmp.int.eq v336, 0x4
      nextln:   jumpif v337, addr_0_block_85, addr_0_block_86
      nextln:   jump addr_0_block_89
      check: addr_0_block_85: // no preds!
      nextln:   jump addr_0_block_87
      check: addr_0_block_86: // no preds!
      nextln:   v1347 = i8.unsigned_from_bits v181
      nextln:   jump addr_0_block_87
      check: addr_0_block_87: // preds: addr_0_block_85 addr_0_block_86
      check: addr_0_block_88: // preds: addr_0_block_83
      nextln:   store.i8 v181, v254
      nextln:   jump addr_0_block_89
      check: addr_0_block_89: // preds: addr_0_block_84 addr_0_block_88
      nextln:   v338 = i64.lshr v1, 0x10
      nextln:   v339 = i8.trunc.i64 v338
      nextln:   v340 = i64.wrapping_add v0, 0x2
      nextln:   v341 = i64.unsigned_from_bits v340
      nextln:   v342 = int.modulo v341, 0x1
      nextln:   v343 = int.sub v341, v342
      nextln:   v344 = i64.to_bits v343
      nextln:   v345 = bool.icmp.i64.eq v340, v344
      nextln:   v346 = i64.lshr v340, 0x30
      nextln:   v347 = i16.trunc.i64 v346
      nextln:   v348 = bool.icmp.i16.eq v347, 0x0
      nextln:   v349 = bool.bitwise_not v348
      nextln:   jumpif v349, addr_0_block_90, addr_0_block_91
      check: addr_0_block_90: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_91: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_92(v1311: i52, v1312: int, v1313: bool, v1314: bool): // preds: addr_0_block_91
      nextln:   v1315 = i52.trunc.i64 v340
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1315, 0x1, 0x0)
      check: addr_0_block_93(v350: i3, v351: i1, v352: i1, v353: i1, v354: i1, v355: i4, v356: i1, v357: bool, v358: int, v359: int, v360: bool, v361: bool, v362: i8, v363: i8, v364: i52, v365: i1, v366: bool, v367: bool, v368: int, v369: i1, v370: bool, v371: i4, v372: i2, v373: i4, v374: i8, v375: i8, v376: i2, v377: i2, v378: bool, v379: i2, v380: i2, v381: bool, v382: bool, v383: bool, v384: bool, v385: i52, v386: i1, v387: i64, v388: i1, v389: i8, v390: i8, v391: i52, v392: i1, v393: bool, v394: bool, v395: int, v396: i1, v397: bool, v398: i4, v399: i2, v400: i4, v401: i8, v402: i8, v403: i2, v404: i2, v405: bool, v406: i2, v407: i2, v408: bool, v409: bool, v410: bool, v411: bool, v412: i52, v413: i1, v414: i64): // preds: addr_0_block_90 addr_0_block_92
      nextln:   v415 = bool.icmp.i8.ne v389, 0x0
      nextln:   v416 = bool.bitwise_not v415
      nextln:   v417 = bool.bitwise_not v6
      nextln:   v418 = bool.and v417, 0x1
      nextln:   v419 = bool.or v418, 0x0
      nextln:   v420 = bool.icmp.i8.ne v389, 0x0
      nextln:   v421 = bool.bitwise_not v420
      nextln:   v422 = bool.and v419, v421
      nextln:   v423 = bool.icmp.i8.eq v401, 0x1
      nextln:   v424 = bool.and v422, v423
      nextln:   jumpif v424, addr_0_block_94, addr_0_block_95
      check: addr_0_block_94: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_95: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_96: // preds: addr_0_block_94 addr_0_block_95
      nextln:   v425 = bool.icmp.i8.ne v389, 0x0
      nextln:   v426 = bool.bitwise_not v425
      nextln:   v427 = bool.icmp.i8.ne v389, 0x0
      nextln:   v428 = bool.bitwise_not v427
      nextln:   v429 = bool.icmp.i8.eq v401, 0x1
      nextln:   v430 = bool.and v428, v429
      nextln:   jumpif v360, addr_0_block_97, addr_0_block_98
      check: addr_0_block_97: // preds: addr_0_block_96
      nextln:   v431 = bool.icmp.i8.eq v389, 0x0
      nextln:   jump addr_0_block_99(0x1)
      check: addr_0_block_98: // preds: addr_0_block_96
      nextln:   jump addr_0_block_99(0x0)
      check: addr_0_block_99(v432: bool): // preds: addr_0_block_97 addr_0_block_98
      nextln:   v433 = bool.icmp.i8.eq v389, 0x0
      nextln:   v434 = bool.and v361, v433
      nextln:   jumpif v434, addr_0_block_100, addr_0_block_101
      check: addr_0_block_100: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x1, 0x1)
      check: addr_0_block_101: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x0, 0x0)
      check: addr_0_block_102(v435: bool, v436: bool): // preds: addr_0_block_100 addr_0_block_101
      nextln:   v437 = bool.or v432, v435
      nextln:   jumpif v437, addr_0_block_103, addr_0_block_116
      check: addr_0_block_103: // preds: addr_0_block_102
      nextln:   v438 = i52.unsigned_from_bits v385
      nextln:   v439 = int.modulo v438, 0x8
      nextln:   v440 = int.sub v438, v439
      nextln:   v441 = i52.to_bits v440
      nextln:   v442 = bool.icmp.i52.eq v385, v441
      nextln:   v443 = i64.load v385
      nextln:   jumpif v432, addr_0_block_104, addr_0_block_105
      nextln:   jump addr_0_block_117(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v443, v362, v363, v364, v365, v366, v367, v368, v369, v370, v371, v372, v373, v374, v375, v376, v377, v378, v379, v380, v381, v382, v383, v384, v385, v386, v387, 0x0, 0x0)
      check: addr_0_block_104: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_105: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_106: // preds: addr_0_block_104 addr_0_block_105
      nextln:   jumpif v435, addr_0_block_107, addr_0_block_108
      check: addr_0_block_107: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_108: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_109: // preds: addr_0_block_107 addr_0_block_108
      nextln:   v1348 = i52.unsigned_from_bits v385
      nextln:   v1349 = int.modulo v1348, 0x8
      nextln:   v1350 = int.sub v1348, v1349
      nextln:   v1351 = i52.to_bits v1350
      nextln:   v1352 = bool.icmp.i52.eq v385, v1351
      nextln:   v1353 = bool.icmp.i52.eq v385, 0x13000000
      nextln:   jumpif v1353, addr_0_block_110, addr_0_block_114
      check: addr_0_block_110: // preds: addr_0_block_109
      nextln:   v1354 = i64.unsigned_from_bits v443
      nextln:   v1355 = bool.icmp.int.eq v1354, 0x4
      nextln:   jumpif v1355, addr_0_block_111, addr_0_block_112
      nextln:   jump addr_0_block_115
      check: addr_0_block_111: // no preds!
      nextln:   jump addr_0_block_113
      check: addr_0_block_112: // no preds!
      nextln:   v1356 = i8.trunc.i64 v443
      nextln:   v1357 = i8.unsigned_from_bits v1356
      nextln:   jump addr_0_block_113
      check: addr_0_block_113: // preds: addr_0_block_111 addr_0_block_112
      check: addr_0_block_114: // preds: addr_0_block_109
      nextln:   store.i64 v443, v385
      nextln:   jump addr_0_block_115
      check: addr_0_block_115: // preds: addr_0_block_110 addr_0_block_114
      check: addr_0_block_116: // preds: addr_0_block_102
      nextln:   jump addr_0_block_117(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_117(v444: i8, v445: i1, v446: i16, v447: i8, v448: bool, v449: bool, v450: bool, v451: int, v452: i64, v453: i8, v454: i8, v455: i52, v456: i1, v457: bool, v458: bool, v459: int, v460: i1, v461: bool, v462: i4, v463: i2, v464: i4, v465: i8, v466: i8, v467: i2, v468: i2, v469: bool, v470: i2, v471: i2, v472: bool, v473: bool, v474: bool, v475: bool, v476: i52, v477: i1, v478: i64, v479: i2, v480: bool): // preds: addr_0_block_103 addr_0_block_116
      nextln:   v481 = bool.icmp.i8.ne v389, 0x0
      nextln:   v482 = bool.bitwise_not v481
      nextln:   v483 = bool.and v482, 0x1
      nextln:   v484 = bool.icmp.i8.ne v389, 0x0
      nextln:   v485 = bool.bitwise_not v484
      nextln:   v486 = bool.and 0x1, v485
      nextln:   jumpif v486, addr_0_block_118, addr_0_block_119
      check: addr_0_block_118: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_119: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_120: // preds: addr_0_block_118 addr_0_block_119
      nextln:   v487 = bool.icmp.i8.ne v389, 0x0
      nextln:   jumpif v487, addr_0_block_121, addr_0_block_122
      check: addr_0_block_121: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_122: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_123: // preds: addr_0_block_121 addr_0_block_122
      nextln:   jumpif v410, addr_0_block_124, addr_0_block_125
      check: addr_0_block_124: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_125: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_126: // preds: addr_0_block_124 addr_0_block_125
      nextln:   v488 = i52.unsigned_from_bits v412
      nextln:   v489 = int.modulo v488, 0x1
      nextln:   v490 = int.sub v488, v489
      nextln:   v491 = i52.to_bits v490
      nextln:   v492 = bool.icmp.i52.eq v412, v491
      nextln:   v493 = bool.icmp.i52.eq v412, 0x13000000
      nextln:   jumpif v493, addr_0_block_127, addr_0_block_131
      check: addr_0_block_127: // preds: addr_0_block_126
      nextln:   v494 = i8.unsigned_from_bits v339
      nextln:   v495 = bool.icmp.int.eq v494, 0x4
      nextln:   jumpif v495, addr_0_block_128, addr_0_block_129
      nextln:   jump addr_0_block_132
      check: addr_0_block_128: // no preds!
      nextln:   jump addr_0_block_130
      check: addr_0_block_129: // no preds!
      nextln:   v1358 = i8.unsigned_from_bits v339
      nextln:   jump addr_0_block_130
      check: addr_0_block_130: // preds: addr_0_block_128 addr_0_block_129
      check: addr_0_block_131: // preds: addr_0_block_126
      nextln:   store.i8 v339, v412
      nextln:   jump addr_0_block_132
      check: addr_0_block_132: // preds: addr_0_block_127 addr_0_block_131
      nextln:   v496 = i64.lshr v1, 0x18
      nextln:   v497 = i8.trunc.i64 v496
      nextln:   v498 = i64.wrapping_add v0, 0x3
      nextln:   v499 = i64.unsigned_from_bits v498
      nextln:   v500 = int.modulo v499, 0x1
      nextln:   v501 = int.sub v499, v500
      nextln:   v502 = i64.to_bits v501
      nextln:   v503 = bool.icmp.i64.eq v498, v502
      nextln:   v504 = i64.lshr v498, 0x30
      nextln:   v505 = i16.trunc.i64 v504
      nextln:   v506 = bool.icmp.i16.eq v505, 0x0
      nextln:   v507 = bool.bitwise_not v506
      nextln:   jumpif v507, addr_0_block_133, addr_0_block_134
      check: addr_0_block_133: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_134: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_135(v1306: i52, v1307: int, v1308: bool, v1309: bool): // preds: addr_0_block_134
      nextln:   v1310 = i52.trunc.i64 v498
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1310, 0x1, 0x0)
      check: addr_0_block_136(v508: i3, v509: i1, v510: i1, v511: i1, v512: i1, v513: i4, v514: i1, v515: bool, v516: int, v517: int, v518: bool, v519: bool, v520: i8, v521: i8, v522: i52, v523: i1, v524: bool, v525: bool, v526: int, v527: i1, v528: bool, v529: i4, v530: i2, v531: i4, v532: i8, v533: i8, v534: i2, v535: i2, v536: bool, v537: i2, v538: i2, v539: bool, v540: bool, v541: bool, v542: bool, v543: i52, v544: i1, v545: i64, v546: i1, v547: i8, v548: i8, v549: i52, v550: i1, v551: bool, v552: bool, v553: int, v554: i1, v555: bool, v556: i4, v557: i2, v558: i4, v559: i8, v560: i8, v561: i2, v562: i2, v563: bool, v564: i2, v565: i2, v566: bool, v567: bool, v568: bool, v569: bool, v570: i52, v571: i1, v572: i64): // preds: addr_0_block_133 addr_0_block_135
      nextln:   v573 = bool.icmp.i8.ne v547, 0x0
      nextln:   v574 = bool.bitwise_not v573
      nextln:   v575 = bool.bitwise_not v6
      nextln:   v576 = bool.and v575, 0x1
      nextln:   v577 = bool.or v576, 0x0
      nextln:   v578 = bool.icmp.i8.ne v547, 0x0
      nextln:   v579 = bool.bitwise_not v578
      nextln:   v580 = bool.and v577, v579
      nextln:   v581 = bool.icmp.i8.eq v559, 0x1
      nextln:   v582 = bool.and v580, v581
      nextln:   jumpif v582, addr_0_block_137, addr_0_block_138
      check: addr_0_block_137: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_138: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_139: // preds: addr_0_block_137 addr_0_block_138
      nextln:   v583 = bool.icmp.i8.ne v547, 0x0
      nextln:   v584 = bool.bitwise_not v583
      nextln:   v585 = bool.icmp.i8.ne v547, 0x0
      nextln:   v586 = bool.bitwise_not v585
      nextln:   v587 = bool.icmp.i8.eq v559, 0x1
      nextln:   v588 = bool.and v586, v587
      nextln:   jumpif v518, addr_0_block_140, addr_0_block_141
      check: addr_0_block_140: // preds: addr_0_block_139
      nextln:   v589 = bool.icmp.i8.eq v547, 0x0
      nextln:   jump addr_0_block_142(0x1)
      check: addr_0_block_141: // preds: addr_0_block_139
      nextln:   jump addr_0_block_142(0x0)
      check: addr_0_block_142(v590: bool): // preds: addr_0_block_140 addr_0_block_141
      nextln:   v591 = bool.icmp.i8.eq v547, 0x0
      nextln:   v592 = bool.and v519, v591
      nextln:   jumpif v592, addr_0_block_143, addr_0_block_144
      check: addr_0_block_143: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x1, 0x1)
      check: addr_0_block_144: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x0, 0x0)
      check: addr_0_block_145(v593: bool, v594: bool): // preds: addr_0_block_143 addr_0_block_144
      nextln:   v595 = bool.or v590, v593
      nextln:   jumpif v595, addr_0_block_146, addr_0_block_159
      check: addr_0_block_146: // preds: addr_0_block_145
      nextln:   v596 = i52.unsigned_from_bits v543
      nextln:   v597 = int.modulo v596, 0x8
      nextln:   v598 = int.sub v596, v597
      nextln:   v599 = i52.to_bits v598
      nextln:   v600 = bool.icmp.i52.eq v543, v599
      nextln:   v601 = i64.load v543
      nextln:   jumpif v590, addr_0_block_147, addr_0_block_148
      nextln:   jump addr_0_block_160(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v601, v520, v521, v522, v523, v524, v525, v526, v527, v528, v529, v530, v531, v532, v533, v534, v535, v536, v537, v538, v539, v540, v541, v542, v543, v544, v545, 0x0, 0x0)
      check: addr_0_block_147: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_148: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_149: // preds: addr_0_block_147 addr_0_block_148
      nextln:   jumpif v593, addr_0_block_150, addr_0_block_151
      check: addr_0_block_150: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_151: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_152: // preds: addr_0_block_150 addr_0_block_151
      nextln:   v1359 = i52.unsigned_from_bits v543
      nextln:   v1360 = int.modulo v1359, 0x8
      nextln:   v1361 = int.sub v1359, v1360
      nextln:   v1362 = i52.to_bits v1361
      nextln:   v1363 = bool.icmp.i52.eq v543, v1362
      nextln:   v1364 = bool.icmp.i52.eq v543, 0x13000000
      nextln:   jumpif v1364, addr_0_block_153, addr_0_block_157
      check: addr_0_block_153: // preds: addr_0_block_152
      nextln:   v1365 = i64.unsigned_from_bits v601
      nextln:   v1366 = bool.icmp.int.eq v1365, 0x4
      nextln:   jumpif v1366, addr_0_block_154, addr_0_block_155
      nextln:   jump addr_0_block_158
      check: addr_0_block_154: // no preds!
      nextln:   jump addr_0_block_156
      check: addr_0_block_155: // no preds!
      nextln:   v1367 = i8.trunc.i64 v601
      nextln:   v1368 = i8.unsigned_from_bits v1367
      nextln:   jump addr_0_block_156
      check: addr_0_block_156: // preds: addr_0_block_154 addr_0_block_155
      check: addr_0_block_157: // preds: addr_0_block_152
      nextln:   store.i64 v601, v543
      nextln:   jump addr_0_block_158
      check: addr_0_block_158: // preds: addr_0_block_153 addr_0_block_157
      check: addr_0_block_159: // preds: addr_0_block_145
      nextln:   jump addr_0_block_160(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_160(v602: i8, v603: i1, v604: i16, v605: i8, v606: bool, v607: bool, v608: bool, v609: int, v610: i64, v611: i8, v612: i8, v613: i52, v614: i1, v615: bool, v616: bool, v617: int, v618: i1, v619: bool, v620: i4, v621: i2, v622: i4, v623: i8, v624: i8, v625: i2, v626: i2, v627: bool, v628: i2, v629: i2, v630: bool, v631: bool, v632: bool, v633: bool, v634: i52, v635: i1, v636: i64, v637: i2, v638: bool): // preds: addr_0_block_146 addr_0_block_159
      nextln:   v639 = bool.icmp.i8.ne v547, 0x0
      nextln:   v640 = bool.bitwise_not v639
      nextln:   v641 = bool.and v640, 0x1
      nextln:   v642 = bool.icmp.i8.ne v547, 0x0
      nextln:   v643 = bool.bitwise_not v642
      nextln:   v644 = bool.and 0x1, v643
      nextln:   jumpif v644, addr_0_block_161, addr_0_block_162
      check: addr_0_block_161: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_162: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_163: // preds: addr_0_block_161 addr_0_block_162
      nextln:   v645 = bool.icmp.i8.ne v547, 0x0
      nextln:   jumpif v645, addr_0_block_164, addr_0_block_165
      check: addr_0_block_164: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_165: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_166: // preds: addr_0_block_164 addr_0_block_165
      nextln:   jumpif v568, addr_0_block_167, addr_0_block_168
      check: addr_0_block_167: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_168: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_169: // preds: addr_0_block_167 addr_0_block_168
      nextln:   v646 = i52.unsigned_from_bits v570
      nextln:   v647 = int.modulo v646, 0x1
      nextln:   v648 = int.sub v646, v647
      nextln:   v649 = i52.to_bits v648
      nextln:   v650 = bool.icmp.i52.eq v570, v649
      nextln:   v651 = bool.icmp.i52.eq v570, 0x13000000
      nextln:   jumpif v651, addr_0_block_170, addr_0_block_174
      check: addr_0_block_170: // preds: addr_0_block_169
      nextln:   v652 = i8.unsigned_from_bits v497
      nextln:   v653 = bool.icmp.int.eq v652, 0x4
      nextln:   jumpif v653, addr_0_block_171, addr_0_block_172
      nextln:   jump addr_0_block_175
      check: addr_0_block_171: // no preds!
      nextln:   jump addr_0_block_173
      check: addr_0_block_172: // no preds!
      nextln:   v1369 = i8.unsigned_from_bits v497
      nextln:   jump addr_0_block_173
      check: addr_0_block_173: // preds: addr_0_block_171 addr_0_block_172
      check: addr_0_block_174: // preds: addr_0_block_169
      nextln:   store.i8 v497, v570
      nextln:   jump addr_0_block_175
      check: addr_0_block_175: // preds: addr_0_block_170 addr_0_block_174
      nextln:   v654 = i64.lshr v1, 0x20
      nextln:   v655 = i8.trunc.i64 v654
      nextln:   v656 = i64.wrapping_add v0, 0x4
      nextln:   v657 = i64.unsigned_from_bits v656
      nextln:   v658 = int.modulo v657, 0x1
      nextln:   v659 = int.sub v657, v658
      nextln:   v660 = i64.to_bits v659
      nextln:   v661 = bool.icmp.i64.eq v656, v660
      nextln:   v662 = i64.lshr v656, 0x30
      nextln:   v663 = i16.trunc.i64 v662
      nextln:   v664 = bool.icmp.i16.eq v663, 0x0
      nextln:   v665 = bool.bitwise_not v664
      nextln:   jumpif v665, addr_0_block_176, addr_0_block_177
      check: addr_0_block_176: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_177: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_178(v1301: i52, v1302: int, v1303: bool, v1304: bool): // preds: addr_0_block_177
      nextln:   v1305 = i52.trunc.i64 v656
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1305, 0x1, 0x0)
      check: addr_0_block_179(v666: i3, v667: i1, v668: i1, v669: i1, v670: i1, v671: i4, v672: i1, v673: bool, v674: int, v675: int, v676: bool, v677: bool, v678: i8, v679: i8, v680: i52, v681: i1, v682: bool, v683: bool, v684: int, v685: i1, v686: bool, v687: i4, v688: i2, v689: i4, v690: i8, v691: i8, v692: i2, v693: i2, v694: bool, v695: i2, v696: i2, v697: bool, v698: bool, v699: bool, v700: bool, v701: i52, v702: i1, v703: i64, v704: i1, v705: i8, v706: i8, v707: i52, v708: i1, v709: bool, v710: bool, v711: int, v712: i1, v713: bool, v714: i4, v715: i2, v716: i4, v717: i8, v718: i8, v719: i2, v720: i2, v721: bool, v722: i2, v723: i2, v724: bool, v725: bool, v726: bool, v727: bool, v728: i52, v729: i1, v730: i64): // preds: addr_0_block_176 addr_0_block_178
      nextln:   v731 = bool.icmp.i8.ne v705, 0x0
      nextln:   v732 = bool.bitwise_not v731
      nextln:   v733 = bool.bitwise_not v6
      nextln:   v734 = bool.and v733, 0x1
      nextln:   v735 = bool.or v734, 0x0
      nextln:   v736 = bool.icmp.i8.ne v705, 0x0
      nextln:   v737 = bool.bitwise_not v736
      nextln:   v738 = bool.and v735, v737
      nextln:   v739 = bool.icmp.i8.eq v717, 0x1
      nextln:   v740 = bool.and v738, v739
      nextln:   jumpif v740, addr_0_block_180, addr_0_block_181
      check: addr_0_block_180: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_181: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_182: // preds: addr_0_block_180 addr_0_block_181
      nextln:   v741 = bool.icmp.i8.ne v705, 0x0
      nextln:   v742 = bool.bitwise_not v741
      nextln:   v743 = bool.icmp.i8.ne v705, 0x0
      nextln:   v744 = bool.bitwise_not v743
      nextln:   v745 = bool.icmp.i8.eq v717, 0x1
      nextln:   v746 = bool.and v744, v745
      nextln:   jumpif v676, addr_0_block_183, addr_0_block_184
      check: addr_0_block_183: // preds: addr_0_block_182
      nextln:   v747 = bool.icmp.i8.eq v705, 0x0
      nextln:   jump addr_0_block_185(0x1)
      check: addr_0_block_184: // preds: addr_0_block_182
      nextln:   jump addr_0_block_185(0x0)
      check: addr_0_block_185(v748: bool): // preds: addr_0_block_183 addr_0_block_184
      nextln:   v749 = bool.icmp.i8.eq v705, 0x0
      nextln:   v750 = bool.and v677, v749
      nextln:   jumpif v750, addr_0_block_186, addr_0_block_187
      check: addr_0_block_186: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x1, 0x1)
      check: addr_0_block_187: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x0, 0x0)
      check: addr_0_block_188(v751: bool, v752: bool): // preds: addr_0_block_186 addr_0_block_187
      nextln:   v753 = bool.or v748, v751
      nextln:   jumpif v753, addr_0_block_189, addr_0_block_202
      check: addr_0_block_189: // preds: addr_0_block_188
      nextln:   v754 = i52.unsigned_from_bits v701
      nextln:   v755 = int.modulo v754, 0x8
      nextln:   v756 = int.sub v754, v755
      nextln:   v757 = i52.to_bits v756
      nextln:   v758 = bool.icmp.i52.eq v701, v757
      nextln:   v759 = i64.load v701
      nextln:   jumpif v748, addr_0_block_190, addr_0_block_191
      nextln:   jump addr_0_block_203(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v759, v678, v679, v680, v681, v682, v683, v684, v685, v686, v687, v688, v689, v690, v691, v692, v693, v694, v695, v696, v697, v698, v699, v700, v701, v702, v703, 0x0, 0x0)
      check: addr_0_block_190: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_191: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_192: // preds: addr_0_block_190 addr_0_block_191
      nextln:   jumpif v751, addr_0_block_193, addr_0_block_194
      check: addr_0_block_193: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_194: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_195: // preds: addr_0_block_193 addr_0_block_194
      nextln:   v1370 = i52.unsigned_from_bits v701
      nextln:   v1371 = int.modulo v1370, 0x8
      nextln:   v1372 = int.sub v1370, v1371
      nextln:   v1373 = i52.to_bits v1372
      nextln:   v1374 = bool.icmp.i52.eq v701, v1373
      nextln:   v1375 = bool.icmp.i52.eq v701, 0x13000000
      nextln:   jumpif v1375, addr_0_block_196, addr_0_block_200
      check: addr_0_block_196: // preds: addr_0_block_195
      nextln:   v1376 = i64.unsigned_from_bits v759
      nextln:   v1377 = bool.icmp.int.eq v1376, 0x4
      nextln:   jumpif v1377, addr_0_block_197, addr_0_block_198
      nextln:   jump addr_0_block_201
      check: addr_0_block_197: // no preds!
      nextln:   jump addr_0_block_199
      check: addr_0_block_198: // no preds!
      nextln:   v1378 = i8.trunc.i64 v759
      nextln:   v1379 = i8.unsigned_from_bits v1378
      nextln:   jump addr_0_block_199
      check: addr_0_block_199: // preds: addr_0_block_197 addr_0_block_198
      check: addr_0_block_200: // preds: addr_0_block_195
      nextln:   store.i64 v759, v701
      nextln:   jump addr_0_block_201
      check: addr_0_block_201: // preds: addr_0_block_196 addr_0_block_200
      check: addr_0_block_202: // preds: addr_0_block_188
      nextln:   jump addr_0_block_203(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_203(v760: i8, v761: i1, v762: i16, v763: i8, v764: bool, v765: bool, v766: bool, v767: int, v768: i64, v769: i8, v770: i8, v771: i52, v772: i1, v773: bool, v774: bool, v775: int, v776: i1, v777: bool, v778: i4, v779: i2, v780: i4, v781: i8, v782: i8, v783: i2, v784: i2, v785: bool, v786: i2, v787: i2, v788: bool, v789: bool, v790: bool, v791: bool, v792: i52, v793: i1, v794: i64, v795: i2, v796: bool): // preds: addr_0_block_189 addr_0_block_202
      nextln:   v797 = bool.icmp.i8.ne v705, 0x0
      nextln:   v798 = bool.bitwise_not v797
      nextln:   v799 = bool.and v798, 0x1
      nextln:   v800 = bool.icmp.i8.ne v705, 0x0
      nextln:   v801 = bool.bitwise_not v800
      nextln:   v802 = bool.and 0x1, v801
      nextln:   jumpif v802, addr_0_block_204, addr_0_block_205
      check: addr_0_block_204: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_205: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_206: // preds: addr_0_block_204 addr_0_block_205
      nextln:   v803 = bool.icmp.i8.ne v705, 0x0
      nextln:   jumpif v803, addr_0_block_207, addr_0_block_208
      check: addr_0_block_207: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_208: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_209: // preds: addr_0_block_207 addr_0_block_208
      nextln:   jumpif v726, addr_0_block_210, addr_0_block_211
      check: addr_0_block_210: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_211: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_212: // preds: addr_0_block_210 addr_0_block_211
      nextln:   v804 = i52.unsigned_from_bits v728
      nextln:   v805 = int.modulo v804, 0x1
      nextln:   v806 = int.sub v804, v805
      nextln:   v807 = i52.to_bits v806
      nextln:   v808 = bool.icmp.i52.eq v728, v807
      nextln:   v809 = bool.icmp.i52.eq v728, 0x13000000
      nextln:   jumpif v809, addr_0_block_213, addr_0_block_217
      check: addr_0_block_213: // preds: addr_0_block_212
      nextln:   v810 = i8.unsigned_from_bits v655
      nextln:   v811 = bool.icmp.int.eq v810, 0x4
      nextln:   jumpif v811, addr_0_block_214, addr_0_block_215
      nextln:   jump addr_0_block_218
      check: addr_0_block_214: // no preds!
      nextln:   jump addr_0_block_216
      check: addr_0_block_215: // no preds!
      nextln:   v1380 = i8.unsigned_from_bits v655
      nextln:   jump addr_0_block_216
      check: addr_0_block_216: // preds: addr_0_block_214 addr_0_block_215
      check: addr_0_block_217: // preds: addr_0_block_212
      nextln:   store.i8 v655, v728
      nextln:   jump addr_0_block_218
      check: addr_0_block_218: // preds: addr_0_block_213 addr_0_block_217
      nextln:   v812 = i64.lshr v1, 0x28
      nextln:   v813 = i8.trunc.i64 v812
      nextln:   v814 = i64.wrapping_add v0, 0x5
      nextln:   v815 = i64.unsigned_from_bits v814
      nextln:   v816 = int.modulo v815, 0x1
      nextln:   v817 = int.sub v815, v816
      nextln:   v818 = i64.to_bits v817
      nextln:   v819 = bool.icmp.i64.eq v814, v818
      nextln:   v820 = i64.lshr v814, 0x30
      nextln:   v821 = i16.trunc.i64 v820
      nextln:   v822 = bool.icmp.i16.eq v821, 0x0
      nextln:   v823 = bool.bitwise_not v822
      nextln:   jumpif v823, addr_0_block_219, addr_0_block_220
      check: addr_0_block_219: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_220: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_221(v1296: i52, v1297: int, v1298: bool, v1299: bool): // preds: addr_0_block_220
      nextln:   v1300 = i52.trunc.i64 v814
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1300, 0x1, 0x0)
      check: addr_0_block_222(v824: i3, v825: i1, v826: i1, v827: i1, v828: i1, v829: i4, v830: i1, v831: bool, v832: int, v833: int, v834: bool, v835: bool, v836: i8, v837: i8, v838: i52, v839: i1, v840: bool, v841: bool, v842: int, v843: i1, v844: bool, v845: i4, v846: i2, v847: i4, v848: i8, v849: i8, v850: i2, v851: i2, v852: bool, v853: i2, v854: i2, v855: bool, v856: bool, v857: bool, v858: bool, v859: i52, v860: i1, v861: i64, v862: i1, v863: i8, v864: i8, v865: i52, v866: i1, v867: bool, v868: bool, v869: int, v870: i1, v871: bool, v872: i4, v873: i2, v874: i4, v875: i8, v876: i8, v877: i2, v878: i2, v879: bool, v880: i2, v881: i2, v882: bool, v883: bool, v884: bool, v885: bool, v886: i52, v887: i1, v888: i64): // preds: addr_0_block_219 addr_0_block_221
      nextln:   v889 = bool.icmp.i8.ne v863, 0x0
      nextln:   v890 = bool.bitwise_not v889
      nextln:   v891 = bool.bitwise_not v6
      nextln:   v892 = bool.and v891, 0x1
      nextln:   v893 = bool.or v892, 0x0
      nextln:   v894 = bool.icmp.i8.ne v863, 0x0
      nextln:   v895 = bool.bitwise_not v894
      nextln:   v896 = bool.and v893, v895
      nextln:   v897 = bool.icmp.i8.eq v875, 0x1
      nextln:   v898 = bool.and v896, v897
      nextln:   jumpif v898, addr_0_block_223, addr_0_block_224
      check: addr_0_block_223: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_224: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_225: // preds: addr_0_block_223 addr_0_block_224
      nextln:   v899 = bool.icmp.i8.ne v863, 0x0
      nextln:   v900 = bool.bitwise_not v899
      nextln:   v901 = bool.icmp.i8.ne v863, 0x0
      nextln:   v902 = bool.bitwise_not v901
      nextln:   v903 = bool.icmp.i8.eq v875, 0x1
      nextln:   v904 = bool.and v902, v903
      nextln:   jumpif v834, addr_0_block_226, addr_0_block_227
      check: addr_0_block_226: // preds: addr_0_block_225
      nextln:   v905 = bool.icmp.i8.eq v863, 0x0
      nextln:   jump addr_0_block_228(0x1)
      check: addr_0_block_227: // preds: addr_0_block_225
      nextln:   jump addr_0_block_228(0x0)
      check: addr_0_block_228(v906: bool): // preds: addr_0_block_226 addr_0_block_227
      nextln:   v907 = bool.icmp.i8.eq v863, 0x0
      nextln:   v908 = bool.and v835, v907
      nextln:   jumpif v908, addr_0_block_229, addr_0_block_230
      check: addr_0_block_229: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x1, 0x1)
      check: addr_0_block_230: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x0, 0x0)
      check: addr_0_block_231(v909: bool, v910: bool): // preds: addr_0_block_229 addr_0_block_230
      nextln:   v911 = bool.or v906, v909
      nextln:   jumpif v911, addr_0_block_232, addr_0_block_245
      check: addr_0_block_232: // preds: addr_0_block_231
      nextln:   v912 = i52.unsigned_from_bits v859
      nextln:   v913 = int.modulo v912, 0x8
      nextln:   v914 = int.sub v912, v913
      nextln:   v915 = i52.to_bits v914
      nextln:   v916 = bool.icmp.i52.eq v859, v915
      nextln:   v917 = i64.load v859
      nextln:   jumpif v906, addr_0_block_233, addr_0_block_234
      nextln:   jump addr_0_block_246(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v917, v836, v837, v838, v839, v840, v841, v842, v843, v844, v845, v846, v847, v848, v849, v850, v851, v852, v853, v854, v855, v856, v857, v858, v859, v860, v861, 0x0, 0x0)
      check: addr_0_block_233: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_234: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_235: // preds: addr_0_block_233 addr_0_block_234
      nextln:   jumpif v909, addr_0_block_236, addr_0_block_237
      check: addr_0_block_236: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_237: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_238: // preds: addr_0_block_236 addr_0_block_237
      nextln:   v1381 = i52.unsigned_from_bits v859
      nextln:   v1382 = int.modulo v1381, 0x8
      nextln:   v1383 = int.sub v1381, v1382
      nextln:   v1384 = i52.to_bits v1383
      nextln:   v1385 = bool.icmp.i52.eq v859, v1384
      nextln:   v1386 = bool.icmp.i52.eq v859, 0x13000000
      nextln:   jumpif v1386, addr_0_block_239, addr_0_block_243
      check: addr_0_block_239: // preds: addr_0_block_238
      nextln:   v1387 = i64.unsigned_from_bits v917
      nextln:   v1388 = bool.icmp.int.eq v1387, 0x4
      nextln:   jumpif v1388, addr_0_block_240, addr_0_block_241
      nextln:   jump addr_0_block_244
      check: addr_0_block_240: // no preds!
      nextln:   jump addr_0_block_242
      check: addr_0_block_241: // no preds!
      nextln:   v1389 = i8.trunc.i64 v917
      nextln:   v1390 = i8.unsigned_from_bits v1389
      nextln:   jump addr_0_block_242
      check: addr_0_block_242: // preds: addr_0_block_240 addr_0_block_241
      check: addr_0_block_243: // preds: addr_0_block_238
      nextln:   store.i64 v917, v859
      nextln:   jump addr_0_block_244
      check: addr_0_block_244: // preds: addr_0_block_239 addr_0_block_243
      check: addr_0_block_245: // preds: addr_0_block_231
      nextln:   jump addr_0_block_246(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_246(v918: i8, v919: i1, v920: i16, v921: i8, v922: bool, v923: bool, v924: bool, v925: int, v926: i64, v927: i8, v928: i8, v929: i52, v930: i1, v931: bool, v932: bool, v933: int, v934: i1, v935: bool, v936: i4, v937: i2, v938: i4, v939: i8, v940: i8, v941: i2, v942: i2, v943: bool, v944: i2, v945: i2, v946: bool, v947: bool, v948: bool, v949: bool, v950: i52, v951: i1, v952: i64, v953: i2, v954: bool): // preds: addr_0_block_232 addr_0_block_245
      nextln:   v955 = bool.icmp.i8.ne v863, 0x0
      nextln:   v956 = bool.bitwise_not v955
      nextln:   v957 = bool.and v956, 0x1
      nextln:   v958 = bool.icmp.i8.ne v863, 0x0
      nextln:   v959 = bool.bitwise_not v958
      nextln:   v960 = bool.and 0x1, v959
      nextln:   jumpif v960, addr_0_block_247, addr_0_block_248
      check: addr_0_block_247: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_248: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_249: // preds: addr_0_block_247 addr_0_block_248
      nextln:   v961 = bool.icmp.i8.ne v863, 0x0
      nextln:   jumpif v961, addr_0_block_250, addr_0_block_251
      check: addr_0_block_250: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_251: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_252: // preds: addr_0_block_250 addr_0_block_251
      nextln:   jumpif v884, addr_0_block_253, addr_0_block_254
      check: addr_0_block_253: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_254: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_255: // preds: addr_0_block_253 addr_0_block_254
      nextln:   v962 = i52.unsigned_from_bits v886
      nextln:   v963 = int.modulo v962, 0x1
      nextln:   v964 = int.sub v962, v963
      nextln:   v965 = i52.to_bits v964
      nextln:   v966 = bool.icmp.i52.eq v886, v965
      nextln:   v967 = bool.icmp.i52.eq v886, 0x13000000
      nextln:   jumpif v967, addr_0_block_256, addr_0_block_260
      check: addr_0_block_256: // preds: addr_0_block_255
      nextln:   v968 = i8.unsigned_from_bits v813
      nextln:   v969 = bool.icmp.int.eq v968, 0x4
      nextln:   jumpif v969, addr_0_block_257, addr_0_block_258
      nextln:   jump addr_0_block_261
      check: addr_0_block_257: // no preds!
      nextln:   jump addr_0_block_259
      check: addr_0_block_258: // no preds!
      nextln:   v1391 = i8.unsigned_from_bits v813
      nextln:   jump addr_0_block_259
      check: addr_0_block_259: // preds: addr_0_block_257 addr_0_block_258
      check: addr_0_block_260: // preds: addr_0_block_255
      nextln:   store.i8 v813, v886
      nextln:   jump addr_0_block_261
      check: addr_0_block_261: // preds: addr_0_block_256 addr_0_block_260
      nextln:   v970 = i64.lshr v1, 0x30
      nextln:   v971 = i8.trunc.i64 v970
      nextln:   v972 = i64.wrapping_add v0, 0x6
      nextln:   v973 = i64.unsigned_from_bits v972
      nextln:   v974 = int.modulo v973, 0x1
      nextln:   v975 = int.sub v973, v974
      nextln:   v976 = i64.to_bits v975
      nextln:   v977 = bool.icmp.i64.eq v972, v976
      nextln:   v978 = i64.lshr v972, 0x30
      nextln:   v979 = i16.trunc.i64 v978
      nextln:   v980 = bool.icmp.i16.eq v979, 0x0
      nextln:   v981 = bool.bitwise_not v980
      nextln:   jumpif v981, addr_0_block_262, addr_0_block_263
      check: addr_0_block_262: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_263: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_264(v1291: i52, v1292: int, v1293: bool, v1294: bool): // preds: addr_0_block_263
      nextln:   v1295 = i52.trunc.i64 v972
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1295, 0x1, 0x0)
      check: addr_0_block_265(v982: i3, v983: i1, v984: i1, v985: i1, v986: i1, v987: i4, v988: i1, v989: bool, v990: int, v991: int, v992: bool, v993: bool, v994: i8, v995: i8, v996: i52, v997: i1, v998: bool, v999: bool, v1000: int, v1001: i1, v1002: bool, v1003: i4, v1004: i2, v1005: i4, v1006: i8, v1007: i8, v1008: i2, v1009: i2, v1010: bool, v1011: i2, v1012: i2, v1013: bool, v1014: bool, v1015: bool, v1016: bool, v1017: i52, v1018: i1, v1019: i64, v1020: i1, v1021: i8, v1022: i8, v1023: i52, v1024: i1, v1025: bool, v1026: bool, v1027: int, v1028: i1, v1029: bool, v1030: i4, v1031: i2, v1032: i4, v1033: i8, v1034: i8, v1035: i2, v1036: i2, v1037: bool, v1038: i2, v1039: i2, v1040: bool, v1041: bool, v1042: bool, v1043: bool, v1044: i52, v1045: i1, v1046: i64): // preds: addr_0_block_262 addr_0_block_264
      nextln:   v1047 = bool.icmp.i8.ne v1021, 0x0
      nextln:   v1048 = bool.bitwise_not v1047
      nextln:   v1049 = bool.bitwise_not v6
      nextln:   v1050 = bool.and v1049, 0x1
      nextln:   v1051 = bool.or v1050, 0x0
      nextln:   v1052 = bool.icmp.i8.ne v1021, 0x0
      nextln:   v1053 = bool.bitwise_not v1052
      nextln:   v1054 = bool.and v1051, v1053
      nextln:   v1055 = bool.icmp.i8.eq v1033, 0x1
      nextln:   v1056 = bool.and v1054, v1055
      nextln:   jumpif v1056, addr_0_block_266, addr_0_block_267
      check: addr_0_block_266: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_267: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_268: // preds: addr_0_block_266 addr_0_block_267
      nextln:   v1057 = bool.icmp.i8.ne v1021, 0x0
      nextln:   v1058 = bool.bitwise_not v1057
      nextln:   v1059 = bool.icmp.i8.ne v1021, 0x0
      nextln:   v1060 = bool.bitwise_not v1059
      nextln:   v1061 = bool.icmp.i8.eq v1033, 0x1
      nextln:   v1062 = bool.and v1060, v1061
      nextln:   jumpif v992, addr_0_block_269, addr_0_block_270
      check: addr_0_block_269: // preds: addr_0_block_268
      nextln:   v1063 = bool.icmp.i8.eq v1021, 0x0
      nextln:   jump addr_0_block_271(0x1)
      check: addr_0_block_270: // preds: addr_0_block_268
      nextln:   jump addr_0_block_271(0x0)
      check: addr_0_block_271(v1064: bool): // preds: addr_0_block_269 addr_0_block_270
      nextln:   v1065 = bool.icmp.i8.eq v1021, 0x0
      nextln:   v1066 = bool.and v993, v1065
      nextln:   jumpif v1066, addr_0_block_272, addr_0_block_273
      check: addr_0_block_272: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x1, 0x1)
      check: addr_0_block_273: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x0, 0x0)
      check: addr_0_block_274(v1067: bool, v1068: bool): // preds: addr_0_block_272 addr_0_block_273
      nextln:   v1069 = bool.or v1064, v1067
      nextln:   jumpif v1069, addr_0_block_275, addr_0_block_288
      check: addr_0_block_275: // preds: addr_0_block_274
      nextln:   v1070 = i52.unsigned_from_bits v1017
      nextln:   v1071 = int.modulo v1070, 0x8
      nextln:   v1072 = int.sub v1070, v1071
      nextln:   v1073 = i52.to_bits v1072
      nextln:   v1074 = bool.icmp.i52.eq v1017, v1073
      nextln:   v1075 = i64.load v1017
      nextln:   jumpif v1064, addr_0_block_276, addr_0_block_277
      nextln:   jump addr_0_block_289(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1075, v994, v995, v996, v997, v998, v999, v1000, v1001, v1002, v1003, v1004, v1005, v1006, v1007, v1008, v1009, v1010, v1011, v1012, v1013, v1014, v1015, v1016, v1017, v1018, v1019, 0x0, 0x0)
      check: addr_0_block_276: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_277: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_278: // preds: addr_0_block_276 addr_0_block_277
      nextln:   jumpif v1067, addr_0_block_279, addr_0_block_280
      check: addr_0_block_279: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_280: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_281: // preds: addr_0_block_279 addr_0_block_280
      nextln:   v1392 = i52.unsigned_from_bits v1017
      nextln:   v1393 = int.modulo v1392, 0x8
      nextln:   v1394 = int.sub v1392, v1393
      nextln:   v1395 = i52.to_bits v1394
      nextln:   v1396 = bool.icmp.i52.eq v1017, v1395
      nextln:   v1397 = bool.icmp.i52.eq v1017, 0x13000000
      nextln:   jumpif v1397, addr_0_block_282, addr_0_block_286
      check: addr_0_block_282: // preds: addr_0_block_281
      nextln:   v1398 = i64.unsigned_from_bits v1075
      nextln:   v1399 = bool.icmp.int.eq v1398, 0x4
      nextln:   jumpif v1399, addr_0_block_283, addr_0_block_284
      nextln:   jump addr_0_block_287
      check: addr_0_block_283: // no preds!
      nextln:   jump addr_0_block_285
      check: addr_0_block_284: // no preds!
      nextln:   v1400 = i8.trunc.i64 v1075
      nextln:   v1401 = i8.unsigned_from_bits v1400
      nextln:   jump addr_0_block_285
      check: addr_0_block_285: // preds: addr_0_block_283 addr_0_block_284
      check: addr_0_block_286: // preds: addr_0_block_281
      nextln:   store.i64 v1075, v1017
      nextln:   jump addr_0_block_287
      check: addr_0_block_287: // preds: addr_0_block_282 addr_0_block_286
      check: addr_0_block_288: // preds: addr_0_block_274
      nextln:   jump addr_0_block_289(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_289(v1076: i8, v1077: i1, v1078: i16, v1079: i8, v1080: bool, v1081: bool, v1082: bool, v1083: int, v1084: i64, v1085: i8, v1086: i8, v1087: i52, v1088: i1, v1089: bool, v1090: bool, v1091: int, v1092: i1, v1093: bool, v1094: i4, v1095: i2, v1096: i4, v1097: i8, v1098: i8, v1099: i2, v1100: i2, v1101: bool, v1102: i2, v1103: i2, v1104: bool, v1105: bool, v1106: bool, v1107: bool, v1108: i52, v1109: i1, v1110: i64, v1111: i2, v1112: bool): // preds: addr_0_block_275 addr_0_block_288
      nextln:   v1113 = bool.icmp.i8.ne v1021, 0x0
      nextln:   v1114 = bool.bitwise_not v1113
      nextln:   v1115 = bool.and v1114, 0x1
      nextln:   v1116 = bool.icmp.i8.ne v1021, 0x0
      nextln:   v1117 = bool.bitwise_not v1116
      nextln:   v1118 = bool.and 0x1, v1117
      nextln:   jumpif v1118, addr_0_block_290, addr_0_block_291
      check: addr_0_block_290: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_291: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_292: // preds: addr_0_block_290 addr_0_block_291
      nextln:   v1119 = bool.icmp.i8.ne v1021, 0x0
      nextln:   jumpif v1119, addr_0_block_293, addr_0_block_294
      check: addr_0_block_293: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_294: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_295: // preds: addr_0_block_293 addr_0_block_294
      nextln:   jumpif v1042, addr_0_block_296, addr_0_block_297
      check: addr_0_block_296: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_297: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_298: // preds: addr_0_block_296 addr_0_block_297
      nextln:   v1120 = i52.unsigned_from_bits v1044
      nextln:   v1121 = int.modulo v1120, 0x1
      nextln:   v1122 = int.sub v1120, v1121
      nextln:   v1123 = i52.to_bits v1122
      nextln:   v1124 = bool.icmp.i52.eq v1044, v1123
      nextln:   v1125 = bool.icmp.i52.eq v1044, 0x13000000
      nextln:   jumpif v1125, addr_0_block_299, addr_0_block_303
      check: addr_0_block_299: // preds: addr_0_block_298
      nextln:   v1126 = i8.unsigned_from_bits v971
      nextln:   v1127 = bool.icmp.int.eq v1126, 0x4
      nextln:   jumpif v1127, addr_0_block_300, addr_0_block_301
      nextln:   jump addr_0_block_304
      check: addr_0_block_300: // no preds!
      nextln:   jump addr_0_block_302
      check: addr_0_block_301: // no preds!
      nextln:   v1402 = i8.unsigned_from_bits v971
      nextln:   jump addr_0_block_302
      check: addr_0_block_302: // preds: addr_0_block_300 addr_0_block_301
      check: addr_0_block_303: // preds: addr_0_block_298
      nextln:   store.i8 v971, v1044
      nextln:   jump addr_0_block_304
      check: addr_0_block_304: // preds: addr_0_block_299 addr_0_block_303
      nextln:   v1128 = i64.lshr v1, 0x38
      nextln:   v1129 = i8.trunc.i64 v1128
      nextln:   v1130 = i64.wrapping_add v0, 0x7
      nextln:   v1131 = i64.unsigned_from_bits v1130
      nextln:   v1132 = int.modulo v1131, 0x1
      nextln:   v1133 = int.sub v1131, v1132
      nextln:   v1134 = i64.to_bits v1133
      nextln:   v1135 = bool.icmp.i64.eq v1130, v1134
      nextln:   v1136 = i64.lshr v1130, 0x30
      nextln:   v1137 = i16.trunc.i64 v1136
      nextln:   v1138 = bool.icmp.i16.eq v1137, 0x0
      nextln:   v1139 = bool.bitwise_not v1138
      nextln:   jumpif v1139, addr_0_block_305, addr_0_block_306
      check: addr_0_block_305: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_306: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_307(v1286: i52, v1287: int, v1288: bool, v1289: bool): // preds: addr_0_block_306
      nextln:   v1290 = i52.trunc.i64 v1130
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1290, 0x1, 0x0)
      check: addr_0_block_308(v1140: i3, v1141: i1, v1142: i1, v1143: i1, v1144: i1, v1145: i4, v1146: i1, v1147: bool, v1148: int, v1149: int, v1150: bool, v1151: bool, v1152: i8, v1153: i8, v1154: i52, v1155: i1, v1156: bool, v1157: bool, v1158: int, v1159: i1, v1160: bool, v1161: i4, v1162: i2, v1163: i4, v1164: i8, v1165: i8, v1166: i2, v1167: i2, v1168: bool, v1169: i2, v1170: i2, v1171: bool, v1172: bool, v1173: bool, v1174: bool, v1175: i52, v1176: i1, v1177: i64, v1178: i1, v1179: i8, v1180: i8, v1181: i52, v1182: i1, v1183: bool, v1184: bool, v1185: int, v1186: i1, v1187: bool, v1188: i4, v1189: i2, v1190: i4, v1191: i8, v1192: i8, v1193: i2, v1194: i2, v1195: bool, v1196: i2, v1197: i2, v1198: bool, v1199: bool, v1200: bool, v1201: bool, v1202: i52, v1203: i1, v1204: i64): // preds: addr_0_block_305 addr_0_block_307
      nextln:   v1205 = bool.icmp.i8.ne v1179, 0x0
      nextln:   v1206 = bool.bitwise_not v1205
      nextln:   v1207 = bool.bitwise_not v6
      nextln:   v1208 = bool.and v1207, 0x1
      nextln:   v1209 = bool.or v1208, 0x0
      nextln:   v1210 = bool.icmp.i8.ne v1179, 0x0
      nextln:   v1211 = bool.bitwise_not v1210
      nextln:   v1212 = bool.and v1209, v1211
      nextln:   v1213 = bool.icmp.i8.eq v1191, 0x1
      nextln:   v1214 = bool.and v1212, v1213
      nextln:   jumpif v1214, addr_0_block_309, addr_0_block_310
      check: addr_0_block_309: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_310: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_311: // preds: addr_0_block_309 addr_0_block_310
      nextln:   v1215 = bool.icmp.i8.ne v1179, 0x0
      nextln:   v1216 = bool.bitwise_not v1215
      nextln:   v1217 = bool.icmp.i8.ne v1179, 0x0
      nextln:   v1218 = bool.bitwise_not v1217
      nextln:   v1219 = bool.icmp.i8.eq v1191, 0x1
      nextln:   v1220 = bool.and v1218, v1219
      nextln:   jumpif v1150, addr_0_block_312, addr_0_block_313
      check: addr_0_block_312: // preds: addr_0_block_311
      nextln:   v1221 = bool.icmp.i8.eq v1179, 0x0
      nextln:   jump addr_0_block_314(0x1)
      check: addr_0_block_313: // preds: addr_0_block_311
      nextln:   jump addr_0_block_314(0x0)
      check: addr_0_block_314(v1222: bool): // preds: addr_0_block_312 addr_0_block_313
      nextln:   v1223 = bool.icmp.i8.eq v1179, 0x0
      nextln:   v1224 = bool.and v1151, v1223
      nextln:   jumpif v1224, addr_0_block_315, addr_0_block_316
      check: addr_0_block_315: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x1, 0x1)
      check: addr_0_block_316: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x0, 0x0)
      check: addr_0_block_317(v1225: bool, v1226: bool): // preds: addr_0_block_315 addr_0_block_316
      nextln:   v1227 = bool.or v1222, v1225
      nextln:   jumpif v1227, addr_0_block_318, addr_0_block_331
      check: addr_0_block_318: // preds: addr_0_block_317
      nextln:   v1228 = i52.unsigned_from_bits v1175
      nextln:   v1229 = int.modulo v1228, 0x8
      nextln:   v1230 = int.sub v1228, v1229
      nextln:   v1231 = i52.to_bits v1230
      nextln:   v1232 = bool.icmp.i52.eq v1175, v1231
      nextln:   v1233 = i64.load v1175
      nextln:   jumpif v1222, addr_0_block_319, addr_0_block_320
      nextln:   jump addr_0_block_332(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1233, v1152, v1153, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1166, v1167, v1168, v1169, v1170, v1171, v1172, v1173, v1174, v1175, v1176, v1177, 0x0, 0x0)
      check: addr_0_block_319: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_320: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_321: // preds: addr_0_block_319 addr_0_block_320
      nextln:   jumpif v1225, addr_0_block_322, addr_0_block_323
      check: addr_0_block_322: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_323: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_324: // preds: addr_0_block_322 addr_0_block_323
      nextln:   v1403 = i52.unsigned_from_bits v1175
      nextln:   v1404 = int.modulo v1403, 0x8
      nextln:   v1405 = int.sub v1403, v1404
      nextln:   v1406 = i52.to_bits v1405
      nextln:   v1407 = bool.icmp.i52.eq v1175, v1406
      nextln:   v1408 = bool.icmp.i52.eq v1175, 0x13000000
      nextln:   jumpif v1408, addr_0_block_325, addr_0_block_329
      check: addr_0_block_325: // preds: addr_0_block_324
      nextln:   v1409 = i64.unsigned_from_bits v1233
      nextln:   v1410 = bool.icmp.int.eq v1409, 0x4
      nextln:   jumpif v1410, addr_0_block_326, addr_0_block_327
      nextln:   jump addr_0_block_330
      check: addr_0_block_326: // no preds!
      nextln:   jump addr_0_block_328
      check: addr_0_block_327: // no preds!
      nextln:   v1411 = i8.trunc.i64 v1233
      nextln:   v1412 = i8.unsigned_from_bits v1411
      nextln:   jump addr_0_block_328
      check: addr_0_block_328: // preds: addr_0_block_326 addr_0_block_327
      check: addr_0_block_329: // preds: addr_0_block_324
      nextln:   store.i64 v1233, v1175
      nextln:   jump addr_0_block_330
      check: addr_0_block_330: // preds: addr_0_block_325 addr_0_block_329
      check: addr_0_block_331: // preds: addr_0_block_317
      nextln:   jump addr_0_block_332(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_332(v1234: i8, v1235: i1, v1236: i16, v1237: i8, v1238: bool, v1239: bool, v1240: bool, v1241: int, v1242: i64, v1243: i8, v1244: i8, v1245: i52, v1246: i1, v1247: bool, v1248: bool, v1249: int, v1250: i1, v1251: bool, v1252: i4, v1253: i2, v1254: i4, v1255: i8, v1256: i8, v1257: i2, v1258: i2, v1259: bool, v1260: i2, v1261: i2, v1262: bool, v1263: bool, v1264: bool, v1265: bool, v1266: i52, v1267: i1, v1268: i64, v1269: i2, v1270: bool): // preds: addr_0_block_318 addr_0_block_331
      nextln:   v1271 = bool.icmp.i8.ne v1179, 0x0
      nextln:   v1272 = bool.bitwise_not v1271
      nextln:   v1273 = bool.and v1272, 0x1
      nextln:   v1274 = bool.icmp.i8.ne v1179, 0x0
      nextln:   v1275 = bool.bitwise_not v1274
      nextln:   v1276 = bool.and 0x1, v1275
      nextln:   jumpif v1276, addr_0_block_333, addr_0_block_334
      check: addr_0_block_333: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_334: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_335: // preds: addr_0_block_333 addr_0_block_334
      nextln:   v1277 = bool.icmp.i8.ne v1179, 0x0
      nextln:   jumpif v1277, addr_0_block_336, addr_0_block_337
      check: addr_0_block_336: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_337: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_338: // preds: addr_0_block_336 addr_0_block_337
      nextln:   jumpif v1200, addr_0_block_339, addr_0_block_340
      check: addr_0_block_339: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_340: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_341: // preds: addr_0_block_339 addr_0_block_340
      nextln:   v1278 = i52.unsigned_from_bits v1202
      nextln:   v1279 = int.modulo v1278, 0x1
      nextln:   v1280 = int.sub v1278, v1279
      nextln:   v1281 = i52.to_bits v1280
      nextln:   v1282 = bool.icmp.i52.eq v1202, v1281
      nextln:   v1283 = bool.icmp.i52.eq v1202, 0x13000000
      nextln:   jumpif v1283, addr_0_block_342, addr_0_block_346
      check: addr_0_block_342: // preds: addr_0_block_341
      nextln:   v1284 = i8.unsigned_from_bits v1129
      nextln:   v1285 = bool.icmp.int.eq v1284, 0x4
      nextln:   jumpif v1285, addr_0_block_343, addr_0_block_344
      nextln:   jump addr_0_block_347
      check: addr_0_block_343: // no preds!
      nextln:   jump addr_0_block_345
      check: addr_0_block_344: // no preds!
      nextln:   v1413 = i8.unsigned_from_bits v1129
      nextln:   jump addr_0_block_345
      check: addr_0_block_345: // preds: addr_0_block_343 addr_0_block_344
      check: addr_0_block_346: // preds: addr_0_block_341
      nextln:   store.i8 v1129, v1202
      nextln:   jump addr_0_block_347
      check: addr_0_block_347: // preds: addr_0_block_342 addr_0_block_346
      check: addr_0_block_348: // preds: entry
      nextln:   v22 = i64.unsigned_from_bits v0
      nextln:   v23 = int.modulo v22, 0x8
      nextln:   v24 = int.sub v22, v23
      nextln:   v25 = i64.to_bits v24
      nextln:   v26 = bool.icmp.i64.eq v0, v25
      nextln:   v27 = i64.lshr v0, 0x30
      nextln:   v28 = i16.trunc.i64 v27
      nextln:   v29 = bool.icmp.i16.eq v28, 0x0
      nextln:   v30 = bool.bitwise_not v29
      nextln:   jumpif v30, addr_0_block_349, addr_0_block_350
      nextln:   jump addr_0_block_392(v6, 0x0)
      check: addr_0_block_349: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_350: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_351(v1560: i52, v1561: int, v1562: bool, v1563: bool): // preds: addr_0_block_350
      nextln:   v1564 = i52.trunc.i64 v0
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1564, 0x1, 0x0)
      check: addr_0_block_352(v1414: i3, v1415: i1, v1416: i1, v1417: i1, v1418: i1, v1419: i4, v1420: i1, v1421: bool, v1422: int, v1423: int, v1424: bool, v1425: bool, v1426: i8, v1427: i8, v1428: i52, v1429: i1, v1430: bool, v1431: bool, v1432: int, v1433: i1, v1434: bool, v1435: i4, v1436: i2, v1437: i4, v1438: i8, v1439: i8, v1440: i2, v1441: i2, v1442: bool, v1443: i2, v1444: i2, v1445: bool, v1446: bool, v1447: bool, v1448: bool, v1449: i52, v1450: i1, v1451: i64, v1452: i1, v1453: i8, v1454: i8, v1455: i52, v1456: i1, v1457: bool, v1458: bool, v1459: int, v1460: i1, v1461: bool, v1462: i4, v1463: i2, v1464: i4, v1465: i8, v1466: i8, v1467: i2, v1468: i2, v1469: bool, v1470: i2, v1471: i2, v1472: bool, v1473: bool, v1474: bool, v1475: bool, v1476: i52, v1477: i1, v1478: i64): // preds: addr_0_block_349 addr_0_block_351
      nextln:   v1479 = bool.icmp.i8.ne v1453, 0x0
      nextln:   v1480 = bool.bitwise_not v1479
      nextln:   v1481 = bool.bitwise_not v6
      nextln:   v1482 = bool.and v1481, 0x1
      nextln:   v1483 = bool.or v1482, 0x0
      nextln:   v1484 = bool.icmp.i8.ne v1453, 0x0
      nextln:   v1485 = bool.bitwise_not v1484
      nextln:   v1486 = bool.and v1483, v1485
      nextln:   v1487 = bool.icmp.i8.eq v1465, 0x1
      nextln:   v1488 = bool.and v1486, v1487
      nextln:   jumpif v1488, addr_0_block_353, addr_0_block_354
      check: addr_0_block_353: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_354: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_355: // preds: addr_0_block_353 addr_0_block_354
      nextln:   v1489 = bool.icmp.i8.ne v1453, 0x0
      nextln:   v1490 = bool.bitwise_not v1489
      nextln:   v1491 = bool.icmp.i8.ne v1453, 0x0
      nextln:   v1492 = bool.bitwise_not v1491
      nextln:   v1493 = bool.icmp.i8.eq v1465, 0x1
      nextln:   v1494 = bool.and v1492, v1493
      nextln:   jumpif v1424, addr_0_block_356, addr_0_block_357
      check: addr_0_block_356: // preds: addr_0_block_355
      nextln:   v1495 = bool.icmp.i8.eq v1453, 0x0
      nextln:   jump addr_0_block_358(0x1)
      check: addr_0_block_357: // preds: addr_0_block_355
      nextln:   jump addr_0_block_358(0x0)
      check: addr_0_block_358(v1496: bool): // preds: addr_0_block_356 addr_0_block_357
      nextln:   v1497 = bool.icmp.i8.eq v1453, 0x0
      nextln:   v1498 = bool.and v1425, v1497
      nextln:   jumpif v1498, addr_0_block_359, addr_0_block_360
      check: addr_0_block_359: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x1, 0x1)
      check: addr_0_block_360: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x0, 0x0)
      check: addr_0_block_361(v1499: bool, v1500: bool): // preds: addr_0_block_359 addr_0_block_360
      nextln:   v1501 = bool.or v1496, v1499
      nextln:   jumpif v1501, addr_0_block_362, addr_0_block_375
      check: addr_0_block_362: // preds: addr_0_block_361
      nextln:   v1502 = i52.unsigned_from_bits v1449
      nextln:   v1503 = int.modulo v1502, 0x8
      nextln:   v1504 = int.sub v1502, v1503
      nextln:   v1505 = i52.to_bits v1504
      nextln:   v1506 = bool.icmp.i52.eq v1449, v1505
      nextln:   v1507 = i64.load v1449
      nextln:   jumpif v1496, addr_0_block_363, addr_0_block_364
      nextln:   jump addr_0_block_376(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1507, v1426, v1427, v1428, v1429, v1430, v1431, v1432, v1433, v1434, v1435, v1436, v1437, v1438, v1439, v1440, v1441, v1442, v1443, v1444, v1445, v1446, v1447, v1448, v1449, v1450, v1451, 0x0, 0x0)
      check: addr_0_block_363: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_364: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_365: // preds: addr_0_block_363 addr_0_block_364
      nextln:   jumpif v1499, addr_0_block_366, addr_0_block_367
      check: addr_0_block_366: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_367: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_368: // preds: addr_0_block_366 addr_0_block_367
      nextln:   v1565 = i52.unsigned_from_bits v1449
      nextln:   v1566 = int.modulo v1565, 0x8
      nextln:   v1567 = int.sub v1565, v1566
      nextln:   v1568 = i52.to_bits v1567
      nextln:   v1569 = bool.icmp.i52.eq v1449, v1568
      nextln:   v1570 = bool.icmp.i52.eq v1449, 0x13000000
      nextln:   jumpif v1570, addr_0_block_369, addr_0_block_373
      check: addr_0_block_369: // preds: addr_0_block_368
      nextln:   v1571 = i64.unsigned_from_bits v1507
      nextln:   v1572 = bool.icmp.int.eq v1571, 0x4
      nextln:   jumpif v1572, addr_0_block_370, addr_0_block_371
      nextln:   jump addr_0_block_374
      check: addr_0_block_370: // no preds!
      nextln:   jump addr_0_block_372
      check: addr_0_block_371: // no preds!
      nextln:   v1573 = i8.trunc.i64 v1507
      nextln:   v1574 = i8.unsigned_from_bits v1573
      nextln:   jump addr_0_block_372
      check: addr_0_block_372: // preds: addr_0_block_370 addr_0_block_371
      check: addr_0_block_373: // preds: addr_0_block_368
      nextln:   store.i64 v1507, v1449
      nextln:   jump addr_0_block_374
      check: addr_0_block_374: // preds: addr_0_block_369 addr_0_block_373
      check: addr_0_block_375: // preds: addr_0_block_361
      nextln:   jump addr_0_block_376(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_376(v1508: i8, v1509: i1, v1510: i16, v1511: i8, v1512: bool, v1513: bool, v1514: bool, v1515: int, v1516: i64, v1517: i8, v1518: i8, v1519: i52, v1520: i1, v1521: bool, v1522: bool, v1523: int, v1524: i1, v1525: bool, v1526: i4, v1527: i2, v1528: i4, v1529: i8, v1530: i8, v1531: i2, v1532: i2, v1533: bool, v1534: i2, v1535: i2, v1536: bool, v1537: bool, v1538: bool, v1539: bool, v1540: i52, v1541: i1, v1542: i64, v1543: i2, v1544: bool): // preds: addr_0_block_362 addr_0_block_375
      nextln:   v1545 = bool.icmp.i8.ne v1453, 0x0
      nextln:   v1546 = bool.bitwise_not v1545
      nextln:   v1547 = bool.and v1546, 0x1
      nextln:   v1548 = bool.icmp.i8.ne v1453, 0x0
      nextln:   v1549 = bool.bitwise_not v1548
      nextln:   v1550 = bool.and 0x1, v1549
      nextln:   jumpif v1550, addr_0_block_377, addr_0_block_378
      check: addr_0_block_377: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_378: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_379: // preds: addr_0_block_377 addr_0_block_378
      nextln:   v1551 = bool.icmp.i8.ne v1453, 0x0
      nextln:   jumpif v1551, addr_0_block_380, addr_0_block_381
      check: addr_0_block_380: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_381: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_382: // preds: addr_0_block_380 addr_0_block_381
      nextln:   jumpif v1474, addr_0_block_383, addr_0_block_384
      check: addr_0_block_383: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_384: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_385: // preds: addr_0_block_383 addr_0_block_384
      nextln:   v1552 = i52.unsigned_from_bits v1476
      nextln:   v1553 = int.modulo v1552, 0x8
      nextln:   v1554 = int.sub v1552, v1553
      nextln:   v1555 = i52.to_bits v1554
      nextln:   v1556 = bool.icmp.i52.eq v1476, v1555
      nextln:   v1557 = bool.icmp.i52.eq v1476, 0x13000000
      nextln:   jumpif v1557, addr_0_block_386, addr_0_block_390
      check: addr_0_block_386: // preds: addr_0_block_385
      nextln:   v1558 = i64.unsigned_from_bits v1
      nextln:   v1559 = bool.icmp.int.eq v1558, 0x4
      nextln:   jumpif v1559, addr_0_block_387, addr_0_block_388
      nextln:   jump addr_0_block_391
      check: addr_0_block_387: // no preds!
      nextln:   jump addr_0_block_389
      check: addr_0_block_388: // no preds!
      nextln:   v1575 = i8.trunc.i64 v1
      nextln:   v1576 = i8.unsigned_from_bits v1575
      nextln:   jump addr_0_block_389
      check: addr_0_block_389: // preds: addr_0_block_387 addr_0_block_388
      check: addr_0_block_390: // preds: addr_0_block_385
      nextln:   store.i64 v1, v1476
      nextln:   jump addr_0_block_391
      check: addr_0_block_391: // preds: addr_0_block_386 addr_0_block_390
      check: addr_0_block_392(v19: i64, v20: i8): // preds: addr_0_block_0 addr_0_block_348
      nextln:   v21 = i64.wrapping_add v0, 0x2
      nextln:   write_reg.i64 v21, "x0"
- name: str_2
  bytes: [0x00, 0x14, 0x00, 0xb8]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x0"
      nextln:   v1 = i64.read_reg "x0"
      nextln:   v2 = i32.trunc.i64 v1
      nextln:   v3 = i64.unsigned_from_bits v0
      nextln:   v4 = int.modulo v3, 0x4
      nextln:   v5 = int.sub v3, v4
      nextln:   v6 = i64.to_bits v5
      nextln:   v7 = bool.icmp.i64.eq v0, v6
      nextln:   v8 = bool.bitwise_not v7
      nextln:   v9 = bool.bitwise_not v7
      nextln:   jumpif v9, addr_0_block_0, addr_0_block_176
      check: addr_0_block_0: // preds: entry
      nextln:   v10 = i8.trunc.i32 v2
      nextln:   v11 = i64.unsigned_from_bits v0
      nextln:   v12 = int.modulo v11, 0x1
      nextln:   v13 = int.sub v11, v12
      nextln:   v14 = i64.to_bits v13
      nextln:   v15 = bool.icmp.i64.eq v0, v14
      nextln:   v16 = i64.lshr v0, 0x30
      nextln:   v17 = i16.trunc.i64 v16
      nextln:   v18 = bool.icmp.i16.eq v17, 0x0
      nextln:   v19 = bool.bitwise_not v18
      nextln:   jumpif v19, addr_0_block_1, addr_0_block_2
      nextln:   jump addr_0_block_220(v179, v180)
      check: addr_0_block_1: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_2: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_3(v670: i52, v671: int, v672: bool, v673: bool): // preds: addr_0_block_2
      nextln:   v674 = i52.trunc.i64 v0
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v674, 0x1, 0x0)
      check: addr_0_block_4(v32: i3, v33: i1, v34: i1, v35: i1, v36: i1, v37: i4, v38: i1, v39: bool, v40: int, v41: int, v42: bool, v43: bool, v44: i8, v45: i8, v46: i52, v47: i1, v48: bool, v49: bool, v50: int, v51: i1, v52: bool, v53: i4, v54: i2, v55: i4, v56: i8, v57: i8, v58: i2, v59: i2, v60: bool, v61: i2, v62: i2, v63: bool, v64: bool, v65: bool, v66: bool, v67: i52, v68: i1, v69: i64, v70: i1, v71: i8, v72: i8, v73: i52, v74: i1, v75: bool, v76: bool, v77: int, v78: i1, v79: bool, v80: i4, v81: i2, v82: i4, v83: i8, v84: i8, v85: i2, v86: i2, v87: bool, v88: i2, v89: i2, v90: bool, v91: bool, v92: bool, v93: bool, v94: i52, v95: i1, v96: i64): // preds: addr_0_block_1 addr_0_block_3
      nextln:   v97 = bool.icmp.i8.ne v71, 0x0
      nextln:   v98 = bool.bitwise_not v97
      nextln:   v99 = bool.bitwise_not v7
      nextln:   v100 = bool.and v99, 0x1
      nextln:   v101 = bool.or v100, 0x0
      nextln:   v102 = bool.icmp.i8.ne v71, 0x0
      nextln:   v103 = bool.bitwise_not v102
      nextln:   v104 = bool.and v101, v103
      nextln:   v105 = bool.icmp.i8.eq v83, 0x1
      nextln:   v106 = bool.and v104, v105
      nextln:   jumpif v106, addr_0_block_5, addr_0_block_6
      check: addr_0_block_5: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_6: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_7: // preds: addr_0_block_5 addr_0_block_6
      nextln:   v107 = bool.icmp.i8.ne v71, 0x0
      nextln:   v108 = bool.bitwise_not v107
      nextln:   v109 = bool.icmp.i8.ne v71, 0x0
      nextln:   v110 = bool.bitwise_not v109
      nextln:   v111 = bool.icmp.i8.eq v83, 0x1
      nextln:   v112 = bool.and v110, v111
      nextln:   jumpif v42, addr_0_block_8, addr_0_block_9
      check: addr_0_block_8: // preds: addr_0_block_7
      nextln:   v113 = bool.icmp.i8.eq v71, 0x0
      nextln:   jump addr_0_block_10(0x1)
      check: addr_0_block_9: // preds: addr_0_block_7
      nextln:   jump addr_0_block_10(0x0)
      check: addr_0_block_10(v114: bool): // preds: addr_0_block_8 addr_0_block_9
      nextln:   v115 = bool.icmp.i8.eq v71, 0x0
      nextln:   v116 = bool.and v43, v115
      nextln:   jumpif v116, addr_0_block_11, addr_0_block_12
      check: addr_0_block_11: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x1, 0x1)
      check: addr_0_block_12: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x0, 0x0)
      check: addr_0_block_13(v117: bool, v118: bool): // preds: addr_0_block_11 addr_0_block_12
      nextln:   v119 = bool.or v114, v117
      nextln:   jumpif v119, addr_0_block_14, addr_0_block_27
      check: addr_0_block_14: // preds: addr_0_block_13
      nextln:   v120 = i52.unsigned_from_bits v67
      nextln:   v121 = int.modulo v120, 0x8
      nextln:   v122 = int.sub v120, v121
      nextln:   v123 = i52.to_bits v122
      nextln:   v124 = bool.icmp.i52.eq v67, v123
      nextln:   v125 = i64.load v67
      nextln:   jumpif v114, addr_0_block_15, addr_0_block_16
      nextln:   jump addr_0_block_28(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v125, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, 0x0, 0x0)
      check: addr_0_block_15: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_16: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_17: // preds: addr_0_block_15 addr_0_block_16
      nextln:   jumpif v117, addr_0_block_18, addr_0_block_19
      check: addr_0_block_18: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_19: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_20: // preds: addr_0_block_18 addr_0_block_19
      nextln:   v675 = i52.unsigned_from_bits v67
      nextln:   v676 = int.modulo v675, 0x8
      nextln:   v677 = int.sub v675, v676
      nextln:   v678 = i52.to_bits v677
      nextln:   v679 = bool.icmp.i52.eq v67, v678
      nextln:   v680 = bool.icmp.i52.eq v67, 0x13000000
      nextln:   jumpif v680, addr_0_block_21, addr_0_block_25
      check: addr_0_block_21: // preds: addr_0_block_20
      nextln:   v681 = i64.unsigned_from_bits v125
      nextln:   v682 = bool.icmp.int.eq v681, 0x4
      nextln:   jumpif v682, addr_0_block_22, addr_0_block_23
      nextln:   jump addr_0_block_26
      check: addr_0_block_22: // no preds!
      nextln:   jump addr_0_block_24
      check: addr_0_block_23: // no preds!
      nextln:   v683 = i8.trunc.i64 v125
      nextln:   v684 = i8.unsigned_from_bits v683
      nextln:   jump addr_0_block_24
      check: addr_0_block_24: // preds: addr_0_block_22 addr_0_block_23
      check: addr_0_block_25: // preds: addr_0_block_20
      nextln:   store.i64 v125, v67
      nextln:   jump addr_0_block_26
      check: addr_0_block_26: // preds: addr_0_block_21 addr_0_block_25
      check: addr_0_block_27: // preds: addr_0_block_13
      nextln:   jump addr_0_block_28(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_28(v126: i8, v127: i1, v128: i16, v129: i8, v130: bool, v131: bool, v132: bool, v133: int, v134: i64, v135: i8, v136: i8, v137: i52, v138: i1, v139: bool, v140: bool, v141: int, v142: i1, v143: bool, v144: i4, v145: i2, v146: i4, v147: i8, v148: i8, v149: i2, v150: i2, v151: bool, v152: i2, v153: i2, v154: bool, v155: bool, v156: bool, v157: bool, v158: i52, v159: i1, v160: i64, v161: i2, v162: bool): // preds: addr_0_block_14 addr_0_block_27
      nextln:   v163 = bool.icmp.i8.ne v71, 0x0
      nextln:   v164 = bool.bitwise_not v163
      nextln:   v165 = bool.and v164, 0x1
      nextln:   v166 = bool.icmp.i8.ne v71, 0x0
      nextln:   v167 = bool.bitwise_not v166
      nextln:   v168 = bool.and 0x1, v167
      nextln:   jumpif v168, addr_0_block_29, addr_0_block_30
      check: addr_0_block_29: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_30: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_31: // preds: addr_0_block_29 addr_0_block_30
      nextln:   v169 = bool.icmp.i8.ne v71, 0x0
      nextln:   jumpif v169, addr_0_block_32, addr_0_block_33
      check: addr_0_block_32: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_33: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_34: // preds: addr_0_block_32 addr_0_block_33
      nextln:   jumpif v92, addr_0_block_35, addr_0_block_36
      check: addr_0_block_35: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_36: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_37: // preds: addr_0_block_35 addr_0_block_36
      nextln:   v170 = i52.unsigned_from_bits v94
      nextln:   v171 = int.modulo v170, 0x1
      nextln:   v172 = int.sub v170, v171
      nextln:   v173 = i52.to_bits v172
      nextln:   v174 = bool.icmp.i52.eq v94, v173
      nextln:   v175 = bool.icmp.i52.eq v94, 0x13000000
      nextln:   jumpif v175, addr_0_block_38, addr_0_block_42
      check: addr_0_block_38: // preds: addr_0_block_37
      nextln:   v176 = i8.unsigned_from_bits v10
      nextln:   v177 = bool.icmp.int.eq v176, 0x4
      nextln:   jumpif v177, addr_0_block_39, addr_0_block_40
      nextln:   jump addr_0_block_43
      check: addr_0_block_39: // no preds!
      nextln:   jump addr_0_block_41
      check: addr_0_block_40: // no preds!
      nextln:   v685 = i8.unsigned_from_bits v10
      nextln:   jump addr_0_block_41
      check: addr_0_block_41: // preds: addr_0_block_39 addr_0_block_40
      check: addr_0_block_42: // preds: addr_0_block_37
      nextln:   store.i8 v10, v94
      nextln:   jump addr_0_block_43
      check: addr_0_block_43: // preds: addr_0_block_38 addr_0_block_42
      nextln:   v178 = bool.bitwise_not v7
      nextln:   jumpif v178, addr_0_block_44, addr_0_block_45
      check: addr_0_block_44: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v7, 0xc)
      check: addr_0_block_45: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v7, 0x0)
      check: addr_0_block_46(v179: i64, v180: i8): // preds: addr_0_block_44 addr_0_block_45
      nextln:   v181 = i32.lshr v2, 0x8
      nextln:   v182 = i8.trunc.i32 v181
      nextln:   v183 = i64.wrapping_add v0, 0x1
      nextln:   v184 = i64.unsigned_from_bits v183
      nextln:   v185 = int.modulo v184, 0x1
      nextln:   v186 = int.sub v184, v185
      nextln:   v187 = i64.to_bits v186
      nextln:   v188 = bool.icmp.i64.eq v183, v187
      nextln:   v189 = i64.lshr v183, 0x30
      nextln:   v190 = i16.trunc.i64 v189
      nextln:   v191 = bool.icmp.i16.eq v190, 0x0
      nextln:   v192 = bool.bitwise_not v191
      nextln:   jumpif v192, addr_0_block_47, addr_0_block_48
      check: addr_0_block_47: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_48: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_49(v665: i52, v666: int, v667: bool, v668: bool): // preds: addr_0_block_48
      nextln:   v669 = i52.trunc.i64 v183
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v669, 0x1, 0x0)
      check: addr_0_block_50(v193: i3, v194: i1, v195: i1, v196: i1, v197: i1, v198: i4, v199: i1, v200: bool, v201: int, v202: int, v203: bool, v204: bool, v205: i8, v206: i8, v207: i52, v208: i1, v209: bool, v210: bool, v211: int, v212: i1, v213: bool, v214: i4, v215: i2, v216: i4, v217: i8, v218: i8, v219: i2, v220: i2, v221: bool, v222: i2, v223: i2, v224: bool, v225: bool, v226: bool, v227: bool, v228: i52, v229: i1, v230: i64, v231: i1, v232: i8, v233: i8, v234: i52, v235: i1, v236: bool, v237: bool, v238: int, v239: i1, v240: bool, v241: i4, v242: i2, v243: i4, v244: i8, v245: i8, v246: i2, v247: i2, v248: bool, v249: i2, v250: i2, v251: bool, v252: bool, v253: bool, v254: bool, v255: i52, v256: i1, v257: i64): // preds: addr_0_block_47 addr_0_block_49
      nextln:   v258 = bool.icmp.i8.ne v232, 0x0
      nextln:   v259 = bool.bitwise_not v258
      nextln:   v260 = bool.bitwise_not v7
      nextln:   v261 = bool.and v260, 0x1
      nextln:   v262 = bool.or v261, 0x0
      nextln:   v263 = bool.icmp.i8.ne v232, 0x0
      nextln:   v264 = bool.bitwise_not v263
      nextln:   v265 = bool.and v262, v264
      nextln:   v266 = bool.icmp.i8.eq v244, 0x1
      nextln:   v267 = bool.and v265, v266
      nextln:   jumpif v267, addr_0_block_51, addr_0_block_52
      check: addr_0_block_51: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_52: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_53: // preds: addr_0_block_51 addr_0_block_52
      nextln:   v268 = bool.icmp.i8.ne v232, 0x0
      nextln:   v269 = bool.bitwise_not v268
      nextln:   v270 = bool.icmp.i8.ne v232, 0x0
      nextln:   v271 = bool.bitwise_not v270
      nextln:   v272 = bool.icmp.i8.eq v244, 0x1
      nextln:   v273 = bool.and v271, v272
      nextln:   jumpif v203, addr_0_block_54, addr_0_block_55
      check: addr_0_block_54: // preds: addr_0_block_53
      nextln:   v274 = bool.icmp.i8.eq v232, 0x0
      nextln:   jump addr_0_block_56(0x1)
      check: addr_0_block_55: // preds: addr_0_block_53
      nextln:   jump addr_0_block_56(0x0)
      check: addr_0_block_56(v275: bool): // preds: addr_0_block_54 addr_0_block_55
      nextln:   v276 = bool.icmp.i8.eq v232, 0x0
      nextln:   v277 = bool.and v204, v276
      nextln:   jumpif v277, addr_0_block_57, addr_0_block_58
      check: addr_0_block_57: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x1, 0x1)
      check: addr_0_block_58: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x0, 0x0)
      check: addr_0_block_59(v278: bool, v279: bool): // preds: addr_0_block_57 addr_0_block_58
      nextln:   v280 = bool.or v275, v278
      nextln:   jumpif v280, addr_0_block_60, addr_0_block_73
      check: addr_0_block_60: // preds: addr_0_block_59
      nextln:   v281 = i52.unsigned_from_bits v228
      nextln:   v282 = int.modulo v281, 0x8
      nextln:   v283 = int.sub v281, v282
      nextln:   v284 = i52.to_bits v283
      nextln:   v285 = bool.icmp.i52.eq v228, v284
      nextln:   v286 = i64.load v228
      nextln:   jumpif v275, addr_0_block_61, addr_0_block_62
      nextln:   jump addr_0_block_74(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v286, v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, v230, 0x0, 0x0)
      check: addr_0_block_61: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_62: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_63: // preds: addr_0_block_61 addr_0_block_62
      nextln:   jumpif v278, addr_0_block_64, addr_0_block_65
      check: addr_0_block_64: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_65: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_66: // preds: addr_0_block_64 addr_0_block_65
      nextln:   v686 = i52.unsigned_from_bits v228
      nextln:   v687 = int.modulo v686, 0x8
      nextln:   v688 = int.sub v686, v687
      nextln:   v689 = i52.to_bits v688
      nextln:   v690 = bool.icmp.i52.eq v228, v689
      nextln:   v691 = bool.icmp.i52.eq v228, 0x13000000
      nextln:   jumpif v691, addr_0_block_67, addr_0_block_71
      check: addr_0_block_67: // preds: addr_0_block_66
      nextln:   v692 = i64.unsigned_from_bits v286
      nextln:   v693 = bool.icmp.int.eq v692, 0x4
      nextln:   jumpif v693, addr_0_block_68, addr_0_block_69
      nextln:   jump addr_0_block_72
      check: addr_0_block_68: // no preds!
      nextln:   jump addr_0_block_70
      check: addr_0_block_69: // no preds!
      nextln:   v694 = i8.trunc.i64 v286
      nextln:   v695 = i8.unsigned_from_bits v694
      nextln:   jump addr_0_block_70
      check: addr_0_block_70: // preds: addr_0_block_68 addr_0_block_69
      check: addr_0_block_71: // preds: addr_0_block_66
      nextln:   store.i64 v286, v228
      nextln:   jump addr_0_block_72
      check: addr_0_block_72: // preds: addr_0_block_67 addr_0_block_71
      check: addr_0_block_73: // preds: addr_0_block_59
      nextln:   jump addr_0_block_74(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_74(v287: i8, v288: i1, v289: i16, v290: i8, v291: bool, v292: bool, v293: bool, v294: int, v295: i64, v296: i8, v297: i8, v298: i52, v299: i1, v300: bool, v301: bool, v302: int, v303: i1, v304: bool, v305: i4, v306: i2, v307: i4, v308: i8, v309: i8, v310: i2, v311: i2, v312: bool, v313: i2, v314: i2, v315: bool, v316: bool, v317: bool, v318: bool, v319: i52, v320: i1, v321: i64, v322: i2, v323: bool): // preds: addr_0_block_60 addr_0_block_73
      nextln:   v324 = bool.icmp.i8.ne v232, 0x0
      nextln:   v325 = bool.bitwise_not v324
      nextln:   v326 = bool.and v325, 0x1
      nextln:   v327 = bool.icmp.i8.ne v232, 0x0
      nextln:   v328 = bool.bitwise_not v327
      nextln:   v329 = bool.and 0x1, v328
      nextln:   jumpif v329, addr_0_block_75, addr_0_block_76
      check: addr_0_block_75: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_76: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_77: // preds: addr_0_block_75 addr_0_block_76
      nextln:   v330 = bool.icmp.i8.ne v232, 0x0
      nextln:   jumpif v330, addr_0_block_78, addr_0_block_79
      check: addr_0_block_78: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_79: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_80: // preds: addr_0_block_78 addr_0_block_79
      nextln:   jumpif v253, addr_0_block_81, addr_0_block_82
      check: addr_0_block_81: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_82: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_83: // preds: addr_0_block_81 addr_0_block_82
      nextln:   v331 = i52.unsigned_from_bits v255
      nextln:   v332 = int.modulo v331, 0x1
      nextln:   v333 = int.sub v331, v332
      nextln:   v334 = i52.to_bits v333
      nextln:   v335 = bool.icmp.i52.eq v255, v334
      nextln:   v336 = bool.icmp.i52.eq v255, 0x13000000
      nextln:   jumpif v336, addr_0_block_84, addr_0_block_88
      check: addr_0_block_84: // preds: addr_0_block_83
      nextln:   v337 = i8.unsigned_from_bits v182
      nextln:   v338 = bool.icmp.int.eq v337, 0x4
      nextln:   jumpif v338, addr_0_block_85, addr_0_block_86
      nextln:   jump addr_0_block_89
      check: addr_0_block_85: // no preds!
      nextln:   jump addr_0_block_87
      check: addr_0_block_86: // no preds!
      nextln:   v696 = i8.unsigned_from_bits v182
      nextln:   jump addr_0_block_87
      check: addr_0_block_87: // preds: addr_0_block_85 addr_0_block_86
      check: addr_0_block_88: // preds: addr_0_block_83
      nextln:   store.i8 v182, v255
      nextln:   jump addr_0_block_89
      check: addr_0_block_89: // preds: addr_0_block_84 addr_0_block_88
      nextln:   v339 = i32.lshr v2, 0x10
      nextln:   v340 = i8.trunc.i32 v339
      nextln:   v341 = i64.wrapping_add v0, 0x2
      nextln:   v342 = i64.unsigned_from_bits v341
      nextln:   v343 = int.modulo v342, 0x1
      nextln:   v344 = int.sub v342, v343
      nextln:   v345 = i64.to_bits v344
      nextln:   v346 = bool.icmp.i64.eq v341, v345
      nextln:   v347 = i64.lshr v341, 0x30
      nextln:   v348 = i16.trunc.i64 v347
      nextln:   v349 = bool.icmp.i16.eq v348, 0x0
      nextln:   v350 = bool.bitwise_not v349
      nextln:   jumpif v350, addr_0_block_90, addr_0_block_91
      check: addr_0_block_90: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_91: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_92(v660: i52, v661: int, v662: bool, v663: bool): // preds: addr_0_block_91
      nextln:   v664 = i52.trunc.i64 v341
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v664, 0x1, 0x0)
      check: addr_0_block_93(v351: i3, v352: i1, v353: i1, v354: i1, v355: i1, v356: i4, v357: i1, v358: bool, v359: int, v360: int, v361: bool, v362: bool, v363: i8, v364: i8, v365: i52, v366: i1, v367: bool, v368: bool, v369: int, v370: i1, v371: bool, v372: i4, v373: i2, v374: i4, v375: i8, v376: i8, v377: i2, v378: i2, v379: bool, v380: i2, v381: i2, v382: bool, v383: bool, v384: bool, v385: bool, v386: i52, v387: i1, v388: i64, v389: i1, v390: i8, v391: i8, v392: i52, v393: i1, v394: bool, v395: bool, v396: int, v397: i1, v398: bool, v399: i4, v400: i2, v401: i4, v402: i8, v403: i8, v404: i2, v405: i2, v406: bool, v407: i2, v408: i2, v409: bool, v410: bool, v411: bool, v412: bool, v413: i52, v414: i1, v415: i64): // preds: addr_0_block_90 addr_0_block_92
      nextln:   v416 = bool.icmp.i8.ne v390, 0x0
      nextln:   v417 = bool.bitwise_not v416
      nextln:   v418 = bool.bitwise_not v7
      nextln:   v419 = bool.and v418, 0x1
      nextln:   v420 = bool.or v419, 0x0
      nextln:   v421 = bool.icmp.i8.ne v390, 0x0
      nextln:   v422 = bool.bitwise_not v421
      nextln:   v423 = bool.and v420, v422
      nextln:   v424 = bool.icmp.i8.eq v402, 0x1
      nextln:   v425 = bool.and v423, v424
      nextln:   jumpif v425, addr_0_block_94, addr_0_block_95
      check: addr_0_block_94: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_95: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_96: // preds: addr_0_block_94 addr_0_block_95
      nextln:   v426 = bool.icmp.i8.ne v390, 0x0
      nextln:   v427 = bool.bitwise_not v426
      nextln:   v428 = bool.icmp.i8.ne v390, 0x0
      nextln:   v429 = bool.bitwise_not v428
      nextln:   v430 = bool.icmp.i8.eq v402, 0x1
      nextln:   v431 = bool.and v429, v430
      nextln:   jumpif v361, addr_0_block_97, addr_0_block_98
      check: addr_0_block_97: // preds: addr_0_block_96
      nextln:   v432 = bool.icmp.i8.eq v390, 0x0
      nextln:   jump addr_0_block_99(0x1)
      check: addr_0_block_98: // preds: addr_0_block_96
      nextln:   jump addr_0_block_99(0x0)
      check: addr_0_block_99(v433: bool): // preds: addr_0_block_97 addr_0_block_98
      nextln:   v434 = bool.icmp.i8.eq v390, 0x0
      nextln:   v435 = bool.and v362, v434
      nextln:   jumpif v435, addr_0_block_100, addr_0_block_101
      check: addr_0_block_100: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x1, 0x1)
      check: addr_0_block_101: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x0, 0x0)
      check: addr_0_block_102(v436: bool, v437: bool): // preds: addr_0_block_100 addr_0_block_101
      nextln:   v438 = bool.or v433, v436
      nextln:   jumpif v438, addr_0_block_103, addr_0_block_116
      check: addr_0_block_103: // preds: addr_0_block_102
      nextln:   v439 = i52.unsigned_from_bits v386
      nextln:   v440 = int.modulo v439, 0x8
      nextln:   v441 = int.sub v439, v440
      nextln:   v442 = i52.to_bits v441
      nextln:   v443 = bool.icmp.i52.eq v386, v442
      nextln:   v444 = i64.load v386
      nextln:   jumpif v433, addr_0_block_104, addr_0_block_105
      nextln:   jump addr_0_block_117(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v444, v363, v364, v365, v366, v367, v368, v369, v370, v371, v372, v373, v374, v375, v376, v377, v378, v379, v380, v381, v382, v383, v384, v385, v386, v387, v388, 0x0, 0x0)
      check: addr_0_block_104: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_105: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_106: // preds: addr_0_block_104 addr_0_block_105
      nextln:   jumpif v436, addr_0_block_107, addr_0_block_108
      check: addr_0_block_107: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_108: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_109: // preds: addr_0_block_107 addr_0_block_108
      nextln:   v697 = i52.unsigned_from_bits v386
      nextln:   v698 = int.modulo v697, 0x8
      nextln:   v699 = int.sub v697, v698
      nextln:   v700 = i52.to_bits v699
      nextln:   v701 = bool.icmp.i52.eq v386, v700
      nextln:   v702 = bool.icmp.i52.eq v386, 0x13000000
      nextln:   jumpif v702, addr_0_block_110, addr_0_block_114
      check: addr_0_block_110: // preds: addr_0_block_109
      nextln:   v703 = i64.unsigned_from_bits v444
      nextln:   v704 = bool.icmp.int.eq v703, 0x4
      nextln:   jumpif v704, addr_0_block_111, addr_0_block_112
      nextln:   jump addr_0_block_115
      check: addr_0_block_111: // no preds!
      nextln:   jump addr_0_block_113
      check: addr_0_block_112: // no preds!
      nextln:   v705 = i8.trunc.i64 v444
      nextln:   v706 = i8.unsigned_from_bits v705
      nextln:   jump addr_0_block_113
      check: addr_0_block_113: // preds: addr_0_block_111 addr_0_block_112
      check: addr_0_block_114: // preds: addr_0_block_109
      nextln:   store.i64 v444, v386
      nextln:   jump addr_0_block_115
      check: addr_0_block_115: // preds: addr_0_block_110 addr_0_block_114
      check: addr_0_block_116: // preds: addr_0_block_102
      nextln:   jump addr_0_block_117(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_117(v445: i8, v446: i1, v447: i16, v448: i8, v449: bool, v450: bool, v451: bool, v452: int, v453: i64, v454: i8, v455: i8, v456: i52, v457: i1, v458: bool, v459: bool, v460: int, v461: i1, v462: bool, v463: i4, v464: i2, v465: i4, v466: i8, v467: i8, v468: i2, v469: i2, v470: bool, v471: i2, v472: i2, v473: bool, v474: bool, v475: bool, v476: bool, v477: i52, v478: i1, v479: i64, v480: i2, v481: bool): // preds: addr_0_block_103 addr_0_block_116
      nextln:   v482 = bool.icmp.i8.ne v390, 0x0
      nextln:   v483 = bool.bitwise_not v482
      nextln:   v484 = bool.and v483, 0x1
      nextln:   v485 = bool.icmp.i8.ne v390, 0x0
      nextln:   v486 = bool.bitwise_not v485
      nextln:   v487 = bool.and 0x1, v486
      nextln:   jumpif v487, addr_0_block_118, addr_0_block_119
      check: addr_0_block_118: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_119: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_120: // preds: addr_0_block_118 addr_0_block_119
      nextln:   v488 = bool.icmp.i8.ne v390, 0x0
      nextln:   jumpif v488, addr_0_block_121, addr_0_block_122
      check: addr_0_block_121: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_122: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_123: // preds: addr_0_block_121 addr_0_block_122
      nextln:   jumpif v411, addr_0_block_124, addr_0_block_125
      check: addr_0_block_124: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_125: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_126: // preds: addr_0_block_124 addr_0_block_125
      nextln:   v489 = i52.unsigned_from_bits v413
      nextln:   v490 = int.modulo v489, 0x1
      nextln:   v491 = int.sub v489, v490
      nextln:   v492 = i52.to_bits v491
      nextln:   v493 = bool.icmp.i52.eq v413, v492
      nextln:   v494 = bool.icmp.i52.eq v413, 0x13000000
      nextln:   jumpif v494, addr_0_block_127, addr_0_block_131
      check: addr_0_block_127: // preds: addr_0_block_126
      nextln:   v495 = i8.unsigned_from_bits v340
      nextln:   v496 = bool.icmp.int.eq v495, 0x4
      nextln:   jumpif v496, addr_0_block_128, addr_0_block_129
      nextln:   jump addr_0_block_132
      check: addr_0_block_128: // no preds!
      nextln:   jump addr_0_block_130
      check: addr_0_block_129: // no preds!
      nextln:   v707 = i8.unsigned_from_bits v340
      nextln:   jump addr_0_block_130
      check: addr_0_block_130: // preds: addr_0_block_128 addr_0_block_129
      check: addr_0_block_131: // preds: addr_0_block_126
      nextln:   store.i8 v340, v413
      nextln:   jump addr_0_block_132
      check: addr_0_block_132: // preds: addr_0_block_127 addr_0_block_131
      nextln:   v497 = i32.lshr v2, 0x18
      nextln:   v498 = i8.trunc.i32 v497
      nextln:   v499 = i64.wrapping_add v0, 0x3
      nextln:   v500 = i64.unsigned_from_bits v499
      nextln:   v501 = int.modulo v500, 0x1
      nextln:   v502 = int.sub v500, v501
      nextln:   v503 = i64.to_bits v502
      nextln:   v504 = bool.icmp.i64.eq v499, v503
      nextln:   v505 = i64.lshr v499, 0x30
      nextln:   v506 = i16.trunc.i64 v505
      nextln:   v507 = bool.icmp.i16.eq v506, 0x0
      nextln:   v508 = bool.bitwise_not v507
      nextln:   jumpif v508, addr_0_block_133, addr_0_block_134
      check: addr_0_block_133: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_134: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_135(v655: i52, v656: int, v657: bool, v658: bool): // preds: addr_0_block_134
      nextln:   v659 = i52.trunc.i64 v499
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v659, 0x1, 0x0)
      check: addr_0_block_136(v509: i3, v510: i1, v511: i1, v512: i1, v513: i1, v514: i4, v515: i1, v516: bool, v517: int, v518: int, v519: bool, v520: bool, v521: i8, v522: i8, v523: i52, v524: i1, v525: bool, v526: bool, v527: int, v528: i1, v529: bool, v530: i4, v531: i2, v532: i4, v533: i8, v534: i8, v535: i2, v536: i2, v537: bool, v538: i2, v539: i2, v540: bool, v541: bool, v542: bool, v543: bool, v544: i52, v545: i1, v546: i64, v547: i1, v548: i8, v549: i8, v550: i52, v551: i1, v552: bool, v553: bool, v554: int, v555: i1, v556: bool, v557: i4, v558: i2, v559: i4, v560: i8, v561: i8, v562: i2, v563: i2, v564: bool, v565: i2, v566: i2, v567: bool, v568: bool, v569: bool, v570: bool, v571: i52, v572: i1, v573: i64): // preds: addr_0_block_133 addr_0_block_135
      nextln:   v574 = bool.icmp.i8.ne v548, 0x0
      nextln:   v575 = bool.bitwise_not v574
      nextln:   v576 = bool.bitwise_not v7
      nextln:   v577 = bool.and v576, 0x1
      nextln:   v578 = bool.or v577, 0x0
      nextln:   v579 = bool.icmp.i8.ne v548, 0x0
      nextln:   v580 = bool.bitwise_not v579
      nextln:   v581 = bool.and v578, v580
      nextln:   v582 = bool.icmp.i8.eq v560, 0x1
      nextln:   v583 = bool.and v581, v582
      nextln:   jumpif v583, addr_0_block_137, addr_0_block_138
      check: addr_0_block_137: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_138: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_139: // preds: addr_0_block_137 addr_0_block_138
      nextln:   v584 = bool.icmp.i8.ne v548, 0x0
      nextln:   v585 = bool.bitwise_not v584
      nextln:   v586 = bool.icmp.i8.ne v548, 0x0
      nextln:   v587 = bool.bitwise_not v586
      nextln:   v588 = bool.icmp.i8.eq v560, 0x1
      nextln:   v589 = bool.and v587, v588
      nextln:   jumpif v519, addr_0_block_140, addr_0_block_141
      check: addr_0_block_140: // preds: addr_0_block_139
      nextln:   v590 = bool.icmp.i8.eq v548, 0x0
      nextln:   jump addr_0_block_142(0x1)
      check: addr_0_block_141: // preds: addr_0_block_139
      nextln:   jump addr_0_block_142(0x0)
      check: addr_0_block_142(v591: bool): // preds: addr_0_block_140 addr_0_block_141
      nextln:   v592 = bool.icmp.i8.eq v548, 0x0
      nextln:   v593 = bool.and v520, v592
      nextln:   jumpif v593, addr_0_block_143, addr_0_block_144
      check: addr_0_block_143: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x1, 0x1)
      check: addr_0_block_144: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x0, 0x0)
      check: addr_0_block_145(v594: bool, v595: bool): // preds: addr_0_block_143 addr_0_block_144
      nextln:   v596 = bool.or v591, v594
      nextln:   jumpif v596, addr_0_block_146, addr_0_block_159
      check: addr_0_block_146: // preds: addr_0_block_145
      nextln:   v597 = i52.unsigned_from_bits v544
      nextln:   v598 = int.modulo v597, 0x8
      nextln:   v599 = int.sub v597, v598
      nextln:   v600 = i52.to_bits v599
      nextln:   v601 = bool.icmp.i52.eq v544, v600
      nextln:   v602 = i64.load v544
      nextln:   jumpif v591, addr_0_block_147, addr_0_block_148
      nextln:   jump addr_0_block_160(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v602, v521, v522, v523, v524, v525, v526, v527, v528, v529, v530, v531, v532, v533, v534, v535, v536, v537, v538, v539, v540, v541, v542, v543, v544, v545, v546, 0x0, 0x0)
      check: addr_0_block_147: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_148: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_149: // preds: addr_0_block_147 addr_0_block_148
      nextln:   jumpif v594, addr_0_block_150, addr_0_block_151
      check: addr_0_block_150: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_151: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_152: // preds: addr_0_block_150 addr_0_block_151
      nextln:   v708 = i52.unsigned_from_bits v544
      nextln:   v709 = int.modulo v708, 0x8
      nextln:   v710 = int.sub v708, v709
      nextln:   v711 = i52.to_bits v710
      nextln:   v712 = bool.icmp.i52.eq v544, v711
      nextln:   v713 = bool.icmp.i52.eq v544, 0x13000000
      nextln:   jumpif v713, addr_0_block_153, addr_0_block_157
      check: addr_0_block_153: // preds: addr_0_block_152
      nextln:   v714 = i64.unsigned_from_bits v602
      nextln:   v715 = bool.icmp.int.eq v714, 0x4
      nextln:   jumpif v715, addr_0_block_154, addr_0_block_155
      nextln:   jump addr_0_block_158
      check: addr_0_block_154: // no preds!
      nextln:   jump addr_0_block_156
      check: addr_0_block_155: // no preds!
      nextln:   v716 = i8.trunc.i64 v602
      nextln:   v717 = i8.unsigned_from_bits v716
      nextln:   jump addr_0_block_156
      check: addr_0_block_156: // preds: addr_0_block_154 addr_0_block_155
      check: addr_0_block_157: // preds: addr_0_block_152
      nextln:   store.i64 v602, v544
      nextln:   jump addr_0_block_158
      check: addr_0_block_158: // preds: addr_0_block_153 addr_0_block_157
      check: addr_0_block_159: // preds: addr_0_block_145
      nextln:   jump addr_0_block_160(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_160(v603: i8, v604: i1, v605: i16, v606: i8, v607: bool, v608: bool, v609: bool, v610: int, v611: i64, v612: i8, v613: i8, v614: i52, v615: i1, v616: bool, v617: bool, v618: int, v619: i1, v620: bool, v621: i4, v622: i2, v623: i4, v624: i8, v625: i8, v626: i2, v627: i2, v628: bool, v629: i2, v630: i2, v631: bool, v632: bool, v633: bool, v634: bool, v635: i52, v636: i1, v637: i64, v638: i2, v639: bool): // preds: addr_0_block_146 addr_0_block_159
      nextln:   v640 = bool.icmp.i8.ne v548, 0x0
      nextln:   v641 = bool.bitwise_not v640
      nextln:   v642 = bool.and v641, 0x1
      nextln:   v643 = bool.icmp.i8.ne v548, 0x0
      nextln:   v644 = bool.bitwise_not v643
      nextln:   v645 = bool.and 0x1, v644
      nextln:   jumpif v645, addr_0_block_161, addr_0_block_162
      check: addr_0_block_161: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_162: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_163: // preds: addr_0_block_161 addr_0_block_162
      nextln:   v646 = bool.icmp.i8.ne v548, 0x0
      nextln:   jumpif v646, addr_0_block_164, addr_0_block_165
      check: addr_0_block_164: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_165: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_166: // preds: addr_0_block_164 addr_0_block_165
      nextln:   jumpif v569, addr_0_block_167, addr_0_block_168
      check: addr_0_block_167: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_168: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_169: // preds: addr_0_block_167 addr_0_block_168
      nextln:   v647 = i52.unsigned_from_bits v571
      nextln:   v648 = int.modulo v647, 0x1
      nextln:   v649 = int.sub v647, v648
      nextln:   v650 = i52.to_bits v649
      nextln:   v651 = bool.icmp.i52.eq v571, v650
      nextln:   v652 = bool.icmp.i52.eq v571, 0x13000000
      nextln:   jumpif v652, addr_0_block_170, addr_0_block_174
      check: addr_0_block_170: // preds: addr_0_block_169
      nextln:   v653 = i8.unsigned_from_bits v498
      nextln:   v654 = bool.icmp.int.eq v653, 0x4
      nextln:   jumpif v654, addr_0_block_171, addr_0_block_172
      nextln:   jump addr_0_block_175
      check: addr_0_block_171: // no preds!
      nextln:   jump addr_0_block_173
      check: addr_0_block_172: // no preds!
      nextln:   v718 = i8.unsigned_from_bits v498
      nextln:   jump addr_0_block_173
      check: addr_0_block_173: // preds: addr_0_block_171 addr_0_block_172
      check: addr_0_block_174: // preds: addr_0_block_169
      nextln:   store.i8 v498, v571
      nextln:   jump addr_0_block_175
      check: addr_0_block_175: // preds: addr_0_block_170 addr_0_block_174
      check: addr_0_block_176: // preds: entry
      nextln:   v23 = i64.unsigned_from_bits v0
      nextln:   v24 = int.modulo v23, 0x4
      nextln:   v25 = int.sub v23, v24
      nextln:   v26 = i64.to_bits v25
      nextln:   v27 = bool.icmp.i64.eq v0, v26
      nextln:   v28 = i64.lshr v0, 0x30
      nextln:   v29 = i16.trunc.i64 v28
      nextln:   v30 = bool.icmp.i16.eq v29, 0x0
      nextln:   v31 = bool.bitwise_not v30
      nextln:   jumpif v31, addr_0_block_177, addr_0_block_178
      nextln:   jump addr_0_block_220(v7, 0x0)
      check: addr_0_block_177: // no preds!
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_180(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_178: // no preds!
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_179(v865: i52, v866: int, v867: bool, v868: bool): // preds: addr_0_block_178
      nextln:   v869 = i52.trunc.i64 v0
      nextln:   jump addr_0_block_180(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v869, 0x1, 0x0)
      check: addr_0_block_180(v719: i3, v720: i1, v721: i1, v722: i1, v723: i1, v724: i4, v725: i1, v726: bool, v727: int, v728: int, v729: bool, v730: bool, v731: i8, v732: i8, v733: i52, v734: i1, v735: bool, v736: bool, v737: int, v738: i1, v739: bool, v740: i4, v741: i2, v742: i4, v743: i8, v744: i8, v745: i2, v746: i2, v747: bool, v748: i2, v749: i2, v750: bool, v751: bool, v752: bool, v753: bool, v754: i52, v755: i1, v756: i64, v757: i1, v758: i8, v759: i8, v760: i52, v761: i1, v762: bool, v763: bool, v764: int, v765: i1, v766: bool, v767: i4, v768: i2, v769: i4, v770: i8, v771: i8, v772: i2, v773: i2, v774: bool, v775: i2, v776: i2, v777: bool, v778: bool, v779: bool, v780: bool, v781: i52, v782: i1, v783: i64): // preds: addr_0_block_177 addr_0_block_179
      nextln:   v784 = bool.icmp.i8.ne v758, 0x0
      nextln:   v785 = bool.bitwise_not v784
      nextln:   v786 = bool.bitwise_not v7
      nextln:   v787 = bool.and v786, 0x1
      nextln:   v788 = bool.or v787, 0x0
      nextln:   v789 = bool.icmp.i8.ne v758, 0x0
      nextln:   v790 = bool.bitwise_not v789
      nextln:   v791 = bool.and v788, v790
      nextln:   v792 = bool.icmp.i8.eq v770, 0x1
      nextln:   v793 = bool.and v791, v792
      nextln:   jumpif v793, addr_0_block_181, addr_0_block_182
      check: addr_0_block_181: // preds: addr_0_block_180
      nextln:   jump addr_0_block_183
      check: addr_0_block_182: // preds: addr_0_block_180
      nextln:   jump addr_0_block_183
      check: addr_0_block_183: // preds: addr_0_block_181 addr_0_block_182
      nextln:   v794 = bool.icmp.i8.ne v758, 0x0
      nextln:   v795 = bool.bitwise_not v794
      nextln:   v796 = bool.icmp.i8.ne v758, 0x0
      nextln:   v797 = bool.bitwise_not v796
      nextln:   v798 = bool.icmp.i8.eq v770, 0x1
      nextln:   v799 = bool.and v797, v798
      nextln:   jumpif v729, addr_0_block_184, addr_0_block_185
      check: addr_0_block_184: // preds: addr_0_block_183
      nextln:   v800 = bool.icmp.i8.eq v758, 0x0
      nextln:   jump addr_0_block_186(0x1)
      check: addr_0_block_185: // preds: addr_0_block_183
      nextln:   jump addr_0_block_186(0x0)
      check: addr_0_block_186(v801: bool): // preds: addr_0_block_184 addr_0_block_185
      nextln:   v802 = bool.icmp.i8.eq v758, 0x0
      nextln:   v803 = bool.and v730, v802
      nextln:   jumpif v803, addr_0_block_187, addr_0_block_188
      check: addr_0_block_187: // preds: addr_0_block_186
      nextln:   jump addr_0_block_189(0x1, 0x1)
      check: addr_0_block_188: // preds: addr_0_block_186
      nextln:   jump addr_0_block_189(0x0, 0x0)
      check: addr_0_block_189(v804: bool, v805: bool): // preds: addr_0_block_187 addr_0_block_188
      nextln:   v806 = bool.or v801, v804
      nextln:   jumpif v806, addr_0_block_190, addr_0_block_203
      check: addr_0_block_190: // preds: addr_0_block_189
      nextln:   v807 = i52.unsigned_from_bits v754
      nextln:   v808 = int.modulo v807, 0x8
      nextln:   v809 = int.sub v807, v808
      nextln:   v810 = i52.to_bits v809
      nextln:   v811 = bool.icmp.i52.eq v754, v810
      nextln:   v812 = i64.load v754
      nextln:   jumpif v801, addr_0_block_191, addr_0_block_192
      nextln:   jump addr_0_block_204(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v812, v731, v732, v733, v734, v735, v736, v737, v738, v739, v740, v741, v742, v743, v744, v745, v746, v747, v748, v749, v750, v751, v752, v753, v754, v755, v756, 0x0, 0x0)
      check: addr_0_block_191: // no preds!
      nextln:   jump addr_0_block_193
      check: addr_0_block_192: // no preds!
      nextln:   jump addr_0_block_193
      check: addr_0_block_193: // preds: addr_0_block_191 addr_0_block_192
      nextln:   jumpif v804, addr_0_block_194, addr_0_block_195
      check: addr_0_block_194: // preds: addr_0_block_193
      nextln:   jump addr_0_block_196
      check: addr_0_block_195: // preds: addr_0_block_193
      nextln:   jump addr_0_block_196
      check: addr_0_block_196: // preds: addr_0_block_194 addr_0_block_195
      nextln:   v870 = i52.unsigned_from_bits v754
      nextln:   v871 = int.modulo v870, 0x8
      nextln:   v872 = int.sub v870, v871
      nextln:   v873 = i52.to_bits v872
      nextln:   v874 = bool.icmp.i52.eq v754, v873
      nextln:   v875 = bool.icmp.i52.eq v754, 0x13000000
      nextln:   jumpif v875, addr_0_block_197, addr_0_block_201
      check: addr_0_block_197: // preds: addr_0_block_196
      nextln:   v876 = i64.unsigned_from_bits v812
      nextln:   v877 = bool.icmp.int.eq v876, 0x4
      nextln:   jumpif v877, addr_0_block_198, addr_0_block_199
      nextln:   jump addr_0_block_202
      check: addr_0_block_198: // no preds!
      nextln:   jump addr_0_block_200
      check: addr_0_block_199: // no preds!
      nextln:   v878 = i8.trunc.i64 v812
      nextln:   v879 = i8.unsigned_from_bits v878
      nextln:   jump addr_0_block_200
      check: addr_0_block_200: // preds: addr_0_block_198 addr_0_block_199
      check: addr_0_block_201: // preds: addr_0_block_196
      nextln:   store.i64 v812, v754
      nextln:   jump addr_0_block_202
      check: addr_0_block_202: // preds: addr_0_block_197 addr_0_block_201
      check: addr_0_block_203: // preds: addr_0_block_189
      nextln:   jump addr_0_block_204(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_204(v813: i8, v814: i1, v815: i16, v816: i8, v817: bool, v818: bool, v819: bool, v820: int, v821: i64, v822: i8, v823: i8, v824: i52, v825: i1, v826: bool, v827: bool, v828: int, v829: i1, v830: bool, v831: i4, v832: i2, v833: i4, v834: i8, v835: i8, v836: i2, v837: i2, v838: bool, v839: i2, v840: i2, v841: bool, v842: bool, v843: bool, v844: bool, v845: i52, v846: i1, v847: i64, v848: i2, v849: bool): // preds: addr_0_block_190 addr_0_block_203
      nextln:   v850 = bool.icmp.i8.ne v758, 0x0
      nextln:   v851 = bool.bitwise_not v850
      nextln:   v852 = bool.and v851, 0x1
      nextln:   v853 = bool.icmp.i8.ne v758, 0x0
      nextln:   v854 = bool.bitwise_not v853
      nextln:   v855 = bool.and 0x1, v854
      nextln:   jumpif v855, addr_0_block_205, addr_0_block_206
      check: addr_0_block_205: // preds: addr_0_block_204
      nextln:   jump addr_0_block_207
      check: addr_0_block_206: // preds: addr_0_block_204
      nextln:   jump addr_0_block_207
      check: addr_0_block_207: // preds: addr_0_block_205 addr_0_block_206
      nextln:   v856 = bool.icmp.i8.ne v758, 0x0
      nextln:   jumpif v856, addr_0_block_208, addr_0_block_209
      check: addr_0_block_208: // preds: addr_0_block_207
      nextln:   jump addr_0_block_210
      check: addr_0_block_209: // preds: addr_0_block_207
      nextln:   jump addr_0_block_210
      check: addr_0_block_210: // preds: addr_0_block_208 addr_0_block_209
      nextln:   jumpif v779, addr_0_block_211, addr_0_block_212
      check: addr_0_block_211: // preds: addr_0_block_210
      nextln:   jump addr_0_block_213
      check: addr_0_block_212: // preds: addr_0_block_210
      nextln:   jump addr_0_block_213
      check: addr_0_block_213: // preds: addr_0_block_211 addr_0_block_212
      nextln:   v857 = i52.unsigned_from_bits v781
      nextln:   v858 = int.modulo v857, 0x4
      nextln:   v859 = int.sub v857, v858
      nextln:   v860 = i52.to_bits v859
      nextln:   v861 = bool.icmp.i52.eq v781, v860
      nextln:   v862 = bool.icmp.i52.eq v781, 0x13000000
      nextln:   jumpif v862, addr_0_block_214, addr_0_block_218
      check: addr_0_block_214: // preds: addr_0_block_213
      nextln:   v863 = i32.unsigned_from_bits v2
      nextln:   v864 = bool.icmp.int.eq v863, 0x4
      nextln:   jumpif v864, addr_0_block_215, addr_0_block_216
      nextln:   jump addr_0_block_219
      check: addr_0_block_215: // no preds!
      nextln:   jump addr_0_block_217
      check: addr_0_block_216: // no preds!
      nextln:   v880 = i8.trunc.i32 v2
      nextln:   v881 = i8.unsigned_from_bits v880
      nextln:   jump addr_0_block_217
      check: addr_0_block_217: // preds: addr_0_block_215 addr_0_block_216
      check: addr_0_block_218: // preds: addr_0_block_213
      nextln:   store.i32 v2, v781
      nextln:   jump addr_0_block_219
      check: addr_0_block_219: // preds: addr_0_block_214 addr_0_block_218
      check: addr_0_block_220(v20: i64, v21: i8): // preds: addr_0_block_0 addr_0_block_176
      nextln:   v22 = i64.wrapping_add v0, 0x1
      nextln:   write_reg.i64 v22, "x0"
- name: str_3
  bytes: [0x41, 0x68, 0x22, 0xf8]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x2"
      nextln:   v1 = i64.read_reg "x2"
      nextln:   v2 = i64.wrapping_add v1, v0
      nextln:   v3 = i64.read_reg "x1"
      nextln:   v4 = i64.unsigned_from_bits v2
      nextln:   v5 = int.modulo v4, 0x8
      nextln:   v6 = int.sub v4, v5
      nextln:   v7 = i64.to_bits v6
      nextln:   v8 = bool.icmp.i64.eq v2, v7
      nextln:   v9 = bool.bitwise_not v8
      nextln:   v10 = bool.bitwise_not v8
      nextln:   jumpif v10, addr_0_block_0, addr_0_block_348
      check: addr_0_block_0: // preds: entry
      nextln:   v11 = i8.trunc.i64 v3
      nextln:   v12 = i64.unsigned_from_bits v2
      nextln:   v13 = int.modulo v12, 0x1
      nextln:   v14 = int.sub v12, v13
      nextln:   v15 = i64.to_bits v14
      nextln:   v16 = bool.icmp.i64.eq v2, v15
      nextln:   v17 = i64.lshr v2, 0x30
      nextln:   v18 = i16.trunc.i64 v17
      nextln:   v19 = bool.icmp.i16.eq v18, 0x0
      nextln:   v20 = bool.bitwise_not v19
      nextln:   jumpif v20, addr_0_block_1, addr_0_block_2
      nextln:   jump addr_0_block_392(v179, v180)
      check: addr_0_block_1: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_2: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_3(v1322: i52, v1323: int, v1324: bool, v1325: bool): // preds: addr_0_block_2
      nextln:   v1326 = i52.trunc.i64 v2
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1326, 0x1, 0x0)
      check: addr_0_block_4(v32: i3, v33: i1, v34: i1, v35: i1, v36: i1, v37: i4, v38: i1, v39: bool, v40: int, v41: int, v42: bool, v43: bool, v44: i8, v45: i8, v46: i52, v47: i1, v48: bool, v49: bool, v50: int, v51: i1, v52: bool, v53: i4, v54: i2, v55: i4, v56: i8, v57: i8, v58: i2, v59: i2, v60: bool, v61: i2, v62: i2, v63: bool, v64: bool, v65: bool, v66: bool, v67: i52, v68: i1, v69: i64, v70: i1, v71: i8, v72: i8, v73: i52, v74: i1, v75: bool, v76: bool, v77: int, v78: i1, v79: bool, v80: i4, v81: i2, v82: i4, v83: i8, v84: i8, v85: i2, v86: i2, v87: bool, v88: i2, v89: i2, v90: bool, v91: bool, v92: bool, v93: bool, v94: i52, v95: i1, v96: i64): // preds: addr_0_block_1 addr_0_block_3
      nextln:   v97 = bool.icmp.i8.ne v71, 0x0
      nextln:   v98 = bool.bitwise_not v97
      nextln:   v99 = bool.bitwise_not v8
      nextln:   v100 = bool.and v99, 0x1
      nextln:   v101 = bool.or v100, 0x0
      nextln:   v102 = bool.icmp.i8.ne v71, 0x0
      nextln:   v103 = bool.bitwise_not v102
      nextln:   v104 = bool.and v101, v103
      nextln:   v105 = bool.icmp.i8.eq v83, 0x1
      nextln:   v106 = bool.and v104, v105
      nextln:   jumpif v106, addr_0_block_5, addr_0_block_6
      check: addr_0_block_5: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_6: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_7: // preds: addr_0_block_5 addr_0_block_6
      nextln:   v107 = bool.icmp.i8.ne v71, 0x0
      nextln:   v108 = bool.bitwise_not v107
      nextln:   v109 = bool.icmp.i8.ne v71, 0x0
      nextln:   v110 = bool.bitwise_not v109
      nextln:   v111 = bool.icmp.i8.eq v83, 0x1
      nextln:   v112 = bool.and v110, v111
      nextln:   jumpif v42, addr_0_block_8, addr_0_block_9
      check: addr_0_block_8: // preds: addr_0_block_7
      nextln:   v113 = bool.icmp.i8.eq v71, 0x0
      nextln:   jump addr_0_block_10(0x1)
      check: addr_0_block_9: // preds: addr_0_block_7
      nextln:   jump addr_0_block_10(0x0)
      check: addr_0_block_10(v114: bool): // preds: addr_0_block_8 addr_0_block_9
      nextln:   v115 = bool.icmp.i8.eq v71, 0x0
      nextln:   v116 = bool.and v43, v115
      nextln:   jumpif v116, addr_0_block_11, addr_0_block_12
      check: addr_0_block_11: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x1, 0x1)
      check: addr_0_block_12: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x0, 0x0)
      check: addr_0_block_13(v117: bool, v118: bool): // preds: addr_0_block_11 addr_0_block_12
      nextln:   v119 = bool.or v114, v117
      nextln:   jumpif v119, addr_0_block_14, addr_0_block_27
      check: addr_0_block_14: // preds: addr_0_block_13
      nextln:   v120 = i52.unsigned_from_bits v67
      nextln:   v121 = int.modulo v120, 0x8
      nextln:   v122 = int.sub v120, v121
      nextln:   v123 = i52.to_bits v122
      nextln:   v124 = bool.icmp.i52.eq v67, v123
      nextln:   v125 = i64.load v67
      nextln:   jumpif v114, addr_0_block_15, addr_0_block_16
      nextln:   jump addr_0_block_28(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v125, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, 0x0, 0x0)
      check: addr_0_block_15: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_16: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_17: // preds: addr_0_block_15 addr_0_block_16
      nextln:   jumpif v117, addr_0_block_18, addr_0_block_19
      check: addr_0_block_18: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_19: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_20: // preds: addr_0_block_18 addr_0_block_19
      nextln:   v1327 = i52.unsigned_from_bits v67
      nextln:   v1328 = int.modulo v1327, 0x8
      nextln:   v1329 = int.sub v1327, v1328
      nextln:   v1330 = i52.to_bits v1329
      nextln:   v1331 = bool.icmp.i52.eq v67, v1330
      nextln:   v1332 = bool.icmp.i52.eq v67, 0x13000000
      nextln:   jumpif v1332, addr_0_block_21, addr_0_block_25
      check: addr_0_block_21: // preds: addr_0_block_20
      nextln:   v1333 = i64.unsigned_from_bits v125
      nextln:   v1334 = bool.icmp.int.eq v1333, 0x4
      nextln:   jumpif v1334, addr_0_block_22, addr_0_block_23
      nextln:   jump addr_0_block_26
      check: addr_0_block_22: // no preds!
      nextln:   jump addr_0_block_24
      check: addr_0_block_23: // no preds!
      nextln:   v1335 = i8.trunc.i64 v125
      nextln:   v1336 = i8.unsigned_from_bits v1335
      nextln:   jump addr_0_block_24
      check: addr_0_block_24: // preds: addr_0_block_22 addr_0_block_23
      check: addr_0_block_25: // preds: addr_0_block_20
      nextln:   store.i64 v125, v67
      nextln:   jump addr_0_block_26
      check: addr_0_block_26: // preds: addr_0_block_21 addr_0_block_25
      check: addr_0_block_27: // preds: addr_0_block_13
      nextln:   jump addr_0_block_28(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_28(v126: i8, v127: i1, v128: i16, v129: i8, v130: bool, v131: bool, v132: bool, v133: int, v134: i64, v135: i8, v136: i8, v137: i52, v138: i1, v139: bool, v140: bool, v141: int, v142: i1, v143: bool, v144: i4, v145: i2, v146: i4, v147: i8, v148: i8, v149: i2, v150: i2, v151: bool, v152: i2, v153: i2, v154: bool, v155: bool, v156: bool, v157: bool, v158: i52, v159: i1, v160: i64, v161: i2, v162: bool): // preds: addr_0_block_14 addr_0_block_27
      nextln:   v163 = bool.icmp.i8.ne v71, 0x0
      nextln:   v164 = bool.bitwise_not v163
      nextln:   v165 = bool.and v164, 0x1
      nextln:   v166 = bool.icmp.i8.ne v71, 0x0
      nextln:   v167 = bool.bitwise_not v166
      nextln:   v168 = bool.and 0x1, v167
      nextln:   jumpif v168, addr_0_block_29, addr_0_block_30
      check: addr_0_block_29: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_30: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_31: // preds: addr_0_block_29 addr_0_block_30
      nextln:   v169 = bool.icmp.i8.ne v71, 0x0
      nextln:   jumpif v169, addr_0_block_32, addr_0_block_33
      check: addr_0_block_32: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_33: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_34: // preds: addr_0_block_32 addr_0_block_33
      nextln:   jumpif v92, addr_0_block_35, addr_0_block_36
      check: addr_0_block_35: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_36: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_37: // preds: addr_0_block_35 addr_0_block_36
      nextln:   v170 = i52.unsigned_from_bits v94
      nextln:   v171 = int.modulo v170, 0x1
      nextln:   v172 = int.sub v170, v171
      nextln:   v173 = i52.to_bits v172
      nextln:   v174 = bool.icmp.i52.eq v94, v173
      nextln:   v175 = bool.icmp.i52.eq v94, 0x13000000
      nextln:   jumpif v175, addr_0_block_38, addr_0_block_42
      check: addr_0_block_38: // preds: addr_0_block_37
      nextln:   v176 = i8.unsigned_from_bits v11
      nextln:   v177 = bool.icmp.int.eq v176, 0x4
      nextln:   jumpif v177, addr_0_block_39, addr_0_block_40
      nextln:   jump addr_0_block_43
      check: addr_0_block_39: // no preds!
      nextln:   jump addr_0_block_41
      check: addr_0_block_40: // no preds!
      nextln:   v1337 = i8.unsigned_from_bits v11
      nextln:   jump addr_0_block_41
      check: addr_0_block_41: // preds: addr_0_block_39 addr_0_block_40
      check: addr_0_block_42: // preds: addr_0_block_37
      nextln:   store.i8 v11, v94
      nextln:   jump addr_0_block_43
      check: addr_0_block_43: // preds: addr_0_block_38 addr_0_block_42
      nextln:   v178 = bool.bitwise_not v8
      nextln:   jumpif v178, addr_0_block_44, addr_0_block_45
      check: addr_0_block_44: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v8, 0xc)
      check: addr_0_block_45: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v8, 0x0)
      check: addr_0_block_46(v179: i64, v180: i8): // preds: addr_0_block_44 addr_0_block_45
      nextln:   v181 = i64.lshr v3, 0x8
      nextln:   v182 = i8.trunc.i64 v181
      nextln:   v183 = i64.wrapping_add v2, 0x1
      nextln:   v184 = i64.unsigned_from_bits v183
      nextln:   v185 = int.modulo v184, 0x1
      nextln:   v186 = int.sub v184, v185
      nextln:   v187 = i64.to_bits v186
      nextln:   v188 = bool.icmp.i64.eq v183, v187
      nextln:   v189 = i64.lshr v183, 0x30
      nextln:   v190 = i16.trunc.i64 v189
      nextln:   v191 = bool.icmp.i16.eq v190, 0x0
      nextln:   v192 = bool.bitwise_not v191
      nextln:   jumpif v192, addr_0_block_47, addr_0_block_48
      check: addr_0_block_47: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_48: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_49(v1317: i52, v1318: int, v1319: bool, v1320: bool): // preds: addr_0_block_48
      nextln:   v1321 = i52.trunc.i64 v183
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1321, 0x1, 0x0)
      check: addr_0_block_50(v193: i3, v194: i1, v195: i1, v196: i1, v197: i1, v198: i4, v199: i1, v200: bool, v201: int, v202: int, v203: bool, v204: bool, v205: i8, v206: i8, v207: i52, v208: i1, v209: bool, v210: bool, v211: int, v212: i1, v213: bool, v214: i4, v215: i2, v216: i4, v217: i8, v218: i8, v219: i2, v220: i2, v221: bool, v222: i2, v223: i2, v224: bool, v225: bool, v226: bool, v227: bool, v228: i52, v229: i1, v230: i64, v231: i1, v232: i8, v233: i8, v234: i52, v235: i1, v236: bool, v237: bool, v238: int, v239: i1, v240: bool, v241: i4, v242: i2, v243: i4, v244: i8, v245: i8, v246: i2, v247: i2, v248: bool, v249: i2, v250: i2, v251: bool, v252: bool, v253: bool, v254: bool, v255: i52, v256: i1, v257: i64): // preds: addr_0_block_47 addr_0_block_49
      nextln:   v258 = bool.icmp.i8.ne v232, 0x0
      nextln:   v259 = bool.bitwise_not v258
      nextln:   v260 = bool.bitwise_not v8
      nextln:   v261 = bool.and v260, 0x1
      nextln:   v262 = bool.or v261, 0x0
      nextln:   v263 = bool.icmp.i8.ne v232, 0x0
      nextln:   v264 = bool.bitwise_not v263
      nextln:   v265 = bool.and v262, v264
      nextln:   v266 = bool.icmp.i8.eq v244, 0x1
      nextln:   v267 = bool.and v265, v266
      nextln:   jumpif v267, addr_0_block_51, addr_0_block_52
      check: addr_0_block_51: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_52: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_53: // preds: addr_0_block_51 addr_0_block_52
      nextln:   v268 = bool.icmp.i8.ne v232, 0x0
      nextln:   v269 = bool.bitwise_not v268
      nextln:   v270 = bool.icmp.i8.ne v232, 0x0
      nextln:   v271 = bool.bitwise_not v270
      nextln:   v272 = bool.icmp.i8.eq v244, 0x1
      nextln:   v273 = bool.and v271, v272
      nextln:   jumpif v203, addr_0_block_54, addr_0_block_55
      check: addr_0_block_54: // preds: addr_0_block_53
      nextln:   v274 = bool.icmp.i8.eq v232, 0x0
      nextln:   jump addr_0_block_56(0x1)
      check: addr_0_block_55: // preds: addr_0_block_53
      nextln:   jump addr_0_block_56(0x0)
      check: addr_0_block_56(v275: bool): // preds: addr_0_block_54 addr_0_block_55
      nextln:   v276 = bool.icmp.i8.eq v232, 0x0
      nextln:   v277 = bool.and v204, v276
      nextln:   jumpif v277, addr_0_block_57, addr_0_block_58
      check: addr_0_block_57: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x1, 0x1)
      check: addr_0_block_58: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x0, 0x0)
      check: addr_0_block_59(v278: bool, v279: bool): // preds: addr_0_block_57 addr_0_block_58
      nextln:   v280 = bool.or v275, v278
      nextln:   jumpif v280, addr_0_block_60, addr_0_block_73
      check: addr_0_block_60: // preds: addr_0_block_59
      nextln:   v281 = i52.unsigned_from_bits v228
      nextln:   v282 = int.modulo v281, 0x8
      nextln:   v283 = int.sub v281, v282
      nextln:   v284 = i52.to_bits v283
      nextln:   v285 = bool.icmp.i52.eq v228, v284
      nextln:   v286 = i64.load v228
      nextln:   jumpif v275, addr_0_block_61, addr_0_block_62
      nextln:   jump addr_0_block_74(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v286, v205, v206, v207, v208, v209, v210, v211, v212, v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, v230, 0x0, 0x0)
      check: addr_0_block_61: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_62: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_63: // preds: addr_0_block_61 addr_0_block_62
      nextln:   jumpif v278, addr_0_block_64, addr_0_block_65
      check: addr_0_block_64: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_65: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_66: // preds: addr_0_block_64 addr_0_block_65
      nextln:   v1338 = i52.unsigned_from_bits v228
      nextln:   v1339 = int.modulo v1338, 0x8
      nextln:   v1340 = int.sub v1338, v1339
      nextln:   v1341 = i52.to_bits v1340
      nextln:   v1342 = bool.icmp.i52.eq v228, v1341
      nextln:   v1343 = bool.icmp.i52.eq v228, 0x13000000
      nextln:   jumpif v1343, addr_0_block_67, addr_0_block_71
      check: addr_0_block_67: // preds: addr_0_block_66
      nextln:   v1344 = i64.unsigned_from_bits v286
      nextln:   v1345 = bool.icmp.int.eq v1344, 0x4
      nextln:   jumpif v1345, addr_0_block_68, addr_0_block_69
      nextln:   jump addr_0_block_72
      check: addr_0_block_68: // no preds!
      nextln:   jump addr_0_block_70
      check: addr_0_block_69: // no preds!
      nextln:   v1346 = i8.trunc.i64 v286
      nextln:   v1347 = i8.unsigned_from_bits v1346
      nextln:   jump addr_0_block_70
      check: addr_0_block_70: // preds: addr_0_block_68 addr_0_block_69
      check: addr_0_block_71: // preds: addr_0_block_66
      nextln:   store.i64 v286, v228
      nextln:   jump addr_0_block_72
      check: addr_0_block_72: // preds: addr_0_block_67 addr_0_block_71
      check: addr_0_block_73: // preds: addr_0_block_59
      nextln:   jump addr_0_block_74(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_74(v287: i8, v288: i1, v289: i16, v290: i8, v291: bool, v292: bool, v293: bool, v294: int, v295: i64, v296: i8, v297: i8, v298: i52, v299: i1, v300: bool, v301: bool, v302: int, v303: i1, v304: bool, v305: i4, v306: i2, v307: i4, v308: i8, v309: i8, v310: i2, v311: i2, v312: bool, v313: i2, v314: i2, v315: bool, v316: bool, v317: bool, v318: bool, v319: i52, v320: i1, v321: i64, v322: i2, v323: bool): // preds: addr_0_block_60 addr_0_block_73
      nextln:   v324 = bool.icmp.i8.ne v232, 0x0
      nextln:   v325 = bool.bitwise_not v324
      nextln:   v326 = bool.and v325, 0x1
      nextln:   v327 = bool.icmp.i8.ne v232, 0x0
      nextln:   v328 = bool.bitwise_not v327
      nextln:   v329 = bool.and 0x1, v328
      nextln:   jumpif v329, addr_0_block_75, addr_0_block_76
      check: addr_0_block_75: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_76: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_77: // preds: addr_0_block_75 addr_0_block_76
      nextln:   v330 = bool.icmp.i8.ne v232, 0x0
      nextln:   jumpif v330, addr_0_block_78, addr_0_block_79
      check: addr_0_block_78: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_79: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_80: // preds: addr_0_block_78 addr_0_block_79
      nextln:   jumpif v253, addr_0_block_81, addr_0_block_82
      check: addr_0_block_81: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_82: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_83: // preds: addr_0_block_81 addr_0_block_82
      nextln:   v331 = i52.unsigned_from_bits v255
      nextln:   v332 = int.modulo v331, 0x1
      nextln:   v333 = int.sub v331, v332
      nextln:   v334 = i52.to_bits v333
      nextln:   v335 = bool.icmp.i52.eq v255, v334
      nextln:   v336 = bool.icmp.i52.eq v255, 0x13000000
      nextln:   jumpif v336, addr_0_block_84, addr_0_block_88
      check: addr_0_block_84: // preds: addr_0_block_83
      nextln:   v337 = i8.unsigned_from_bits v182
      nextln:   v338 = bool.icmp.int.eq v337, 0x4
      nextln:   jumpif v338, addr_0_block_85, addr_0_block_86
      nextln:   jump addr_0_block_89
      check: addr_0_block_85: // no preds!
      nextln:   jump addr_0_block_87
      check: addr_0_block_86: // no preds!
      nextln:   v1348 = i8.unsigned_from_bits v182
      nextln:   jump addr_0_block_87
      check: addr_0_block_87: // preds: addr_0_block_85 addr_0_block_86
      check: addr_0_block_88: // preds: addr_0_block_83
      nextln:   store.i8 v182, v255
      nextln:   jump addr_0_block_89
      check: addr_0_block_89: // preds: addr_0_block_84 addr_0_block_88
      nextln:   v339 = i64.lshr v3, 0x10
      nextln:   v340 = i8.trunc.i64 v339
      nextln:   v341 = i64.wrapping_add v2, 0x2
      nextln:   v342 = i64.unsigned_from_bits v341
      nextln:   v343 = int.modulo v342, 0x1
      nextln:   v344 = int.sub v342, v343
      nextln:   v345 = i64.to_bits v344
      nextln:   v346 = bool.icmp.i64.eq v341, v345
      nextln:   v347 = i64.lshr v341, 0x30
      nextln:   v348 = i16.trunc.i64 v347
      nextln:   v349 = bool.icmp.i16.eq v348, 0x0
      nextln:   v350 = bool.bitwise_not v349
      nextln:   jumpif v350, addr_0_block_90, addr_0_block_91
      check: addr_0_block_90: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_91: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_92(v1312: i52, v1313: int, v1314: bool, v1315: bool): // preds: addr_0_block_91
      nextln:   v1316 = i52.trunc.i64 v341
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1316, 0x1, 0x0)
      check: addr_0_block_93(v351: i3, v352: i1, v353: i1, v354: i1, v355: i1, v356: i4, v357: i1, v358: bool, v359: int, v360: int, v361: bool, v362: bool, v363: i8, v364: i8, v365: i52, v366: i1, v367: bool, v368: bool, v369: int, v370: i1, v371: bool, v372: i4, v373: i2, v374: i4, v375: i8, v376: i8, v377: i2, v378: i2, v379: bool, v380: i2, v381: i2, v382: bool, v383: bool, v384: bool, v385: bool, v386: i52, v387: i1, v388: i64, v389: i1, v390: i8, v391: i8, v392: i52, v393: i1, v394: bool, v395: bool, v396: int, v397: i1, v398: bool, v399: i4, v400: i2, v401: i4, v402: i8, v403: i8, v404: i2, v405: i2, v406: bool, v407: i2, v408: i2, v409: bool, v410: bool, v411: bool, v412: bool, v413: i52, v414: i1, v415: i64): // preds: addr_0_block_90 addr_0_block_92
      nextln:   v416 = bool.icmp.i8.ne v390, 0x0
      nextln:   v417 = bool.bitwise_not v416
      nextln:   v418 = bool.bitwise_not v8
      nextln:   v419 = bool.and v418, 0x1
      nextln:   v420 = bool.or v419, 0x0
      nextln:   v421 = bool.icmp.i8.ne v390, 0x0
      nextln:   v422 = bool.bitwise_not v421
      nextln:   v423 = bool.and v420, v422
      nextln:   v424 = bool.icmp.i8.eq v402, 0x1
      nextln:   v425 = bool.and v423, v424
      nextln:   jumpif v425, addr_0_block_94, addr_0_block_95
      check: addr_0_block_94: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_95: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_96: // preds: addr_0_block_94 addr_0_block_95
      nextln:   v426 = bool.icmp.i8.ne v390, 0x0
      nextln:   v427 = bool.bitwise_not v426
      nextln:   v428 = bool.icmp.i8.ne v390, 0x0
      nextln:   v429 = bool.bitwise_not v428
      nextln:   v430 = bool.icmp.i8.eq v402, 0x1
      nextln:   v431 = bool.and v429, v430
      nextln:   jumpif v361, addr_0_block_97, addr_0_block_98
      check: addr_0_block_97: // preds: addr_0_block_96
      nextln:   v432 = bool.icmp.i8.eq v390, 0x0
      nextln:   jump addr_0_block_99(0x1)
      check: addr_0_block_98: // preds: addr_0_block_96
      nextln:   jump addr_0_block_99(0x0)
      check: addr_0_block_99(v433: bool): // preds: addr_0_block_97 addr_0_block_98
      nextln:   v434 = bool.icmp.i8.eq v390, 0x0
      nextln:   v435 = bool.and v362, v434
      nextln:   jumpif v435, addr_0_block_100, addr_0_block_101
      check: addr_0_block_100: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x1, 0x1)
      check: addr_0_block_101: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x0, 0x0)
      check: addr_0_block_102(v436: bool, v437: bool): // preds: addr_0_block_100 addr_0_block_101
      nextln:   v438 = bool.or v433, v436
      nextln:   jumpif v438, addr_0_block_103, addr_0_block_116
      check: addr_0_block_103: // preds: addr_0_block_102
      nextln:   v439 = i52.unsigned_from_bits v386
      nextln:   v440 = int.modulo v439, 0x8
      nextln:   v441 = int.sub v439, v440
      nextln:   v442 = i52.to_bits v441
      nextln:   v443 = bool.icmp.i52.eq v386, v442
      nextln:   v444 = i64.load v386
      nextln:   jumpif v433, addr_0_block_104, addr_0_block_105
      nextln:   jump addr_0_block_117(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v444, v363, v364, v365, v366, v367, v368, v369, v370, v371, v372, v373, v374, v375, v376, v377, v378, v379, v380, v381, v382, v383, v384, v385, v386, v387, v388, 0x0, 0x0)
      check: addr_0_block_104: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_105: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_106: // preds: addr_0_block_104 addr_0_block_105
      nextln:   jumpif v436, addr_0_block_107, addr_0_block_108
      check: addr_0_block_107: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_108: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_109: // preds: addr_0_block_107 addr_0_block_108
      nextln:   v1349 = i52.unsigned_from_bits v386
      nextln:   v1350 = int.modulo v1349, 0x8
      nextln:   v1351 = int.sub v1349, v1350
      nextln:   v1352 = i52.to_bits v1351
      nextln:   v1353 = bool.icmp.i52.eq v386, v1352
      nextln:   v1354 = bool.icmp.i52.eq v386, 0x13000000
      nextln:   jumpif v1354, addr_0_block_110, addr_0_block_114
      check: addr_0_block_110: // preds: addr_0_block_109
      nextln:   v1355 = i64.unsigned_from_bits v444
      nextln:   v1356 = bool.icmp.int.eq v1355, 0x4
      nextln:   jumpif v1356, addr_0_block_111, addr_0_block_112
      nextln:   jump addr_0_block_115
      check: addr_0_block_111: // no preds!
      nextln:   jump addr_0_block_113
      check: addr_0_block_112: // no preds!
      nextln:   v1357 = i8.trunc.i64 v444
      nextln:   v1358 = i8.unsigned_from_bits v1357
      nextln:   jump addr_0_block_113
      check: addr_0_block_113: // preds: addr_0_block_111 addr_0_block_112
      check: addr_0_block_114: // preds: addr_0_block_109
      nextln:   store.i64 v444, v386
      nextln:   jump addr_0_block_115
      check: addr_0_block_115: // preds: addr_0_block_110 addr_0_block_114
      check: addr_0_block_116: // preds: addr_0_block_102
      nextln:   jump addr_0_block_117(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_117(v445: i8, v446: i1, v447: i16, v448: i8, v449: bool, v450: bool, v451: bool, v452: int, v453: i64, v454: i8, v455: i8, v456: i52, v457: i1, v458: bool, v459: bool, v460: int, v461: i1, v462: bool, v463: i4, v464: i2, v465: i4, v466: i8, v467: i8, v468: i2, v469: i2, v470: bool, v471: i2, v472: i2, v473: bool, v474: bool, v475: bool, v476: bool, v477: i52, v478: i1, v479: i64, v480: i2, v481: bool): // preds: addr_0_block_103 addr_0_block_116
      nextln:   v482 = bool.icmp.i8.ne v390, 0x0
      nextln:   v483 = bool.bitwise_not v482
      nextln:   v484 = bool.and v483, 0x1
      nextln:   v485 = bool.icmp.i8.ne v390, 0x0
      nextln:   v486 = bool.bitwise_not v485
      nextln:   v487 = bool.and 0x1, v486
      nextln:   jumpif v487, addr_0_block_118, addr_0_block_119
      check: addr_0_block_118: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_119: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_120: // preds: addr_0_block_118 addr_0_block_119
      nextln:   v488 = bool.icmp.i8.ne v390, 0x0
      nextln:   jumpif v488, addr_0_block_121, addr_0_block_122
      check: addr_0_block_121: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_122: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_123: // preds: addr_0_block_121 addr_0_block_122
      nextln:   jumpif v411, addr_0_block_124, addr_0_block_125
      check: addr_0_block_124: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_125: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_126: // preds: addr_0_block_124 addr_0_block_125
      nextln:   v489 = i52.unsigned_from_bits v413
      nextln:   v490 = int.modulo v489, 0x1
      nextln:   v491 = int.sub v489, v490
      nextln:   v492 = i52.to_bits v491
      nextln:   v493 = bool.icmp.i52.eq v413, v492
      nextln:   v494 = bool.icmp.i52.eq v413, 0x13000000
      nextln:   jumpif v494, addr_0_block_127, addr_0_block_131
      check: addr_0_block_127: // preds: addr_0_block_126
      nextln:   v495 = i8.unsigned_from_bits v340
      nextln:   v496 = bool.icmp.int.eq v495, 0x4
      nextln:   jumpif v496, addr_0_block_128, addr_0_block_129
      nextln:   jump addr_0_block_132
      check: addr_0_block_128: // no preds!
      nextln:   jump addr_0_block_130
      check: addr_0_block_129: // no preds!
      nextln:   v1359 = i8.unsigned_from_bits v340
      nextln:   jump addr_0_block_130
      check: addr_0_block_130: // preds: addr_0_block_128 addr_0_block_129
      check: addr_0_block_131: // preds: addr_0_block_126
      nextln:   store.i8 v340, v413
      nextln:   jump addr_0_block_132
      check: addr_0_block_132: // preds: addr_0_block_127 addr_0_block_131
      nextln:   v497 = i64.lshr v3, 0x18
      nextln:   v498 = i8.trunc.i64 v497
      nextln:   v499 = i64.wrapping_add v2, 0x3
      nextln:   v500 = i64.unsigned_from_bits v499
      nextln:   v501 = int.modulo v500, 0x1
      nextln:   v502 = int.sub v500, v501
      nextln:   v503 = i64.to_bits v502
      nextln:   v504 = bool.icmp.i64.eq v499, v503
      nextln:   v505 = i64.lshr v499, 0x30
      nextln:   v506 = i16.trunc.i64 v505
      nextln:   v507 = bool.icmp.i16.eq v506, 0x0
      nextln:   v508 = bool.bitwise_not v507
      nextln:   jumpif v508, addr_0_block_133, addr_0_block_134
      check: addr_0_block_133: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_134: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_135(v1307: i52, v1308: int, v1309: bool, v1310: bool): // preds: addr_0_block_134
      nextln:   v1311 = i52.trunc.i64 v499
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1311, 0x1, 0x0)
      check: addr_0_block_136(v509: i3, v510: i1, v511: i1, v512: i1, v513: i1, v514: i4, v515: i1, v516: bool, v517: int, v518: int, v519: bool, v520: bool, v521: i8, v522: i8, v523: i52, v524: i1, v525: bool, v526: bool, v527: int, v528: i1, v529: bool, v530: i4, v531: i2, v532: i4, v533: i8, v534: i8, v535: i2, v536: i2, v537: bool, v538: i2, v539: i2, v540: bool, v541: bool, v542: bool, v543: bool, v544: i52, v545: i1, v546: i64, v547: i1, v548: i8, v549: i8, v550: i52, v551: i1, v552: bool, v553: bool, v554: int, v555: i1, v556: bool, v557: i4, v558: i2, v559: i4, v560: i8, v561: i8, v562: i2, v563: i2, v564: bool, v565: i2, v566: i2, v567: bool, v568: bool, v569: bool, v570: bool, v571: i52, v572: i1, v573: i64): // preds: addr_0_block_133 addr_0_block_135
      nextln:   v574 = bool.icmp.i8.ne v548, 0x0
      nextln:   v575 = bool.bitwise_not v574
      nextln:   v576 = bool.bitwise_not v8
      nextln:   v577 = bool.and v576, 0x1
      nextln:   v578 = bool.or v577, 0x0
      nextln:   v579 = bool.icmp.i8.ne v548, 0x0
      nextln:   v580 = bool.bitwise_not v579
      nextln:   v581 = bool.and v578, v580
      nextln:   v582 = bool.icmp.i8.eq v560, 0x1
      nextln:   v583 = bool.and v581, v582
      nextln:   jumpif v583, addr_0_block_137, addr_0_block_138
      check: addr_0_block_137: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_138: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_139: // preds: addr_0_block_137 addr_0_block_138
      nextln:   v584 = bool.icmp.i8.ne v548, 0x0
      nextln:   v585 = bool.bitwise_not v584
      nextln:   v586 = bool.icmp.i8.ne v548, 0x0
      nextln:   v587 = bool.bitwise_not v586
      nextln:   v588 = bool.icmp.i8.eq v560, 0x1
      nextln:   v589 = bool.and v587, v588
      nextln:   jumpif v519, addr_0_block_140, addr_0_block_141
      check: addr_0_block_140: // preds: addr_0_block_139
      nextln:   v590 = bool.icmp.i8.eq v548, 0x0
      nextln:   jump addr_0_block_142(0x1)
      check: addr_0_block_141: // preds: addr_0_block_139
      nextln:   jump addr_0_block_142(0x0)
      check: addr_0_block_142(v591: bool): // preds: addr_0_block_140 addr_0_block_141
      nextln:   v592 = bool.icmp.i8.eq v548, 0x0
      nextln:   v593 = bool.and v520, v592
      nextln:   jumpif v593, addr_0_block_143, addr_0_block_144
      check: addr_0_block_143: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x1, 0x1)
      check: addr_0_block_144: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x0, 0x0)
      check: addr_0_block_145(v594: bool, v595: bool): // preds: addr_0_block_143 addr_0_block_144
      nextln:   v596 = bool.or v591, v594
      nextln:   jumpif v596, addr_0_block_146, addr_0_block_159
      check: addr_0_block_146: // preds: addr_0_block_145
      nextln:   v597 = i52.unsigned_from_bits v544
      nextln:   v598 = int.modulo v597, 0x8
      nextln:   v599 = int.sub v597, v598
      nextln:   v600 = i52.to_bits v599
      nextln:   v601 = bool.icmp.i52.eq v544, v600
      nextln:   v602 = i64.load v544
      nextln:   jumpif v591, addr_0_block_147, addr_0_block_148
      nextln:   jump addr_0_block_160(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v602, v521, v522, v523, v524, v525, v526, v527, v528, v529, v530, v531, v532, v533, v534, v535, v536, v537, v538, v539, v540, v541, v542, v543, v544, v545, v546, 0x0, 0x0)
      check: addr_0_block_147: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_148: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_149: // preds: addr_0_block_147 addr_0_block_148
      nextln:   jumpif v594, addr_0_block_150, addr_0_block_151
      check: addr_0_block_150: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_151: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_152: // preds: addr_0_block_150 addr_0_block_151
      nextln:   v1360 = i52.unsigned_from_bits v544
      nextln:   v1361 = int.modulo v1360, 0x8
      nextln:   v1362 = int.sub v1360, v1361
      nextln:   v1363 = i52.to_bits v1362
      nextln:   v1364 = bool.icmp.i52.eq v544, v1363
      nextln:   v1365 = bool.icmp.i52.eq v544, 0x13000000
      nextln:   jumpif v1365, addr_0_block_153, addr_0_block_157
      check: addr_0_block_153: // preds: addr_0_block_152
      nextln:   v1366 = i64.unsigned_from_bits v602
      nextln:   v1367 = bool.icmp.int.eq v1366, 0x4
      nextln:   jumpif v1367, addr_0_block_154, addr_0_block_155
      nextln:   jump addr_0_block_158
      check: addr_0_block_154: // no preds!
      nextln:   jump addr_0_block_156
      check: addr_0_block_155: // no preds!
      nextln:   v1368 = i8.trunc.i64 v602
      nextln:   v1369 = i8.unsigned_from_bits v1368
      nextln:   jump addr_0_block_156
      check: addr_0_block_156: // preds: addr_0_block_154 addr_0_block_155
      check: addr_0_block_157: // preds: addr_0_block_152
      nextln:   store.i64 v602, v544
      nextln:   jump addr_0_block_158
      check: addr_0_block_158: // preds: addr_0_block_153 addr_0_block_157
      check: addr_0_block_159: // preds: addr_0_block_145
      nextln:   jump addr_0_block_160(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_160(v603: i8, v604: i1, v605: i16, v606: i8, v607: bool, v608: bool, v609: bool, v610: int, v611: i64, v612: i8, v613: i8, v614: i52, v615: i1, v616: bool, v617: bool, v618: int, v619: i1, v620: bool, v621: i4, v622: i2, v623: i4, v624: i8, v625: i8, v626: i2, v627: i2, v628: bool, v629: i2, v630: i2, v631: bool, v632: bool, v633: bool, v634: bool, v635: i52, v636: i1, v637: i64, v638: i2, v639: bool): // preds: addr_0_block_146 addr_0_block_159
      nextln:   v640 = bool.icmp.i8.ne v548, 0x0
      nextln:   v641 = bool.bitwise_not v640
      nextln:   v642 = bool.and v641, 0x1
      nextln:   v643 = bool.icmp.i8.ne v548, 0x0
      nextln:   v644 = bool.bitwise_not v643
      nextln:   v645 = bool.and 0x1, v644
      nextln:   jumpif v645, addr_0_block_161, addr_0_block_162
      check: addr_0_block_161: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_162: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_163: // preds: addr_0_block_161 addr_0_block_162
      nextln:   v646 = bool.icmp.i8.ne v548, 0x0
      nextln:   jumpif v646, addr_0_block_164, addr_0_block_165
      check: addr_0_block_164: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_165: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_166: // preds: addr_0_block_164 addr_0_block_165
      nextln:   jumpif v569, addr_0_block_167, addr_0_block_168
      check: addr_0_block_167: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_168: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_169: // preds: addr_0_block_167 addr_0_block_168
      nextln:   v647 = i52.unsigned_from_bits v571
      nextln:   v648 = int.modulo v647, 0x1
      nextln:   v649 = int.sub v647, v648
      nextln:   v650 = i52.to_bits v649
      nextln:   v651 = bool.icmp.i52.eq v571, v650
      nextln:   v652 = bool.icmp.i52.eq v571, 0x13000000
      nextln:   jumpif v652, addr_0_block_170, addr_0_block_174
      check: addr_0_block_170: // preds: addr_0_block_169
      nextln:   v653 = i8.unsigned_from_bits v498
      nextln:   v654 = bool.icmp.int.eq v653, 0x4
      nextln:   jumpif v654, addr_0_block_171, addr_0_block_172
      nextln:   jump addr_0_block_175
      check: addr_0_block_171: // no preds!
      nextln:   jump addr_0_block_173
      check: addr_0_block_172: // no preds!
      nextln:   v1370 = i8.unsigned_from_bits v498
      nextln:   jump addr_0_block_173
      check: addr_0_block_173: // preds: addr_0_block_171 addr_0_block_172
      check: addr_0_block_174: // preds: addr_0_block_169
      nextln:   store.i8 v498, v571
      nextln:   jump addr_0_block_175
      check: addr_0_block_175: // preds: addr_0_block_170 addr_0_block_174
      nextln:   v655 = i64.lshr v3, 0x20
      nextln:   v656 = i8.trunc.i64 v655
      nextln:   v657 = i64.wrapping_add v2, 0x4
      nextln:   v658 = i64.unsigned_from_bits v657
      nextln:   v659 = int.modulo v658, 0x1
      nextln:   v660 = int.sub v658, v659
      nextln:   v661 = i64.to_bits v660
      nextln:   v662 = bool.icmp.i64.eq v657, v661
      nextln:   v663 = i64.lshr v657, 0x30
      nextln:   v664 = i16.trunc.i64 v663
      nextln:   v665 = bool.icmp.i16.eq v664, 0x0
      nextln:   v666 = bool.bitwise_not v665
      nextln:   jumpif v666, addr_0_block_176, addr_0_block_177
      check: addr_0_block_176: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_177: // preds: addr_0_block_175
      nextln:   jump addr_0_block_178(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_178(v1302: i52, v1303: int, v1304: bool, v1305: bool): // preds: addr_0_block_177
      nextln:   v1306 = i52.trunc.i64 v657
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1306, 0x1, 0x0)
      check: addr_0_block_179(v667: i3, v668: i1, v669: i1, v670: i1, v671: i1, v672: i4, v673: i1, v674: bool, v675: int, v676: int, v677: bool, v678: bool, v679: i8, v680: i8, v681: i52, v682: i1, v683: bool, v684: bool, v685: int, v686: i1, v687: bool, v688: i4, v689: i2, v690: i4, v691: i8, v692: i8, v693: i2, v694: i2, v695: bool, v696: i2, v697: i2, v698: bool, v699: bool, v700: bool, v701: bool, v702: i52, v703: i1, v704: i64, v705: i1, v706: i8, v707: i8, v708: i52, v709: i1, v710: bool, v711: bool, v712: int, v713: i1, v714: bool, v715: i4, v716: i2, v717: i4, v718: i8, v719: i8, v720: i2, v721: i2, v722: bool, v723: i2, v724: i2, v725: bool, v726: bool, v727: bool, v728: bool, v729: i52, v730: i1, v731: i64): // preds: addr_0_block_176 addr_0_block_178
      nextln:   v732 = bool.icmp.i8.ne v706, 0x0
      nextln:   v733 = bool.bitwise_not v732
      nextln:   v734 = bool.bitwise_not v8
      nextln:   v735 = bool.and v734, 0x1
      nextln:   v736 = bool.or v735, 0x0
      nextln:   v737 = bool.icmp.i8.ne v706, 0x0
      nextln:   v738 = bool.bitwise_not v737
      nextln:   v739 = bool.and v736, v738
      nextln:   v740 = bool.icmp.i8.eq v718, 0x1
      nextln:   v741 = bool.and v739, v740
      nextln:   jumpif v741, addr_0_block_180, addr_0_block_181
      check: addr_0_block_180: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_181: // preds: addr_0_block_179
      nextln:   jump addr_0_block_182
      check: addr_0_block_182: // preds: addr_0_block_180 addr_0_block_181
      nextln:   v742 = bool.icmp.i8.ne v706, 0x0
      nextln:   v743 = bool.bitwise_not v742
      nextln:   v744 = bool.icmp.i8.ne v706, 0x0
      nextln:   v745 = bool.bitwise_not v744
      nextln:   v746 = bool.icmp.i8.eq v718, 0x1
      nextln:   v747 = bool.and v745, v746
      nextln:   jumpif v677, addr_0_block_183, addr_0_block_184
      check: addr_0_block_183: // preds: addr_0_block_182
      nextln:   v748 = bool.icmp.i8.eq v706, 0x0
      nextln:   jump addr_0_block_185(0x1)
      check: addr_0_block_184: // preds: addr_0_block_182
      nextln:   jump addr_0_block_185(0x0)
      check: addr_0_block_185(v749: bool): // preds: addr_0_block_183 addr_0_block_184
      nextln:   v750 = bool.icmp.i8.eq v706, 0x0
      nextln:   v751 = bool.and v678, v750
      nextln:   jumpif v751, addr_0_block_186, addr_0_block_187
      check: addr_0_block_186: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x1, 0x1)
      check: addr_0_block_187: // preds: addr_0_block_185
      nextln:   jump addr_0_block_188(0x0, 0x0)
      check: addr_0_block_188(v752: bool, v753: bool): // preds: addr_0_block_186 addr_0_block_187
      nextln:   v754 = bool.or v749, v752
      nextln:   jumpif v754, addr_0_block_189, addr_0_block_202
      check: addr_0_block_189: // preds: addr_0_block_188
      nextln:   v755 = i52.unsigned_from_bits v702
      nextln:   v756 = int.modulo v755, 0x8
      nextln:   v757 = int.sub v755, v756
      nextln:   v758 = i52.to_bits v757
      nextln:   v759 = bool.icmp.i52.eq v702, v758
      nextln:   v760 = i64.load v702
      nextln:   jumpif v749, addr_0_block_190, addr_0_block_191
      nextln:   jump addr_0_block_203(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v760, v679, v680, v681, v682, v683, v684, v685, v686, v687, v688, v689, v690, v691, v692, v693, v694, v695, v696, v697, v698, v699, v700, v701, v702, v703, v704, 0x0, 0x0)
      check: addr_0_block_190: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_191: // no preds!
      nextln:   jump addr_0_block_192
      check: addr_0_block_192: // preds: addr_0_block_190 addr_0_block_191
      nextln:   jumpif v752, addr_0_block_193, addr_0_block_194
      check: addr_0_block_193: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_194: // preds: addr_0_block_192
      nextln:   jump addr_0_block_195
      check: addr_0_block_195: // preds: addr_0_block_193 addr_0_block_194
      nextln:   v1371 = i52.unsigned_from_bits v702
      nextln:   v1372 = int.modulo v1371, 0x8
      nextln:   v1373 = int.sub v1371, v1372
      nextln:   v1374 = i52.to_bits v1373
      nextln:   v1375 = bool.icmp.i52.eq v702, v1374
      nextln:   v1376 = bool.icmp.i52.eq v702, 0x13000000
      nextln:   jumpif v1376, addr_0_block_196, addr_0_block_200
      check: addr_0_block_196: // preds: addr_0_block_195
      nextln:   v1377 = i64.unsigned_from_bits v760
      nextln:   v1378 = bool.icmp.int.eq v1377, 0x4
      nextln:   jumpif v1378, addr_0_block_197, addr_0_block_198
      nextln:   jump addr_0_block_201
      check: addr_0_block_197: // no preds!
      nextln:   jump addr_0_block_199
      check: addr_0_block_198: // no preds!
      nextln:   v1379 = i8.trunc.i64 v760
      nextln:   v1380 = i8.unsigned_from_bits v1379
      nextln:   jump addr_0_block_199
      check: addr_0_block_199: // preds: addr_0_block_197 addr_0_block_198
      check: addr_0_block_200: // preds: addr_0_block_195
      nextln:   store.i64 v760, v702
      nextln:   jump addr_0_block_201
      check: addr_0_block_201: // preds: addr_0_block_196 addr_0_block_200
      check: addr_0_block_202: // preds: addr_0_block_188
      nextln:   jump addr_0_block_203(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_203(v761: i8, v762: i1, v763: i16, v764: i8, v765: bool, v766: bool, v767: bool, v768: int, v769: i64, v770: i8, v771: i8, v772: i52, v773: i1, v774: bool, v775: bool, v776: int, v777: i1, v778: bool, v779: i4, v780: i2, v781: i4, v782: i8, v783: i8, v784: i2, v785: i2, v786: bool, v787: i2, v788: i2, v789: bool, v790: bool, v791: bool, v792: bool, v793: i52, v794: i1, v795: i64, v796: i2, v797: bool): // preds: addr_0_block_189 addr_0_block_202
      nextln:   v798 = bool.icmp.i8.ne v706, 0x0
      nextln:   v799 = bool.bitwise_not v798
      nextln:   v800 = bool.and v799, 0x1
      nextln:   v801 = bool.icmp.i8.ne v706, 0x0
      nextln:   v802 = bool.bitwise_not v801
      nextln:   v803 = bool.and 0x1, v802
      nextln:   jumpif v803, addr_0_block_204, addr_0_block_205
      check: addr_0_block_204: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_205: // preds: addr_0_block_203
      nextln:   jump addr_0_block_206
      check: addr_0_block_206: // preds: addr_0_block_204 addr_0_block_205
      nextln:   v804 = bool.icmp.i8.ne v706, 0x0
      nextln:   jumpif v804, addr_0_block_207, addr_0_block_208
      check: addr_0_block_207: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_208: // preds: addr_0_block_206
      nextln:   jump addr_0_block_209
      check: addr_0_block_209: // preds: addr_0_block_207 addr_0_block_208
      nextln:   jumpif v727, addr_0_block_210, addr_0_block_211
      check: addr_0_block_210: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_211: // preds: addr_0_block_209
      nextln:   jump addr_0_block_212
      check: addr_0_block_212: // preds: addr_0_block_210 addr_0_block_211
      nextln:   v805 = i52.unsigned_from_bits v729
      nextln:   v806 = int.modulo v805, 0x1
      nextln:   v807 = int.sub v805, v806
      nextln:   v808 = i52.to_bits v807
      nextln:   v809 = bool.icmp.i52.eq v729, v808
      nextln:   v810 = bool.icmp.i52.eq v729, 0x13000000
      nextln:   jumpif v810, addr_0_block_213, addr_0_block_217
      check: addr_0_block_213: // preds: addr_0_block_212
      nextln:   v811 = i8.unsigned_from_bits v656
      nextln:   v812 = bool.icmp.int.eq v811, 0x4
      nextln:   jumpif v812, addr_0_block_214, addr_0_block_215
      nextln:   jump addr_0_block_218
      check: addr_0_block_214: // no preds!
      nextln:   jump addr_0_block_216
      check: addr_0_block_215: // no preds!
      nextln:   v1381 = i8.unsigned_from_bits v656
      nextln:   jump addr_0_block_216
      check: addr_0_block_216: // preds: addr_0_block_214 addr_0_block_215
      check: addr_0_block_217: // preds: addr_0_block_212
      nextln:   store.i8 v656, v729
      nextln:   jump addr_0_block_218
      check: addr_0_block_218: // preds: addr_0_block_213 addr_0_block_217
      nextln:   v813 = i64.lshr v3, 0x28
      nextln:   v814 = i8.trunc.i64 v813
      nextln:   v815 = i64.wrapping_add v2, 0x5
      nextln:   v816 = i64.unsigned_from_bits v815
      nextln:   v817 = int.modulo v816, 0x1
      nextln:   v818 = int.sub v816, v817
      nextln:   v819 = i64.to_bits v818
      nextln:   v820 = bool.icmp.i64.eq v815, v819
      nextln:   v821 = i64.lshr v815, 0x30
      nextln:   v822 = i16.trunc.i64 v821
      nextln:   v823 = bool.icmp.i16.eq v822, 0x0
      nextln:   v824 = bool.bitwise_not v823
      nextln:   jumpif v824, addr_0_block_219, addr_0_block_220
      check: addr_0_block_219: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_220: // preds: addr_0_block_218
      nextln:   jump addr_0_block_221(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_221(v1297: i52, v1298: int, v1299: bool, v1300: bool): // preds: addr_0_block_220
      nextln:   v1301 = i52.trunc.i64 v815
      nextln:   jump addr_0_block_222(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1301, 0x1, 0x0)
      check: addr_0_block_222(v825: i3, v826: i1, v827: i1, v828: i1, v829: i1, v830: i4, v831: i1, v832: bool, v833: int, v834: int, v835: bool, v836: bool, v837: i8, v838: i8, v839: i52, v840: i1, v841: bool, v842: bool, v843: int, v844: i1, v845: bool, v846: i4, v847: i2, v848: i4, v849: i8, v850: i8, v851: i2, v852: i2, v853: bool, v854: i2, v855: i2, v856: bool, v857: bool, v858: bool, v859: bool, v860: i52, v861: i1, v862: i64, v863: i1, v864: i8, v865: i8, v866: i52, v867: i1, v868: bool, v869: bool, v870: int, v871: i1, v872: bool, v873: i4, v874: i2, v875: i4, v876: i8, v877: i8, v878: i2, v879: i2, v880: bool, v881: i2, v882: i2, v883: bool, v884: bool, v885: bool, v886: bool, v887: i52, v888: i1, v889: i64): // preds: addr_0_block_219 addr_0_block_221
      nextln:   v890 = bool.icmp.i8.ne v864, 0x0
      nextln:   v891 = bool.bitwise_not v890
      nextln:   v892 = bool.bitwise_not v8
      nextln:   v893 = bool.and v892, 0x1
      nextln:   v894 = bool.or v893, 0x0
      nextln:   v895 = bool.icmp.i8.ne v864, 0x0
      nextln:   v896 = bool.bitwise_not v895
      nextln:   v897 = bool.and v894, v896
      nextln:   v898 = bool.icmp.i8.eq v876, 0x1
      nextln:   v899 = bool.and v897, v898
      nextln:   jumpif v899, addr_0_block_223, addr_0_block_224
      check: addr_0_block_223: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_224: // preds: addr_0_block_222
      nextln:   jump addr_0_block_225
      check: addr_0_block_225: // preds: addr_0_block_223 addr_0_block_224
      nextln:   v900 = bool.icmp.i8.ne v864, 0x0
      nextln:   v901 = bool.bitwise_not v900
      nextln:   v902 = bool.icmp.i8.ne v864, 0x0
      nextln:   v903 = bool.bitwise_not v902
      nextln:   v904 = bool.icmp.i8.eq v876, 0x1
      nextln:   v905 = bool.and v903, v904
      nextln:   jumpif v835, addr_0_block_226, addr_0_block_227
      check: addr_0_block_226: // preds: addr_0_block_225
      nextln:   v906 = bool.icmp.i8.eq v864, 0x0
      nextln:   jump addr_0_block_228(0x1)
      check: addr_0_block_227: // preds: addr_0_block_225
      nextln:   jump addr_0_block_228(0x0)
      check: addr_0_block_228(v907: bool): // preds: addr_0_block_226 addr_0_block_227
      nextln:   v908 = bool.icmp.i8.eq v864, 0x0
      nextln:   v909 = bool.and v836, v908
      nextln:   jumpif v909, addr_0_block_229, addr_0_block_230
      check: addr_0_block_229: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x1, 0x1)
      check: addr_0_block_230: // preds: addr_0_block_228
      nextln:   jump addr_0_block_231(0x0, 0x0)
      check: addr_0_block_231(v910: bool, v911: bool): // preds: addr_0_block_229 addr_0_block_230
      nextln:   v912 = bool.or v907, v910
      nextln:   jumpif v912, addr_0_block_232, addr_0_block_245
      check: addr_0_block_232: // preds: addr_0_block_231
      nextln:   v913 = i52.unsigned_from_bits v860
      nextln:   v914 = int.modulo v913, 0x8
      nextln:   v915 = int.sub v913, v914
      nextln:   v916 = i52.to_bits v915
      nextln:   v917 = bool.icmp.i52.eq v860, v916
      nextln:   v918 = i64.load v860
      nextln:   jumpif v907, addr_0_block_233, addr_0_block_234
      nextln:   jump addr_0_block_246(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v918, v837, v838, v839, v840, v841, v842, v843, v844, v845, v846, v847, v848, v849, v850, v851, v852, v853, v854, v855, v856, v857, v858, v859, v860, v861, v862, 0x0, 0x0)
      check: addr_0_block_233: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_234: // no preds!
      nextln:   jump addr_0_block_235
      check: addr_0_block_235: // preds: addr_0_block_233 addr_0_block_234
      nextln:   jumpif v910, addr_0_block_236, addr_0_block_237
      check: addr_0_block_236: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_237: // preds: addr_0_block_235
      nextln:   jump addr_0_block_238
      check: addr_0_block_238: // preds: addr_0_block_236 addr_0_block_237
      nextln:   v1382 = i52.unsigned_from_bits v860
      nextln:   v1383 = int.modulo v1382, 0x8
      nextln:   v1384 = int.sub v1382, v1383
      nextln:   v1385 = i52.to_bits v1384
      nextln:   v1386 = bool.icmp.i52.eq v860, v1385
      nextln:   v1387 = bool.icmp.i52.eq v860, 0x13000000
      nextln:   jumpif v1387, addr_0_block_239, addr_0_block_243
      check: addr_0_block_239: // preds: addr_0_block_238
      nextln:   v1388 = i64.unsigned_from_bits v918
      nextln:   v1389 = bool.icmp.int.eq v1388, 0x4
      nextln:   jumpif v1389, addr_0_block_240, addr_0_block_241
      nextln:   jump addr_0_block_244
      check: addr_0_block_240: // no preds!
      nextln:   jump addr_0_block_242
      check: addr_0_block_241: // no preds!
      nextln:   v1390 = i8.trunc.i64 v918
      nextln:   v1391 = i8.unsigned_from_bits v1390
      nextln:   jump addr_0_block_242
      check: addr_0_block_242: // preds: addr_0_block_240 addr_0_block_241
      check: addr_0_block_243: // preds: addr_0_block_238
      nextln:   store.i64 v918, v860
      nextln:   jump addr_0_block_244
      check: addr_0_block_244: // preds: addr_0_block_239 addr_0_block_243
      check: addr_0_block_245: // preds: addr_0_block_231
      nextln:   jump addr_0_block_246(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_246(v919: i8, v920: i1, v921: i16, v922: i8, v923: bool, v924: bool, v925: bool, v926: int, v927: i64, v928: i8, v929: i8, v930: i52, v931: i1, v932: bool, v933: bool, v934: int, v935: i1, v936: bool, v937: i4, v938: i2, v939: i4, v940: i8, v941: i8, v942: i2, v943: i2, v944: bool, v945: i2, v946: i2, v947: bool, v948: bool, v949: bool, v950: bool, v951: i52, v952: i1, v953: i64, v954: i2, v955: bool): // preds: addr_0_block_232 addr_0_block_245
      nextln:   v956 = bool.icmp.i8.ne v864, 0x0
      nextln:   v957 = bool.bitwise_not v956
      nextln:   v958 = bool.and v957, 0x1
      nextln:   v959 = bool.icmp.i8.ne v864, 0x0
      nextln:   v960 = bool.bitwise_not v959
      nextln:   v961 = bool.and 0x1, v960
      nextln:   jumpif v961, addr_0_block_247, addr_0_block_248
      check: addr_0_block_247: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_248: // preds: addr_0_block_246
      nextln:   jump addr_0_block_249
      check: addr_0_block_249: // preds: addr_0_block_247 addr_0_block_248
      nextln:   v962 = bool.icmp.i8.ne v864, 0x0
      nextln:   jumpif v962, addr_0_block_250, addr_0_block_251
      check: addr_0_block_250: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_251: // preds: addr_0_block_249
      nextln:   jump addr_0_block_252
      check: addr_0_block_252: // preds: addr_0_block_250 addr_0_block_251
      nextln:   jumpif v885, addr_0_block_253, addr_0_block_254
      check: addr_0_block_253: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_254: // preds: addr_0_block_252
      nextln:   jump addr_0_block_255
      check: addr_0_block_255: // preds: addr_0_block_253 addr_0_block_254
      nextln:   v963 = i52.unsigned_from_bits v887
      nextln:   v964 = int.modulo v963, 0x1
      nextln:   v965 = int.sub v963, v964
      nextln:   v966 = i52.to_bits v965
      nextln:   v967 = bool.icmp.i52.eq v887, v966
      nextln:   v968 = bool.icmp.i52.eq v887, 0x13000000
      nextln:   jumpif v968, addr_0_block_256, addr_0_block_260
      check: addr_0_block_256: // preds: addr_0_block_255
      nextln:   v969 = i8.unsigned_from_bits v814
      nextln:   v970 = bool.icmp.int.eq v969, 0x4
      nextln:   jumpif v970, addr_0_block_257, addr_0_block_258
      nextln:   jump addr_0_block_261
      check: addr_0_block_257: // no preds!
      nextln:   jump addr_0_block_259
      check: addr_0_block_258: // no preds!
      nextln:   v1392 = i8.unsigned_from_bits v814
      nextln:   jump addr_0_block_259
      check: addr_0_block_259: // preds: addr_0_block_257 addr_0_block_258
      check: addr_0_block_260: // preds: addr_0_block_255
      nextln:   store.i8 v814, v887
      nextln:   jump addr_0_block_261
      check: addr_0_block_261: // preds: addr_0_block_256 addr_0_block_260
      nextln:   v971 = i64.lshr v3, 0x30
      nextln:   v972 = i8.trunc.i64 v971
      nextln:   v973 = i64.wrapping_add v2, 0x6
      nextln:   v974 = i64.unsigned_from_bits v973
      nextln:   v975 = int.modulo v974, 0x1
      nextln:   v976 = int.sub v974, v975
      nextln:   v977 = i64.to_bits v976
      nextln:   v978 = bool.icmp.i64.eq v973, v977
      nextln:   v979 = i64.lshr v973, 0x30
      nextln:   v980 = i16.trunc.i64 v979
      nextln:   v981 = bool.icmp.i16.eq v980, 0x0
      nextln:   v982 = bool.bitwise_not v981
      nextln:   jumpif v982, addr_0_block_262, addr_0_block_263
      check: addr_0_block_262: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_263: // preds: addr_0_block_261
      nextln:   jump addr_0_block_264(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_264(v1292: i52, v1293: int, v1294: bool, v1295: bool): // preds: addr_0_block_263
      nextln:   v1296 = i52.trunc.i64 v973
      nextln:   jump addr_0_block_265(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1296, 0x1, 0x0)
      check: addr_0_block_265(v983: i3, v984: i1, v985: i1, v986: i1, v987: i1, v988: i4, v989: i1, v990: bool, v991: int, v992: int, v993: bool, v994: bool, v995: i8, v996: i8, v997: i52, v998: i1, v999: bool, v1000: bool, v1001: int, v1002: i1, v1003: bool, v1004: i4, v1005: i2, v1006: i4, v1007: i8, v1008: i8, v1009: i2, v1010: i2, v1011: bool, v1012: i2, v1013: i2, v1014: bool, v1015: bool, v1016: bool, v1017: bool, v1018: i52, v1019: i1, v1020: i64, v1021: i1, v1022: i8, v1023: i8, v1024: i52, v1025: i1, v1026: bool, v1027: bool, v1028: int, v1029: i1, v1030: bool, v1031: i4, v1032: i2, v1033: i4, v1034: i8, v1035: i8, v1036: i2, v1037: i2, v1038: bool, v1039: i2, v1040: i2, v1041: bool, v1042: bool, v1043: bool, v1044: bool, v1045: i52, v1046: i1, v1047: i64): // preds: addr_0_block_262 addr_0_block_264
      nextln:   v1048 = bool.icmp.i8.ne v1022, 0x0
      nextln:   v1049 = bool.bitwise_not v1048
      nextln:   v1050 = bool.bitwise_not v8
      nextln:   v1051 = bool.and v1050, 0x1
      nextln:   v1052 = bool.or v1051, 0x0
      nextln:   v1053 = bool.icmp.i8.ne v1022, 0x0
      nextln:   v1054 = bool.bitwise_not v1053
      nextln:   v1055 = bool.and v1052, v1054
      nextln:   v1056 = bool.icmp.i8.eq v1034, 0x1
      nextln:   v1057 = bool.and v1055, v1056
      nextln:   jumpif v1057, addr_0_block_266, addr_0_block_267
      check: addr_0_block_266: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_267: // preds: addr_0_block_265
      nextln:   jump addr_0_block_268
      check: addr_0_block_268: // preds: addr_0_block_266 addr_0_block_267
      nextln:   v1058 = bool.icmp.i8.ne v1022, 0x0
      nextln:   v1059 = bool.bitwise_not v1058
      nextln:   v1060 = bool.icmp.i8.ne v1022, 0x0
      nextln:   v1061 = bool.bitwise_not v1060
      nextln:   v1062 = bool.icmp.i8.eq v1034, 0x1
      nextln:   v1063 = bool.and v1061, v1062
      nextln:   jumpif v993, addr_0_block_269, addr_0_block_270
      check: addr_0_block_269: // preds: addr_0_block_268
      nextln:   v1064 = bool.icmp.i8.eq v1022, 0x0
      nextln:   jump addr_0_block_271(0x1)
      check: addr_0_block_270: // preds: addr_0_block_268
      nextln:   jump addr_0_block_271(0x0)
      check: addr_0_block_271(v1065: bool): // preds: addr_0_block_269 addr_0_block_270
      nextln:   v1066 = bool.icmp.i8.eq v1022, 0x0
      nextln:   v1067 = bool.and v994, v1066
      nextln:   jumpif v1067, addr_0_block_272, addr_0_block_273
      check: addr_0_block_272: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x1, 0x1)
      check: addr_0_block_273: // preds: addr_0_block_271
      nextln:   jump addr_0_block_274(0x0, 0x0)
      check: addr_0_block_274(v1068: bool, v1069: bool): // preds: addr_0_block_272 addr_0_block_273
      nextln:   v1070 = bool.or v1065, v1068
      nextln:   jumpif v1070, addr_0_block_275, addr_0_block_288
      check: addr_0_block_275: // preds: addr_0_block_274
      nextln:   v1071 = i52.unsigned_from_bits v1018
      nextln:   v1072 = int.modulo v1071, 0x8
      nextln:   v1073 = int.sub v1071, v1072
      nextln:   v1074 = i52.to_bits v1073
      nextln:   v1075 = bool.icmp.i52.eq v1018, v1074
      nextln:   v1076 = i64.load v1018
      nextln:   jumpif v1065, addr_0_block_276, addr_0_block_277
      nextln:   jump addr_0_block_289(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1076, v995, v996, v997, v998, v999, v1000, v1001, v1002, v1003, v1004, v1005, v1006, v1007, v1008, v1009, v1010, v1011, v1012, v1013, v1014, v1015, v1016, v1017, v1018, v1019, v1020, 0x0, 0x0)
      check: addr_0_block_276: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_277: // no preds!
      nextln:   jump addr_0_block_278
      check: addr_0_block_278: // preds: addr_0_block_276 addr_0_block_277
      nextln:   jumpif v1068, addr_0_block_279, addr_0_block_280
      check: addr_0_block_279: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_280: // preds: addr_0_block_278
      nextln:   jump addr_0_block_281
      check: addr_0_block_281: // preds: addr_0_block_279 addr_0_block_280
      nextln:   v1393 = i52.unsigned_from_bits v1018
      nextln:   v1394 = int.modulo v1393, 0x8
      nextln:   v1395 = int.sub v1393, v1394
      nextln:   v1396 = i52.to_bits v1395
      nextln:   v1397 = bool.icmp.i52.eq v1018, v1396
      nextln:   v1398 = bool.icmp.i52.eq v1018, 0x13000000
      nextln:   jumpif v1398, addr_0_block_282, addr_0_block_286
      check: addr_0_block_282: // preds: addr_0_block_281
      nextln:   v1399 = i64.unsigned_from_bits v1076
      nextln:   v1400 = bool.icmp.int.eq v1399, 0x4
      nextln:   jumpif v1400, addr_0_block_283, addr_0_block_284
      nextln:   jump addr_0_block_287
      check: addr_0_block_283: // no preds!
      nextln:   jump addr_0_block_285
      check: addr_0_block_284: // no preds!
      nextln:   v1401 = i8.trunc.i64 v1076
      nextln:   v1402 = i8.unsigned_from_bits v1401
      nextln:   jump addr_0_block_285
      check: addr_0_block_285: // preds: addr_0_block_283 addr_0_block_284
      check: addr_0_block_286: // preds: addr_0_block_281
      nextln:   store.i64 v1076, v1018
      nextln:   jump addr_0_block_287
      check: addr_0_block_287: // preds: addr_0_block_282 addr_0_block_286
      check: addr_0_block_288: // preds: addr_0_block_274
      nextln:   jump addr_0_block_289(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_289(v1077: i8, v1078: i1, v1079: i16, v1080: i8, v1081: bool, v1082: bool, v1083: bool, v1084: int, v1085: i64, v1086: i8, v1087: i8, v1088: i52, v1089: i1, v1090: bool, v1091: bool, v1092: int, v1093: i1, v1094: bool, v1095: i4, v1096: i2, v1097: i4, v1098: i8, v1099: i8, v1100: i2, v1101: i2, v1102: bool, v1103: i2, v1104: i2, v1105: bool, v1106: bool, v1107: bool, v1108: bool, v1109: i52, v1110: i1, v1111: i64, v1112: i2, v1113: bool): // preds: addr_0_block_275 addr_0_block_288
      nextln:   v1114 = bool.icmp.i8.ne v1022, 0x0
      nextln:   v1115 = bool.bitwise_not v1114
      nextln:   v1116 = bool.and v1115, 0x1
      nextln:   v1117 = bool.icmp.i8.ne v1022, 0x0
      nextln:   v1118 = bool.bitwise_not v1117
      nextln:   v1119 = bool.and 0x1, v1118
      nextln:   jumpif v1119, addr_0_block_290, addr_0_block_291
      check: addr_0_block_290: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_291: // preds: addr_0_block_289
      nextln:   jump addr_0_block_292
      check: addr_0_block_292: // preds: addr_0_block_290 addr_0_block_291
      nextln:   v1120 = bool.icmp.i8.ne v1022, 0x0
      nextln:   jumpif v1120, addr_0_block_293, addr_0_block_294
      check: addr_0_block_293: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_294: // preds: addr_0_block_292
      nextln:   jump addr_0_block_295
      check: addr_0_block_295: // preds: addr_0_block_293 addr_0_block_294
      nextln:   jumpif v1043, addr_0_block_296, addr_0_block_297
      check: addr_0_block_296: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_297: // preds: addr_0_block_295
      nextln:   jump addr_0_block_298
      check: addr_0_block_298: // preds: addr_0_block_296 addr_0_block_297
      nextln:   v1121 = i52.unsigned_from_bits v1045
      nextln:   v1122 = int.modulo v1121, 0x1
      nextln:   v1123 = int.sub v1121, v1122
      nextln:   v1124 = i52.to_bits v1123
      nextln:   v1125 = bool.icmp.i52.eq v1045, v1124
      nextln:   v1126 = bool.icmp.i52.eq v1045, 0x13000000
      nextln:   jumpif v1126, addr_0_block_299, addr_0_block_303
      check: addr_0_block_299: // preds: addr_0_block_298
      nextln:   v1127 = i8.unsigned_from_bits v972
      nextln:   v1128 = bool.icmp.int.eq v1127, 0x4
      nextln:   jumpif v1128, addr_0_block_300, addr_0_block_301
      nextln:   jump addr_0_block_304
      check: addr_0_block_300: // no preds!
      nextln:   jump addr_0_block_302
      check: addr_0_block_301: // no preds!
      nextln:   v1403 = i8.unsigned_from_bits v972
      nextln:   jump addr_0_block_302
      check: addr_0_block_302: // preds: addr_0_block_300 addr_0_block_301
      check: addr_0_block_303: // preds: addr_0_block_298
      nextln:   store.i8 v972, v1045
      nextln:   jump addr_0_block_304
      check: addr_0_block_304: // preds: addr_0_block_299 addr_0_block_303
      nextln:   v1129 = i64.lshr v3, 0x38
      nextln:   v1130 = i8.trunc.i64 v1129
      nextln:   v1131 = i64.wrapping_add v2, 0x7
      nextln:   v1132 = i64.unsigned_from_bits v1131
      nextln:   v1133 = int.modulo v1132, 0x1
      nextln:   v1134 = int.sub v1132, v1133
      nextln:   v1135 = i64.to_bits v1134
      nextln:   v1136 = bool.icmp.i64.eq v1131, v1135
      nextln:   v1137 = i64.lshr v1131, 0x30
      nextln:   v1138 = i16.trunc.i64 v1137
      nextln:   v1139 = bool.icmp.i16.eq v1138, 0x0
      nextln:   v1140 = bool.bitwise_not v1139
      nextln:   jumpif v1140, addr_0_block_305, addr_0_block_306
      check: addr_0_block_305: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_306: // preds: addr_0_block_304
      nextln:   jump addr_0_block_307(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_307(v1287: i52, v1288: int, v1289: bool, v1290: bool): // preds: addr_0_block_306
      nextln:   v1291 = i52.trunc.i64 v1131
      nextln:   jump addr_0_block_308(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1291, 0x1, 0x0)
      check: addr_0_block_308(v1141: i3, v1142: i1, v1143: i1, v1144: i1, v1145: i1, v1146: i4, v1147: i1, v1148: bool, v1149: int, v1150: int, v1151: bool, v1152: bool, v1153: i8, v1154: i8, v1155: i52, v1156: i1, v1157: bool, v1158: bool, v1159: int, v1160: i1, v1161: bool, v1162: i4, v1163: i2, v1164: i4, v1165: i8, v1166: i8, v1167: i2, v1168: i2, v1169: bool, v1170: i2, v1171: i2, v1172: bool, v1173: bool, v1174: bool, v1175: bool, v1176: i52, v1177: i1, v1178: i64, v1179: i1, v1180: i8, v1181: i8, v1182: i52, v1183: i1, v1184: bool, v1185: bool, v1186: int, v1187: i1, v1188: bool, v1189: i4, v1190: i2, v1191: i4, v1192: i8, v1193: i8, v1194: i2, v1195: i2, v1196: bool, v1197: i2, v1198: i2, v1199: bool, v1200: bool, v1201: bool, v1202: bool, v1203: i52, v1204: i1, v1205: i64): // preds: addr_0_block_305 addr_0_block_307
      nextln:   v1206 = bool.icmp.i8.ne v1180, 0x0
      nextln:   v1207 = bool.bitwise_not v1206
      nextln:   v1208 = bool.bitwise_not v8
      nextln:   v1209 = bool.and v1208, 0x1
      nextln:   v1210 = bool.or v1209, 0x0
      nextln:   v1211 = bool.icmp.i8.ne v1180, 0x0
      nextln:   v1212 = bool.bitwise_not v1211
      nextln:   v1213 = bool.and v1210, v1212
      nextln:   v1214 = bool.icmp.i8.eq v1192, 0x1
      nextln:   v1215 = bool.and v1213, v1214
      nextln:   jumpif v1215, addr_0_block_309, addr_0_block_310
      check: addr_0_block_309: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_310: // preds: addr_0_block_308
      nextln:   jump addr_0_block_311
      check: addr_0_block_311: // preds: addr_0_block_309 addr_0_block_310
      nextln:   v1216 = bool.icmp.i8.ne v1180, 0x0
      nextln:   v1217 = bool.bitwise_not v1216
      nextln:   v1218 = bool.icmp.i8.ne v1180, 0x0
      nextln:   v1219 = bool.bitwise_not v1218
      nextln:   v1220 = bool.icmp.i8.eq v1192, 0x1
      nextln:   v1221 = bool.and v1219, v1220
      nextln:   jumpif v1151, addr_0_block_312, addr_0_block_313
      check: addr_0_block_312: // preds: addr_0_block_311
      nextln:   v1222 = bool.icmp.i8.eq v1180, 0x0
      nextln:   jump addr_0_block_314(0x1)
      check: addr_0_block_313: // preds: addr_0_block_311
      nextln:   jump addr_0_block_314(0x0)
      check: addr_0_block_314(v1223: bool): // preds: addr_0_block_312 addr_0_block_313
      nextln:   v1224 = bool.icmp.i8.eq v1180, 0x0
      nextln:   v1225 = bool.and v1152, v1224
      nextln:   jumpif v1225, addr_0_block_315, addr_0_block_316
      check: addr_0_block_315: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x1, 0x1)
      check: addr_0_block_316: // preds: addr_0_block_314
      nextln:   jump addr_0_block_317(0x0, 0x0)
      check: addr_0_block_317(v1226: bool, v1227: bool): // preds: addr_0_block_315 addr_0_block_316
      nextln:   v1228 = bool.or v1223, v1226
      nextln:   jumpif v1228, addr_0_block_318, addr_0_block_331
      check: addr_0_block_318: // preds: addr_0_block_317
      nextln:   v1229 = i52.unsigned_from_bits v1176
      nextln:   v1230 = int.modulo v1229, 0x8
      nextln:   v1231 = int.sub v1229, v1230
      nextln:   v1232 = i52.to_bits v1231
      nextln:   v1233 = bool.icmp.i52.eq v1176, v1232
      nextln:   v1234 = i64.load v1176
      nextln:   jumpif v1223, addr_0_block_319, addr_0_block_320
      nextln:   jump addr_0_block_332(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1234, v1153, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1166, v1167, v1168, v1169, v1170, v1171, v1172, v1173, v1174, v1175, v1176, v1177, v1178, 0x0, 0x0)
      check: addr_0_block_319: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_320: // no preds!
      nextln:   jump addr_0_block_321
      check: addr_0_block_321: // preds: addr_0_block_319 addr_0_block_320
      nextln:   jumpif v1226, addr_0_block_322, addr_0_block_323
      check: addr_0_block_322: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_323: // preds: addr_0_block_321
      nextln:   jump addr_0_block_324
      check: addr_0_block_324: // preds: addr_0_block_322 addr_0_block_323
      nextln:   v1404 = i52.unsigned_from_bits v1176
      nextln:   v1405 = int.modulo v1404, 0x8
      nextln:   v1406 = int.sub v1404, v1405
      nextln:   v1407 = i52.to_bits v1406
      nextln:   v1408 = bool.icmp.i52.eq v1176, v1407
      nextln:   v1409 = bool.icmp.i52.eq v1176, 0x13000000
      nextln:   jumpif v1409, addr_0_block_325, addr_0_block_329
      check: addr_0_block_325: // preds: addr_0_block_324
      nextln:   v1410 = i64.unsigned_from_bits v1234
      nextln:   v1411 = bool.icmp.int.eq v1410, 0x4
      nextln:   jumpif v1411, addr_0_block_326, addr_0_block_327
      nextln:   jump addr_0_block_330
      check: addr_0_block_326: // no preds!
      nextln:   jump addr_0_block_328
      check: addr_0_block_327: // no preds!
      nextln:   v1412 = i8.trunc.i64 v1234
      nextln:   v1413 = i8.unsigned_from_bits v1412
      nextln:   jump addr_0_block_328
      check: addr_0_block_328: // preds: addr_0_block_326 addr_0_block_327
      check: addr_0_block_329: // preds: addr_0_block_324
      nextln:   store.i64 v1234, v1176
      nextln:   jump addr_0_block_330
      check: addr_0_block_330: // preds: addr_0_block_325 addr_0_block_329
      check: addr_0_block_331: // preds: addr_0_block_317
      nextln:   jump addr_0_block_332(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_332(v1235: i8, v1236: i1, v1237: i16, v1238: i8, v1239: bool, v1240: bool, v1241: bool, v1242: int, v1243: i64, v1244: i8, v1245: i8, v1246: i52, v1247: i1, v1248: bool, v1249: bool, v1250: int, v1251: i1, v1252: bool, v1253: i4, v1254: i2, v1255: i4, v1256: i8, v1257: i8, v1258: i2, v1259: i2, v1260: bool, v1261: i2, v1262: i2, v1263: bool, v1264: bool, v1265: bool, v1266: bool, v1267: i52, v1268: i1, v1269: i64, v1270: i2, v1271: bool): // preds: addr_0_block_318 addr_0_block_331
      nextln:   v1272 = bool.icmp.i8.ne v1180, 0x0
      nextln:   v1273 = bool.bitwise_not v1272
      nextln:   v1274 = bool.and v1273, 0x1
      nextln:   v1275 = bool.icmp.i8.ne v1180, 0x0
      nextln:   v1276 = bool.bitwise_not v1275
      nextln:   v1277 = bool.and 0x1, v1276
      nextln:   jumpif v1277, addr_0_block_333, addr_0_block_334
      check: addr_0_block_333: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_334: // preds: addr_0_block_332
      nextln:   jump addr_0_block_335
      check: addr_0_block_335: // preds: addr_0_block_333 addr_0_block_334
      nextln:   v1278 = bool.icmp.i8.ne v1180, 0x0
      nextln:   jumpif v1278, addr_0_block_336, addr_0_block_337
      check: addr_0_block_336: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_337: // preds: addr_0_block_335
      nextln:   jump addr_0_block_338
      check: addr_0_block_338: // preds: addr_0_block_336 addr_0_block_337
      nextln:   jumpif v1201, addr_0_block_339, addr_0_block_340
      check: addr_0_block_339: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_340: // preds: addr_0_block_338
      nextln:   jump addr_0_block_341
      check: addr_0_block_341: // preds: addr_0_block_339 addr_0_block_340
      nextln:   v1279 = i52.unsigned_from_bits v1203
      nextln:   v1280 = int.modulo v1279, 0x1
      nextln:   v1281 = int.sub v1279, v1280
      nextln:   v1282 = i52.to_bits v1281
      nextln:   v1283 = bool.icmp.i52.eq v1203, v1282
      nextln:   v1284 = bool.icmp.i52.eq v1203, 0x13000000
      nextln:   jumpif v1284, addr_0_block_342, addr_0_block_346
      check: addr_0_block_342: // preds: addr_0_block_341
      nextln:   v1285 = i8.unsigned_from_bits v1130
      nextln:   v1286 = bool.icmp.int.eq v1285, 0x4
      nextln:   jumpif v1286, addr_0_block_343, addr_0_block_344
      nextln:   jump addr_0_block_347
      check: addr_0_block_343: // no preds!
      nextln:   jump addr_0_block_345
      check: addr_0_block_344: // no preds!
      nextln:   v1414 = i8.unsigned_from_bits v1130
      nextln:   jump addr_0_block_345
      check: addr_0_block_345: // preds: addr_0_block_343 addr_0_block_344
      check: addr_0_block_346: // preds: addr_0_block_341
      nextln:   store.i8 v1130, v1203
      nextln:   jump addr_0_block_347
      check: addr_0_block_347: // preds: addr_0_block_342 addr_0_block_346
      check: addr_0_block_348: // preds: entry
      nextln:   v23 = i64.unsigned_from_bits v2
      nextln:   v24 = int.modulo v23, 0x8
      nextln:   v25 = int.sub v23, v24
      nextln:   v26 = i64.to_bits v25
      nextln:   v27 = bool.icmp.i64.eq v2, v26
      nextln:   v28 = i64.lshr v2, 0x30
      nextln:   v29 = i16.trunc.i64 v28
      nextln:   v30 = bool.icmp.i16.eq v29, 0x0
      nextln:   v31 = bool.bitwise_not v30
      nextln:   jumpif v31, addr_0_block_349, addr_0_block_350
      nextln:   jump addr_0_block_392(v8, 0x0)
      check: addr_0_block_349: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_350: // no preds!
      nextln:   jump addr_0_block_351(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_351(v1561: i52, v1562: int, v1563: bool, v1564: bool): // preds: addr_0_block_350
      nextln:   v1565 = i52.trunc.i64 v2
      nextln:   jump addr_0_block_352(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v1565, 0x1, 0x0)
      check: addr_0_block_352(v1415: i3, v1416: i1, v1417: i1, v1418: i1, v1419: i1, v1420: i4, v1421: i1, v1422: bool, v1423: int, v1424: int, v1425: bool, v1426: bool, v1427: i8, v1428: i8, v1429: i52, v1430: i1, v1431: bool, v1432: bool, v1433: int, v1434: i1, v1435: bool, v1436: i4, v1437: i2, v1438: i4, v1439: i8, v1440: i8, v1441: i2, v1442: i2, v1443: bool, v1444: i2, v1445: i2, v1446: bool, v1447: bool, v1448: bool, v1449: bool, v1450: i52, v1451: i1, v1452: i64, v1453: i1, v1454: i8, v1455: i8, v1456: i52, v1457: i1, v1458: bool, v1459: bool, v1460: int, v1461: i1, v1462: bool, v1463: i4, v1464: i2, v1465: i4, v1466: i8, v1467: i8, v1468: i2, v1469: i2, v1470: bool, v1471: i2, v1472: i2, v1473: bool, v1474: bool, v1475: bool, v1476: bool, v1477: i52, v1478: i1, v1479: i64): // preds: addr_0_block_349 addr_0_block_351
      nextln:   v1480 = bool.icmp.i8.ne v1454, 0x0
      nextln:   v1481 = bool.bitwise_not v1480
      nextln:   v1482 = bool.bitwise_not v8
      nextln:   v1483 = bool.and v1482, 0x1
      nextln:   v1484 = bool.or v1483, 0x0
      nextln:   v1485 = bool.icmp.i8.ne v1454, 0x0
      nextln:   v1486 = bool.bitwise_not v1485
      nextln:   v1487 = bool.and v1484, v1486
      nextln:   v1488 = bool.icmp.i8.eq v1466, 0x1
      nextln:   v1489 = bool.and v1487, v1488
      nextln:   jumpif v1489, addr_0_block_353, addr_0_block_354
      check: addr_0_block_353: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_354: // preds: addr_0_block_352
      nextln:   jump addr_0_block_355
      check: addr_0_block_355: // preds: addr_0_block_353 addr_0_block_354
      nextln:   v1490 = bool.icmp.i8.ne v1454, 0x0
      nextln:   v1491 = bool.bitwise_not v1490
      nextln:   v1492 = bool.icmp.i8.ne v1454, 0x0
      nextln:   v1493 = bool.bitwise_not v1492
      nextln:   v1494 = bool.icmp.i8.eq v1466, 0x1
      nextln:   v1495 = bool.and v1493, v1494
      nextln:   jumpif v1425, addr_0_block_356, addr_0_block_357
      check: addr_0_block_356: // preds: addr_0_block_355
      nextln:   v1496 = bool.icmp.i8.eq v1454, 0x0
      nextln:   jump addr_0_block_358(0x1)
      check: addr_0_block_357: // preds: addr_0_block_355
      nextln:   jump addr_0_block_358(0x0)
      check: addr_0_block_358(v1497: bool): // preds: addr_0_block_356 addr_0_block_357
      nextln:   v1498 = bool.icmp.i8.eq v1454, 0x0
      nextln:   v1499 = bool.and v1426, v1498
      nextln:   jumpif v1499, addr_0_block_359, addr_0_block_360
      check: addr_0_block_359: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x1, 0x1)
      check: addr_0_block_360: // preds: addr_0_block_358
      nextln:   jump addr_0_block_361(0x0, 0x0)
      check: addr_0_block_361(v1500: bool, v1501: bool): // preds: addr_0_block_359 addr_0_block_360
      nextln:   v1502 = bool.or v1497, v1500
      nextln:   jumpif v1502, addr_0_block_362, addr_0_block_375
      check: addr_0_block_362: // preds: addr_0_block_361
      nextln:   v1503 = i52.unsigned_from_bits v1450
      nextln:   v1504 = int.modulo v1503, 0x8
      nextln:   v1505 = int.sub v1503, v1504
      nextln:   v1506 = i52.to_bits v1505
      nextln:   v1507 = bool.icmp.i52.eq v1450, v1506
      nextln:   v1508 = i64.load v1450
      nextln:   jumpif v1497, addr_0_block_363, addr_0_block_364
      nextln:   jump addr_0_block_376(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v1508, v1427, v1428, v1429, v1430, v1431, v1432, v1433, v1434, v1435, v1436, v1437, v1438, v1439, v1440, v1441, v1442, v1443, v1444, v1445, v1446, v1447, v1448, v1449, v1450, v1451, v1452, 0x0, 0x0)
      check: addr_0_block_363: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_364: // no preds!
      nextln:   jump addr_0_block_365
      check: addr_0_block_365: // preds: addr_0_block_363 addr_0_block_364
      nextln:   jumpif v1500, addr_0_block_366, addr_0_block_367
      check: addr_0_block_366: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_367: // preds: addr_0_block_365
      nextln:   jump addr_0_block_368
      check: addr_0_block_368: // preds: addr_0_block_366 addr_0_block_367
      nextln:   v1566 = i52.unsigned_from_bits v1450
      nextln:   v1567 = int.modulo v1566, 0x8
      nextln:   v1568 = int.sub v1566, v1567
      nextln:   v1569 = i52.to_bits v1568
      nextln:   v1570 = bool.icmp.i52.eq v1450, v1569
      nextln:   v1571 = bool.icmp.i52.eq v1450, 0x13000000
      nextln:   jumpif v1571, addr_0_block_369, addr_0_block_373
      check: addr_0_block_369: // preds: addr_0_block_368
      nextln:   v1572 = i64.unsigned_from_bits v1508
      nextln:   v1573 = bool.icmp.int.eq v1572, 0x4
      nextln:   jumpif v1573, addr_0_block_370, addr_0_block_371
      nextln:   jump addr_0_block_374
      check: addr_0_block_370: // no preds!
      nextln:   jump addr_0_block_372
      check: addr_0_block_371: // no preds!
      nextln:   v1574 = i8.trunc.i64 v1508
      nextln:   v1575 = i8.unsigned_from_bits v1574
      nextln:   jump addr_0_block_372
      check: addr_0_block_372: // preds: addr_0_block_370 addr_0_block_371
      check: addr_0_block_373: // preds: addr_0_block_368
      nextln:   store.i64 v1508, v1450
      nextln:   jump addr_0_block_374
      check: addr_0_block_374: // preds: addr_0_block_369 addr_0_block_373
      check: addr_0_block_375: // preds: addr_0_block_361
      nextln:   jump addr_0_block_376(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_376(v1509: i8, v1510: i1, v1511: i16, v1512: i8, v1513: bool, v1514: bool, v1515: bool, v1516: int, v1517: i64, v1518: i8, v1519: i8, v1520: i52, v1521: i1, v1522: bool, v1523: bool, v1524: int, v1525: i1, v1526: bool, v1527: i4, v1528: i2, v1529: i4, v1530: i8, v1531: i8, v1532: i2, v1533: i2, v1534: bool, v1535: i2, v1536: i2, v1537: bool, v1538: bool, v1539: bool, v1540: bool, v1541: i52, v1542: i1, v1543: i64, v1544: i2, v1545: bool): // preds: addr_0_block_362 addr_0_block_375
      nextln:   v1546 = bool.icmp.i8.ne v1454, 0x0
      nextln:   v1547 = bool.bitwise_not v1546
      nextln:   v1548 = bool.and v1547, 0x1
      nextln:   v1549 = bool.icmp.i8.ne v1454, 0x0
      nextln:   v1550 = bool.bitwise_not v1549
      nextln:   v1551 = bool.and 0x1, v1550
      nextln:   jumpif v1551, addr_0_block_377, addr_0_block_378
      check: addr_0_block_377: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_378: // preds: addr_0_block_376
      nextln:   jump addr_0_block_379
      check: addr_0_block_379: // preds: addr_0_block_377 addr_0_block_378
      nextln:   v1552 = bool.icmp.i8.ne v1454, 0x0
      nextln:   jumpif v1552, addr_0_block_380, addr_0_block_381
      check: addr_0_block_380: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_381: // preds: addr_0_block_379
      nextln:   jump addr_0_block_382
      check: addr_0_block_382: // preds: addr_0_block_380 addr_0_block_381
      nextln:   jumpif v1475, addr_0_block_383, addr_0_block_384
      check: addr_0_block_383: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_384: // preds: addr_0_block_382
      nextln:   jump addr_0_block_385
      check: addr_0_block_385: // preds: addr_0_block_383 addr_0_block_384
      nextln:   v1553 = i52.unsigned_from_bits v1477
      nextln:   v1554 = int.modulo v1553, 0x8
      nextln:   v1555 = int.sub v1553, v1554
      nextln:   v1556 = i52.to_bits v1555
      nextln:   v1557 = bool.icmp.i52.eq v1477, v1556
      nextln:   v1558 = bool.icmp.i52.eq v1477, 0x13000000
      nextln:   jumpif v1558, addr_0_block_386, addr_0_block_390
      check: addr_0_block_386: // preds: addr_0_block_385
      nextln:   v1559 = i64.unsigned_from_bits v3
      nextln:   v1560 = bool.icmp.int.eq v1559, 0x4
      nextln:   jumpif v1560, addr_0_block_387, addr_0_block_388
      nextln:   jump addr_0_block_391
      check: addr_0_block_387: // no preds!
      nextln:   jump addr_0_block_389
      check: addr_0_block_388: // no preds!
      nextln:   v1576 = i8.trunc.i64 v3
      nextln:   v1577 = i8.unsigned_from_bits v1576
      nextln:   jump addr_0_block_389
      check: addr_0_block_389: // preds: addr_0_block_387 addr_0_block_388
      check: addr_0_block_390: // preds: addr_0_block_385
      nextln:   store.i64 v3, v1477
      nextln:   jump addr_0_block_391
      check: addr_0_block_391: // preds: addr_0_block_386 addr_0_block_390
      check: addr_0_block_392(v21: i64, v22: i8): // preds: addr_0_block_0 addr_0_block_348
- name: str_4
  bytes: [0x21, 0x78, 0x23, 0xb8]
  directives: |
      check: entry: // entry block; no preds!
      nextln:   v0 = i64.read_reg "x3"
      nextln:   v1 = i62.trunc.i64 v0
      nextln:   v2 = i64.zext.i62 v1
      nextln:   v3 = i64.lshl v2, 0x2
      nextln:   v4 = i64.zext.i2 0x0
      nextln:   v5 = i64.or v3, v4
      nextln:   v6 = i64.read_reg "x1"
      nextln:   v7 = i64.wrapping_add v6, v5
      nextln:   v8 = i64.read_reg "x1"
      nextln:   v9 = i32.trunc.i64 v8
      nextln:   v10 = i64.unsigned_from_bits v7
      nextln:   v11 = int.modulo v10, 0x4
      nextln:   v12 = int.sub v10, v11
      nextln:   v13 = i64.to_bits v12
      nextln:   v14 = bool.icmp.i64.eq v7, v13
      nextln:   v15 = bool.bitwise_not v14
      nextln:   v16 = bool.bitwise_not v14
      nextln:   jumpif v16, addr_0_block_0, addr_0_block_176
      check: addr_0_block_0: // preds: entry
      nextln:   v17 = i8.trunc.i32 v9
      nextln:   v18 = i64.unsigned_from_bits v7
      nextln:   v19 = int.modulo v18, 0x1
      nextln:   v20 = int.sub v18, v19
      nextln:   v21 = i64.to_bits v20
      nextln:   v22 = bool.icmp.i64.eq v7, v21
      nextln:   v23 = i64.lshr v7, 0x30
      nextln:   v24 = i16.trunc.i64 v23
      nextln:   v25 = bool.icmp.i16.eq v24, 0x0
      nextln:   v26 = bool.bitwise_not v25
      nextln:   jumpif v26, addr_0_block_1, addr_0_block_2
      nextln:   jump addr_0_block_220(v185, v186)
      check: addr_0_block_1: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_2: // no preds!
      nextln:   jump addr_0_block_3(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_3(v676: i52, v677: int, v678: bool, v679: bool): // preds: addr_0_block_2
      nextln:   v680 = i52.trunc.i64 v7
      nextln:   jump addr_0_block_4(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v680, 0x1, 0x0)
      check: addr_0_block_4(v38: i3, v39: i1, v40: i1, v41: i1, v42: i1, v43: i4, v44: i1, v45: bool, v46: int, v47: int, v48: bool, v49: bool, v50: i8, v51: i8, v52: i52, v53: i1, v54: bool, v55: bool, v56: int, v57: i1, v58: bool, v59: i4, v60: i2, v61: i4, v62: i8, v63: i8, v64: i2, v65: i2, v66: bool, v67: i2, v68: i2, v69: bool, v70: bool, v71: bool, v72: bool, v73: i52, v74: i1, v75: i64, v76: i1, v77: i8, v78: i8, v79: i52, v80: i1, v81: bool, v82: bool, v83: int, v84: i1, v85: bool, v86: i4, v87: i2, v88: i4, v89: i8, v90: i8, v91: i2, v92: i2, v93: bool, v94: i2, v95: i2, v96: bool, v97: bool, v98: bool, v99: bool, v100: i52, v101: i1, v102: i64): // preds: addr_0_block_1 addr_0_block_3
      nextln:   v103 = bool.icmp.i8.ne v77, 0x0
      nextln:   v104 = bool.bitwise_not v103
      nextln:   v105 = bool.bitwise_not v14
      nextln:   v106 = bool.and v105, 0x1
      nextln:   v107 = bool.or v106, 0x0
      nextln:   v108 = bool.icmp.i8.ne v77, 0x0
      nextln:   v109 = bool.bitwise_not v108
      nextln:   v110 = bool.and v107, v109
      nextln:   v111 = bool.icmp.i8.eq v89, 0x1
      nextln:   v112 = bool.and v110, v111
      nextln:   jumpif v112, addr_0_block_5, addr_0_block_6
      check: addr_0_block_5: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_6: // preds: addr_0_block_4
      nextln:   jump addr_0_block_7
      check: addr_0_block_7: // preds: addr_0_block_5 addr_0_block_6
      nextln:   v113 = bool.icmp.i8.ne v77, 0x0
      nextln:   v114 = bool.bitwise_not v113
      nextln:   v115 = bool.icmp.i8.ne v77, 0x0
      nextln:   v116 = bool.bitwise_not v115
      nextln:   v117 = bool.icmp.i8.eq v89, 0x1
      nextln:   v118 = bool.and v116, v117
      nextln:   jumpif v48, addr_0_block_8, addr_0_block_9
      check: addr_0_block_8: // preds: addr_0_block_7
      nextln:   v119 = bool.icmp.i8.eq v77, 0x0
      nextln:   jump addr_0_block_10(0x1)
      check: addr_0_block_9: // preds: addr_0_block_7
      nextln:   jump addr_0_block_10(0x0)
      check: addr_0_block_10(v120: bool): // preds: addr_0_block_8 addr_0_block_9
      nextln:   v121 = bool.icmp.i8.eq v77, 0x0
      nextln:   v122 = bool.and v49, v121
      nextln:   jumpif v122, addr_0_block_11, addr_0_block_12
      check: addr_0_block_11: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x1, 0x1)
      check: addr_0_block_12: // preds: addr_0_block_10
      nextln:   jump addr_0_block_13(0x0, 0x0)
      check: addr_0_block_13(v123: bool, v124: bool): // preds: addr_0_block_11 addr_0_block_12
      nextln:   v125 = bool.or v120, v123
      nextln:   jumpif v125, addr_0_block_14, addr_0_block_27
      check: addr_0_block_14: // preds: addr_0_block_13
      nextln:   v126 = i52.unsigned_from_bits v73
      nextln:   v127 = int.modulo v126, 0x8
      nextln:   v128 = int.sub v126, v127
      nextln:   v129 = i52.to_bits v128
      nextln:   v130 = bool.icmp.i52.eq v73, v129
      nextln:   v131 = i64.load v73
      nextln:   jumpif v120, addr_0_block_15, addr_0_block_16
      nextln:   jump addr_0_block_28(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v131, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, 0x0, 0x0)
      check: addr_0_block_15: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_16: // no preds!
      nextln:   jump addr_0_block_17
      check: addr_0_block_17: // preds: addr_0_block_15 addr_0_block_16
      nextln:   jumpif v123, addr_0_block_18, addr_0_block_19
      check: addr_0_block_18: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_19: // preds: addr_0_block_17
      nextln:   jump addr_0_block_20
      check: addr_0_block_20: // preds: addr_0_block_18 addr_0_block_19
      nextln:   v681 = i52.unsigned_from_bits v73
      nextln:   v682 = int.modulo v681, 0x8
      nextln:   v683 = int.sub v681, v682
      nextln:   v684 = i52.to_bits v683
      nextln:   v685 = bool.icmp.i52.eq v73, v684
      nextln:   v686 = bool.icmp.i52.eq v73, 0x13000000
      nextln:   jumpif v686, addr_0_block_21, addr_0_block_25
      check: addr_0_block_21: // preds: addr_0_block_20
      nextln:   v687 = i64.unsigned_from_bits v131
      nextln:   v688 = bool.icmp.int.eq v687, 0x4
      nextln:   jumpif v688, addr_0_block_22, addr_0_block_23
      nextln:   jump addr_0_block_26
      check: addr_0_block_22: // no preds!
      nextln:   jump addr_0_block_24
      check: addr_0_block_23: // no preds!
      nextln:   v689 = i8.trunc.i64 v131
      nextln:   v690 = i8.unsigned_from_bits v689
      nextln:   jump addr_0_block_24
      check: addr_0_block_24: // preds: addr_0_block_22 addr_0_block_23
      check: addr_0_block_25: // preds: addr_0_block_20
      nextln:   store.i64 v131, v73
      nextln:   jump addr_0_block_26
      check: addr_0_block_26: // preds: addr_0_block_21 addr_0_block_25
      check: addr_0_block_27: // preds: addr_0_block_13
      nextln:   jump addr_0_block_28(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_28(v132: i8, v133: i1, v134: i16, v135: i8, v136: bool, v137: bool, v138: bool, v139: int, v140: i64, v141: i8, v142: i8, v143: i52, v144: i1, v145: bool, v146: bool, v147: int, v148: i1, v149: bool, v150: i4, v151: i2, v152: i4, v153: i8, v154: i8, v155: i2, v156: i2, v157: bool, v158: i2, v159: i2, v160: bool, v161: bool, v162: bool, v163: bool, v164: i52, v165: i1, v166: i64, v167: i2, v168: bool): // preds: addr_0_block_14 addr_0_block_27
      nextln:   v169 = bool.icmp.i8.ne v77, 0x0
      nextln:   v170 = bool.bitwise_not v169
      nextln:   v171 = bool.and v170, 0x1
      nextln:   v172 = bool.icmp.i8.ne v77, 0x0
      nextln:   v173 = bool.bitwise_not v172
      nextln:   v174 = bool.and 0x1, v173
      nextln:   jumpif v174, addr_0_block_29, addr_0_block_30
      check: addr_0_block_29: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_30: // preds: addr_0_block_28
      nextln:   jump addr_0_block_31
      check: addr_0_block_31: // preds: addr_0_block_29 addr_0_block_30
      nextln:   v175 = bool.icmp.i8.ne v77, 0x0
      nextln:   jumpif v175, addr_0_block_32, addr_0_block_33
      check: addr_0_block_32: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_33: // preds: addr_0_block_31
      nextln:   jump addr_0_block_34
      check: addr_0_block_34: // preds: addr_0_block_32 addr_0_block_33
      nextln:   jumpif v98, addr_0_block_35, addr_0_block_36
      check: addr_0_block_35: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_36: // preds: addr_0_block_34
      nextln:   jump addr_0_block_37
      check: addr_0_block_37: // preds: addr_0_block_35 addr_0_block_36
      nextln:   v176 = i52.unsigned_from_bits v100
      nextln:   v177 = int.modulo v176, 0x1
      nextln:   v178 = int.sub v176, v177
      nextln:   v179 = i52.to_bits v178
      nextln:   v180 = bool.icmp.i52.eq v100, v179
      nextln:   v181 = bool.icmp.i52.eq v100, 0x13000000
      nextln:   jumpif v181, addr_0_block_38, addr_0_block_42
      check: addr_0_block_38: // preds: addr_0_block_37
      nextln:   v182 = i8.unsigned_from_bits v17
      nextln:   v183 = bool.icmp.int.eq v182, 0x4
      nextln:   jumpif v183, addr_0_block_39, addr_0_block_40
      nextln:   jump addr_0_block_43
      check: addr_0_block_39: // no preds!
      nextln:   jump addr_0_block_41
      check: addr_0_block_40: // no preds!
      nextln:   v691 = i8.unsigned_from_bits v17
      nextln:   jump addr_0_block_41
      check: addr_0_block_41: // preds: addr_0_block_39 addr_0_block_40
      check: addr_0_block_42: // preds: addr_0_block_37
      nextln:   store.i8 v17, v100
      nextln:   jump addr_0_block_43
      check: addr_0_block_43: // preds: addr_0_block_38 addr_0_block_42
      nextln:   v184 = bool.bitwise_not v14
      nextln:   jumpif v184, addr_0_block_44, addr_0_block_45
      check: addr_0_block_44: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v14, 0xc)
      check: addr_0_block_45: // preds: addr_0_block_43
      nextln:   jump addr_0_block_46(v14, 0x0)
      check: addr_0_block_46(v185: i64, v186: i8): // preds: addr_0_block_44 addr_0_block_45
      nextln:   v187 = i32.lshr v9, 0x8
      nextln:   v188 = i8.trunc.i32 v187
      nextln:   v189 = i64.wrapping_add v7, 0x1
      nextln:   v190 = i64.unsigned_from_bits v189
      nextln:   v191 = int.modulo v190, 0x1
      nextln:   v192 = int.sub v190, v191
      nextln:   v193 = i64.to_bits v192
      nextln:   v194 = bool.icmp.i64.eq v189, v193
      nextln:   v195 = i64.lshr v189, 0x30
      nextln:   v196 = i16.trunc.i64 v195
      nextln:   v197 = bool.icmp.i16.eq v196, 0x0
      nextln:   v198 = bool.bitwise_not v197
      nextln:   jumpif v198, addr_0_block_47, addr_0_block_48
      check: addr_0_block_47: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_48: // preds: addr_0_block_46
      nextln:   jump addr_0_block_49(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_49(v671: i52, v672: int, v673: bool, v674: bool): // preds: addr_0_block_48
      nextln:   v675 = i52.trunc.i64 v189
      nextln:   jump addr_0_block_50(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v675, 0x1, 0x0)
      check: addr_0_block_50(v199: i3, v200: i1, v201: i1, v202: i1, v203: i1, v204: i4, v205: i1, v206: bool, v207: int, v208: int, v209: bool, v210: bool, v211: i8, v212: i8, v213: i52, v214: i1, v215: bool, v216: bool, v217: int, v218: i1, v219: bool, v220: i4, v221: i2, v222: i4, v223: i8, v224: i8, v225: i2, v226: i2, v227: bool, v228: i2, v229: i2, v230: bool, v231: bool, v232: bool, v233: bool, v234: i52, v235: i1, v236: i64, v237: i1, v238: i8, v239: i8, v240: i52, v241: i1, v242: bool, v243: bool, v244: int, v245: i1, v246: bool, v247: i4, v248: i2, v249: i4, v250: i8, v251: i8, v252: i2, v253: i2, v254: bool, v255: i2, v256: i2, v257: bool, v258: bool, v259: bool, v260: bool, v261: i52, v262: i1, v263: i64): // preds: addr_0_block_47 addr_0_block_49
      nextln:   v264 = bool.icmp.i8.ne v238, 0x0
      nextln:   v265 = bool.bitwise_not v264
      nextln:   v266 = bool.bitwise_not v14
      nextln:   v267 = bool.and v266, 0x1
      nextln:   v268 = bool.or v267, 0x0
      nextln:   v269 = bool.icmp.i8.ne v238, 0x0
      nextln:   v270 = bool.bitwise_not v269
      nextln:   v271 = bool.and v268, v270
      nextln:   v272 = bool.icmp.i8.eq v250, 0x1
      nextln:   v273 = bool.and v271, v272
      nextln:   jumpif v273, addr_0_block_51, addr_0_block_52
      check: addr_0_block_51: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_52: // preds: addr_0_block_50
      nextln:   jump addr_0_block_53
      check: addr_0_block_53: // preds: addr_0_block_51 addr_0_block_52
      nextln:   v274 = bool.icmp.i8.ne v238, 0x0
      nextln:   v275 = bool.bitwise_not v274
      nextln:   v276 = bool.icmp.i8.ne v238, 0x0
      nextln:   v277 = bool.bitwise_not v276
      nextln:   v278 = bool.icmp.i8.eq v250, 0x1
      nextln:   v279 = bool.and v277, v278
      nextln:   jumpif v209, addr_0_block_54, addr_0_block_55
      check: addr_0_block_54: // preds: addr_0_block_53
      nextln:   v280 = bool.icmp.i8.eq v238, 0x0
      nextln:   jump addr_0_block_56(0x1)
      check: addr_0_block_55: // preds: addr_0_block_53
      nextln:   jump addr_0_block_56(0x0)
      check: addr_0_block_56(v281: bool): // preds: addr_0_block_54 addr_0_block_55
      nextln:   v282 = bool.icmp.i8.eq v238, 0x0
      nextln:   v283 = bool.and v210, v282
      nextln:   jumpif v283, addr_0_block_57, addr_0_block_58
      check: addr_0_block_57: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x1, 0x1)
      check: addr_0_block_58: // preds: addr_0_block_56
      nextln:   jump addr_0_block_59(0x0, 0x0)
      check: addr_0_block_59(v284: bool, v285: bool): // preds: addr_0_block_57 addr_0_block_58
      nextln:   v286 = bool.or v281, v284
      nextln:   jumpif v286, addr_0_block_60, addr_0_block_73
      check: addr_0_block_60: // preds: addr_0_block_59
      nextln:   v287 = i52.unsigned_from_bits v234
      nextln:   v288 = int.modulo v287, 0x8
      nextln:   v289 = int.sub v287, v288
      nextln:   v290 = i52.to_bits v289
      nextln:   v291 = bool.icmp.i52.eq v234, v290
      nextln:   v292 = i64.load v234
      nextln:   jumpif v281, addr_0_block_61, addr_0_block_62
      nextln:   jump addr_0_block_74(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v292, v211, v212, v213, v214, v215, v216, v217, v218, v219, v220, v221, v222, v223, v224, v225, v226, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, 0x0, 0x0)
      check: addr_0_block_61: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_62: // no preds!
      nextln:   jump addr_0_block_63
      check: addr_0_block_63: // preds: addr_0_block_61 addr_0_block_62
      nextln:   jumpif v284, addr_0_block_64, addr_0_block_65
      check: addr_0_block_64: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_65: // preds: addr_0_block_63
      nextln:   jump addr_0_block_66
      check: addr_0_block_66: // preds: addr_0_block_64 addr_0_block_65
      nextln:   v692 = i52.unsigned_from_bits v234
      nextln:   v693 = int.modulo v692, 0x8
      nextln:   v694 = int.sub v692, v693
      nextln:   v695 = i52.to_bits v694
      nextln:   v696 = bool.icmp.i52.eq v234, v695
      nextln:   v697 = bool.icmp.i52.eq v234, 0x13000000
      nextln:   jumpif v697, addr_0_block_67, addr_0_block_71
      check: addr_0_block_67: // preds: addr_0_block_66
      nextln:   v698 = i64.unsigned_from_bits v292
      nextln:   v699 = bool.icmp.int.eq v698, 0x4
      nextln:   jumpif v699, addr_0_block_68, addr_0_block_69
      nextln:   jump addr_0_block_72
      check: addr_0_block_68: // no preds!
      nextln:   jump addr_0_block_70
      check: addr_0_block_69: // no preds!
      nextln:   v700 = i8.trunc.i64 v292
      nextln:   v701 = i8.unsigned_from_bits v700
      nextln:   jump addr_0_block_70
      check: addr_0_block_70: // preds: addr_0_block_68 addr_0_block_69
      check: addr_0_block_71: // preds: addr_0_block_66
      nextln:   store.i64 v292, v234
      nextln:   jump addr_0_block_72
      check: addr_0_block_72: // preds: addr_0_block_67 addr_0_block_71
      check: addr_0_block_73: // preds: addr_0_block_59
      nextln:   jump addr_0_block_74(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_74(v293: i8, v294: i1, v295: i16, v296: i8, v297: bool, v298: bool, v299: bool, v300: int, v301: i64, v302: i8, v303: i8, v304: i52, v305: i1, v306: bool, v307: bool, v308: int, v309: i1, v310: bool, v311: i4, v312: i2, v313: i4, v314: i8, v315: i8, v316: i2, v317: i2, v318: bool, v319: i2, v320: i2, v321: bool, v322: bool, v323: bool, v324: bool, v325: i52, v326: i1, v327: i64, v328: i2, v329: bool): // preds: addr_0_block_60 addr_0_block_73
      nextln:   v330 = bool.icmp.i8.ne v238, 0x0
      nextln:   v331 = bool.bitwise_not v330
      nextln:   v332 = bool.and v331, 0x1
      nextln:   v333 = bool.icmp.i8.ne v238, 0x0
      nextln:   v334 = bool.bitwise_not v333
      nextln:   v335 = bool.and 0x1, v334
      nextln:   jumpif v335, addr_0_block_75, addr_0_block_76
      check: addr_0_block_75: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_76: // preds: addr_0_block_74
      nextln:   jump addr_0_block_77
      check: addr_0_block_77: // preds: addr_0_block_75 addr_0_block_76
      nextln:   v336 = bool.icmp.i8.ne v238, 0x0
      nextln:   jumpif v336, addr_0_block_78, addr_0_block_79
      check: addr_0_block_78: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_79: // preds: addr_0_block_77
      nextln:   jump addr_0_block_80
      check: addr_0_block_80: // preds: addr_0_block_78 addr_0_block_79
      nextln:   jumpif v259, addr_0_block_81, addr_0_block_82
      check: addr_0_block_81: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_82: // preds: addr_0_block_80
      nextln:   jump addr_0_block_83
      check: addr_0_block_83: // preds: addr_0_block_81 addr_0_block_82
      nextln:   v337 = i52.unsigned_from_bits v261
      nextln:   v338 = int.modulo v337, 0x1
      nextln:   v339 = int.sub v337, v338
      nextln:   v340 = i52.to_bits v339
      nextln:   v341 = bool.icmp.i52.eq v261, v340
      nextln:   v342 = bool.icmp.i52.eq v261, 0x13000000
      nextln:   jumpif v342, addr_0_block_84, addr_0_block_88
      check: addr_0_block_84: // preds: addr_0_block_83
      nextln:   v343 = i8.unsigned_from_bits v188
      nextln:   v344 = bool.icmp.int.eq v343, 0x4
      nextln:   jumpif v344, addr_0_block_85, addr_0_block_86
      nextln:   jump addr_0_block_89
      check: addr_0_block_85: // no preds!
      nextln:   jump addr_0_block_87
      check: addr_0_block_86: // no preds!
      nextln:   v702 = i8.unsigned_from_bits v188
      nextln:   jump addr_0_block_87
      check: addr_0_block_87: // preds: addr_0_block_85 addr_0_block_86
      check: addr_0_block_88: // preds: addr_0_block_83
      nextln:   store.i8 v188, v261
      nextln:   jump addr_0_block_89
      check: addr_0_block_89: // preds: addr_0_block_84 addr_0_block_88
      nextln:   v345 = i32.lshr v9, 0x10
      nextln:   v346 = i8.trunc.i32 v345
      nextln:   v347 = i64.wrapping_add v7, 0x2
      nextln:   v348 = i64.unsigned_from_bits v347
      nextln:   v349 = int.modulo v348, 0x1
      nextln:   v350 = int.sub v348, v349
      nextln:   v351 = i64.to_bits v350
      nextln:   v352 = bool.icmp.i64.eq v347, v351
      nextln:   v353 = i64.lshr v347, 0x30
      nextln:   v354 = i16.trunc.i64 v353
      nextln:   v355 = bool.icmp.i16.eq v354, 0x0
      nextln:   v356 = bool.bitwise_not v355
      nextln:   jumpif v356, addr_0_block_90, addr_0_block_91
      check: addr_0_block_90: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_91: // preds: addr_0_block_89
      nextln:   jump addr_0_block_92(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_92(v666: i52, v667: int, v668: bool, v669: bool): // preds: addr_0_block_91
      nextln:   v670 = i52.trunc.i64 v347
      nextln:   jump addr_0_block_93(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v670, 0x1, 0x0)
      check: addr_0_block_93(v357: i3, v358: i1, v359: i1, v360: i1, v361: i1, v362: i4, v363: i1, v364: bool, v365: int, v366: int, v367: bool, v368: bool, v369: i8, v370: i8, v371: i52, v372: i1, v373: bool, v374: bool, v375: int, v376: i1, v377: bool, v378: i4, v379: i2, v380: i4, v381: i8, v382: i8, v383: i2, v384: i2, v385: bool, v386: i2, v387: i2, v388: bool, v389: bool, v390: bool, v391: bool, v392: i52, v393: i1, v394: i64, v395: i1, v396: i8, v397: i8, v398: i52, v399: i1, v400: bool, v401: bool, v402: int, v403: i1, v404: bool, v405: i4, v406: i2, v407: i4, v408: i8, v409: i8, v410: i2, v411: i2, v412: bool, v413: i2, v414: i2, v415: bool, v416: bool, v417: bool, v418: bool, v419: i52, v420: i1, v421: i64): // preds: addr_0_block_90 addr_0_block_92
      nextln:   v422 = bool.icmp.i8.ne v396, 0x0
      nextln:   v423 = bool.bitwise_not v422
      nextln:   v424 = bool.bitwise_not v14
      nextln:   v425 = bool.and v424, 0x1
      nextln:   v426 = bool.or v425, 0x0
      nextln:   v427 = bool.icmp.i8.ne v396, 0x0
      nextln:   v428 = bool.bitwise_not v427
      nextln:   v429 = bool.and v426, v428
      nextln:   v430 = bool.icmp.i8.eq v408, 0x1
      nextln:   v431 = bool.and v429, v430
      nextln:   jumpif v431, addr_0_block_94, addr_0_block_95
      check: addr_0_block_94: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_95: // preds: addr_0_block_93
      nextln:   jump addr_0_block_96
      check: addr_0_block_96: // preds: addr_0_block_94 addr_0_block_95
      nextln:   v432 = bool.icmp.i8.ne v396, 0x0
      nextln:   v433 = bool.bitwise_not v432
      nextln:   v434 = bool.icmp.i8.ne v396, 0x0
      nextln:   v435 = bool.bitwise_not v434
      nextln:   v436 = bool.icmp.i8.eq v408, 0x1
      nextln:   v437 = bool.and v435, v436
      nextln:   jumpif v367, addr_0_block_97, addr_0_block_98
      check: addr_0_block_97: // preds: addr_0_block_96
      nextln:   v438 = bool.icmp.i8.eq v396, 0x0
      nextln:   jump addr_0_block_99(0x1)
      check: addr_0_block_98: // preds: addr_0_block_96
      nextln:   jump addr_0_block_99(0x0)
      check: addr_0_block_99(v439: bool): // preds: addr_0_block_97 addr_0_block_98
      nextln:   v440 = bool.icmp.i8.eq v396, 0x0
      nextln:   v441 = bool.and v368, v440
      nextln:   jumpif v441, addr_0_block_100, addr_0_block_101
      check: addr_0_block_100: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x1, 0x1)
      check: addr_0_block_101: // preds: addr_0_block_99
      nextln:   jump addr_0_block_102(0x0, 0x0)
      check: addr_0_block_102(v442: bool, v443: bool): // preds: addr_0_block_100 addr_0_block_101
      nextln:   v444 = bool.or v439, v442
      nextln:   jumpif v444, addr_0_block_103, addr_0_block_116
      check: addr_0_block_103: // preds: addr_0_block_102
      nextln:   v445 = i52.unsigned_from_bits v392
      nextln:   v446 = int.modulo v445, 0x8
      nextln:   v447 = int.sub v445, v446
      nextln:   v448 = i52.to_bits v447
      nextln:   v449 = bool.icmp.i52.eq v392, v448
      nextln:   v450 = i64.load v392
      nextln:   jumpif v439, addr_0_block_104, addr_0_block_105
      nextln:   jump addr_0_block_117(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v450, v369, v370, v371, v372, v373, v374, v375, v376, v377, v378, v379, v380, v381, v382, v383, v384, v385, v386, v387, v388, v389, v390, v391, v392, v393, v394, 0x0, 0x0)
      check: addr_0_block_104: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_105: // no preds!
      nextln:   jump addr_0_block_106
      check: addr_0_block_106: // preds: addr_0_block_104 addr_0_block_105
      nextln:   jumpif v442, addr_0_block_107, addr_0_block_108
      check: addr_0_block_107: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_108: // preds: addr_0_block_106
      nextln:   jump addr_0_block_109
      check: addr_0_block_109: // preds: addr_0_block_107 addr_0_block_108
      nextln:   v703 = i52.unsigned_from_bits v392
      nextln:   v704 = int.modulo v703, 0x8
      nextln:   v705 = int.sub v703, v704
      nextln:   v706 = i52.to_bits v705
      nextln:   v707 = bool.icmp.i52.eq v392, v706
      nextln:   v708 = bool.icmp.i52.eq v392, 0x13000000
      nextln:   jumpif v708, addr_0_block_110, addr_0_block_114
      check: addr_0_block_110: // preds: addr_0_block_109
      nextln:   v709 = i64.unsigned_from_bits v450
      nextln:   v710 = bool.icmp.int.eq v709, 0x4
      nextln:   jumpif v710, addr_0_block_111, addr_0_block_112
      nextln:   jump addr_0_block_115
      check: addr_0_block_111: // no preds!
      nextln:   jump addr_0_block_113
      check: addr_0_block_112: // no preds!
      nextln:   v711 = i8.trunc.i64 v450
      nextln:   v712 = i8.unsigned_from_bits v711
      nextln:   jump addr_0_block_113
      check: addr_0_block_113: // preds: addr_0_block_111 addr_0_block_112
      check: addr_0_block_114: // preds: addr_0_block_109
      nextln:   store.i64 v450, v392
      nextln:   jump addr_0_block_115
      check: addr_0_block_115: // preds: addr_0_block_110 addr_0_block_114
      check: addr_0_block_116: // preds: addr_0_block_102
      nextln:   jump addr_0_block_117(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_117(v451: i8, v452: i1, v453: i16, v454: i8, v455: bool, v456: bool, v457: bool, v458: int, v459: i64, v460: i8, v461: i8, v462: i52, v463: i1, v464: bool, v465: bool, v466: int, v467: i1, v468: bool, v469: i4, v470: i2, v471: i4, v472: i8, v473: i8, v474: i2, v475: i2, v476: bool, v477: i2, v478: i2, v479: bool, v480: bool, v481: bool, v482: bool, v483: i52, v484: i1, v485: i64, v486: i2, v487: bool): // preds: addr_0_block_103 addr_0_block_116
      nextln:   v488 = bool.icmp.i8.ne v396, 0x0
      nextln:   v489 = bool.bitwise_not v488
      nextln:   v490 = bool.and v489, 0x1
      nextln:   v491 = bool.icmp.i8.ne v396, 0x0
      nextln:   v492 = bool.bitwise_not v491
      nextln:   v493 = bool.and 0x1, v492
      nextln:   jumpif v493, addr_0_block_118, addr_0_block_119
      check: addr_0_block_118: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_119: // preds: addr_0_block_117
      nextln:   jump addr_0_block_120
      check: addr_0_block_120: // preds: addr_0_block_118 addr_0_block_119
      nextln:   v494 = bool.icmp.i8.ne v396, 0x0
      nextln:   jumpif v494, addr_0_block_121, addr_0_block_122
      check: addr_0_block_121: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_122: // preds: addr_0_block_120
      nextln:   jump addr_0_block_123
      check: addr_0_block_123: // preds: addr_0_block_121 addr_0_block_122
      nextln:   jumpif v417, addr_0_block_124, addr_0_block_125
      check: addr_0_block_124: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_125: // preds: addr_0_block_123
      nextln:   jump addr_0_block_126
      check: addr_0_block_126: // preds: addr_0_block_124 addr_0_block_125
      nextln:   v495 = i52.unsigned_from_bits v419
      nextln:   v496 = int.modulo v495, 0x1
      nextln:   v497 = int.sub v495, v496
      nextln:   v498 = i52.to_bits v497
      nextln:   v499 = bool.icmp.i52.eq v419, v498
      nextln:   v500 = bool.icmp.i52.eq v419, 0x13000000
      nextln:   jumpif v500, addr_0_block_127, addr_0_block_131
      check: addr_0_block_127: // preds: addr_0_block_126
      nextln:   v501 = i8.unsigned_from_bits v346
      nextln:   v502 = bool.icmp.int.eq v501, 0x4
      nextln:   jumpif v502, addr_0_block_128, addr_0_block_129
      nextln:   jump addr_0_block_132
      check: addr_0_block_128: // no preds!
      nextln:   jump addr_0_block_130
      check: addr_0_block_129: // no preds!
      nextln:   v713 = i8.unsigned_from_bits v346
      nextln:   jump addr_0_block_130
      check: addr_0_block_130: // preds: addr_0_block_128 addr_0_block_129
      check: addr_0_block_131: // preds: addr_0_block_126
      nextln:   store.i8 v346, v419
      nextln:   jump addr_0_block_132
      check: addr_0_block_132: // preds: addr_0_block_127 addr_0_block_131
      nextln:   v503 = i32.lshr v9, 0x18
      nextln:   v504 = i8.trunc.i32 v503
      nextln:   v505 = i64.wrapping_add v7, 0x3
      nextln:   v506 = i64.unsigned_from_bits v505
      nextln:   v507 = int.modulo v506, 0x1
      nextln:   v508 = int.sub v506, v507
      nextln:   v509 = i64.to_bits v508
      nextln:   v510 = bool.icmp.i64.eq v505, v509
      nextln:   v511 = i64.lshr v505, 0x30
      nextln:   v512 = i16.trunc.i64 v511
      nextln:   v513 = bool.icmp.i16.eq v512, 0x0
      nextln:   v514 = bool.bitwise_not v513
      nextln:   jumpif v514, addr_0_block_133, addr_0_block_134
      check: addr_0_block_133: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_134: // preds: addr_0_block_132
      nextln:   jump addr_0_block_135(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_135(v661: i52, v662: int, v663: bool, v664: bool): // preds: addr_0_block_134
      nextln:   v665 = i52.trunc.i64 v505
      nextln:   jump addr_0_block_136(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v665, 0x1, 0x0)
      check: addr_0_block_136(v515: i3, v516: i1, v517: i1, v518: i1, v519: i1, v520: i4, v521: i1, v522: bool, v523: int, v524: int, v525: bool, v526: bool, v527: i8, v528: i8, v529: i52, v530: i1, v531: bool, v532: bool, v533: int, v534: i1, v535: bool, v536: i4, v537: i2, v538: i4, v539: i8, v540: i8, v541: i2, v542: i2, v543: bool, v544: i2, v545: i2, v546: bool, v547: bool, v548: bool, v549: bool, v550: i52, v551: i1, v552: i64, v553: i1, v554: i8, v555: i8, v556: i52, v557: i1, v558: bool, v559: bool, v560: int, v561: i1, v562: bool, v563: i4, v564: i2, v565: i4, v566: i8, v567: i8, v568: i2, v569: i2, v570: bool, v571: i2, v572: i2, v573: bool, v574: bool, v575: bool, v576: bool, v577: i52, v578: i1, v579: i64): // preds: addr_0_block_133 addr_0_block_135
      nextln:   v580 = bool.icmp.i8.ne v554, 0x0
      nextln:   v581 = bool.bitwise_not v580
      nextln:   v582 = bool.bitwise_not v14
      nextln:   v583 = bool.and v582, 0x1
      nextln:   v584 = bool.or v583, 0x0
      nextln:   v585 = bool.icmp.i8.ne v554, 0x0
      nextln:   v586 = bool.bitwise_not v585
      nextln:   v587 = bool.and v584, v586
      nextln:   v588 = bool.icmp.i8.eq v566, 0x1
      nextln:   v589 = bool.and v587, v588
      nextln:   jumpif v589, addr_0_block_137, addr_0_block_138
      check: addr_0_block_137: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_138: // preds: addr_0_block_136
      nextln:   jump addr_0_block_139
      check: addr_0_block_139: // preds: addr_0_block_137 addr_0_block_138
      nextln:   v590 = bool.icmp.i8.ne v554, 0x0
      nextln:   v591 = bool.bitwise_not v590
      nextln:   v592 = bool.icmp.i8.ne v554, 0x0
      nextln:   v593 = bool.bitwise_not v592
      nextln:   v594 = bool.icmp.i8.eq v566, 0x1
      nextln:   v595 = bool.and v593, v594
      nextln:   jumpif v525, addr_0_block_140, addr_0_block_141
      check: addr_0_block_140: // preds: addr_0_block_139
      nextln:   v596 = bool.icmp.i8.eq v554, 0x0
      nextln:   jump addr_0_block_142(0x1)
      check: addr_0_block_141: // preds: addr_0_block_139
      nextln:   jump addr_0_block_142(0x0)
      check: addr_0_block_142(v597: bool): // preds: addr_0_block_140 addr_0_block_141
      nextln:   v598 = bool.icmp.i8.eq v554, 0x0
      nextln:   v599 = bool.and v526, v598
      nextln:   jumpif v599, addr_0_block_143, addr_0_block_144
      check: addr_0_block_143: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x1, 0x1)
      check: addr_0_block_144: // preds: addr_0_block_142
      nextln:   jump addr_0_block_145(0x0, 0x0)
      check: addr_0_block_145(v600: bool, v601: bool): // preds: addr_0_block_143 addr_0_block_144
      nextln:   v602 = bool.or v597, v600
      nextln:   jumpif v602, addr_0_block_146, addr_0_block_159
      check: addr_0_block_146: // preds: addr_0_block_145
      nextln:   v603 = i52.unsigned_from_bits v550
      nextln:   v604 = int.modulo v603, 0x8
      nextln:   v605 = int.sub v603, v604
      nextln:   v606 = i52.to_bits v605
      nextln:   v607 = bool.icmp.i52.eq v550, v606
      nextln:   v608 = i64.load v550
      nextln:   jumpif v597, addr_0_block_147, addr_0_block_148
      nextln:   jump addr_0_block_160(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v608, v527, v528, v529, v530, v531, v532, v533, v534, v535, v536, v537, v538, v539, v540, v541, v542, v543, v544, v545, v546, v547, v548, v549, v550, v551, v552, 0x0, 0x0)
      check: addr_0_block_147: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_148: // no preds!
      nextln:   jump addr_0_block_149
      check: addr_0_block_149: // preds: addr_0_block_147 addr_0_block_148
      nextln:   jumpif v600, addr_0_block_150, addr_0_block_151
      check: addr_0_block_150: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_151: // preds: addr_0_block_149
      nextln:   jump addr_0_block_152
      check: addr_0_block_152: // preds: addr_0_block_150 addr_0_block_151
      nextln:   v714 = i52.unsigned_from_bits v550
      nextln:   v715 = int.modulo v714, 0x8
      nextln:   v716 = int.sub v714, v715
      nextln:   v717 = i52.to_bits v716
      nextln:   v718 = bool.icmp.i52.eq v550, v717
      nextln:   v719 = bool.icmp.i52.eq v550, 0x13000000
      nextln:   jumpif v719, addr_0_block_153, addr_0_block_157
      check: addr_0_block_153: // preds: addr_0_block_152
      nextln:   v720 = i64.unsigned_from_bits v608
      nextln:   v721 = bool.icmp.int.eq v720, 0x4
      nextln:   jumpif v721, addr_0_block_154, addr_0_block_155
      nextln:   jump addr_0_block_158
      check: addr_0_block_154: // no preds!
      nextln:   jump addr_0_block_156
      check: addr_0_block_155: // no preds!
      nextln:   v722 = i8.trunc.i64 v608
      nextln:   v723 = i8.unsigned_from_bits v722
      nextln:   jump addr_0_block_156
      check: addr_0_block_156: // preds: addr_0_block_154 addr_0_block_155
      check: addr_0_block_157: // preds: addr_0_block_152
      nextln:   store.i64 v608, v550
      nextln:   jump addr_0_block_158
      check: addr_0_block_158: // preds: addr_0_block_153 addr_0_block_157
      check: addr_0_block_159: // preds: addr_0_block_145
      nextln:   jump addr_0_block_160(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_160(v609: i8, v610: i1, v611: i16, v612: i8, v613: bool, v614: bool, v615: bool, v616: int, v617: i64, v618: i8, v619: i8, v620: i52, v621: i1, v622: bool, v623: bool, v624: int, v625: i1, v626: bool, v627: i4, v628: i2, v629: i4, v630: i8, v631: i8, v632: i2, v633: i2, v634: bool, v635: i2, v636: i2, v637: bool, v638: bool, v639: bool, v640: bool, v641: i52, v642: i1, v643: i64, v644: i2, v645: bool): // preds: addr_0_block_146 addr_0_block_159
      nextln:   v646 = bool.icmp.i8.ne v554, 0x0
      nextln:   v647 = bool.bitwise_not v646
      nextln:   v648 = bool.and v647, 0x1
      nextln:   v649 = bool.icmp.i8.ne v554, 0x0
      nextln:   v650 = bool.bitwise_not v649
      nextln:   v651 = bool.and 0x1, v650
      nextln:   jumpif v651, addr_0_block_161, addr_0_block_162
      check: addr_0_block_161: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_162: // preds: addr_0_block_160
      nextln:   jump addr_0_block_163
      check: addr_0_block_163: // preds: addr_0_block_161 addr_0_block_162
      nextln:   v652 = bool.icmp.i8.ne v554, 0x0
      nextln:   jumpif v652, addr_0_block_164, addr_0_block_165
      check: addr_0_block_164: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_165: // preds: addr_0_block_163
      nextln:   jump addr_0_block_166
      check: addr_0_block_166: // preds: addr_0_block_164 addr_0_block_165
      nextln:   jumpif v575, addr_0_block_167, addr_0_block_168
      check: addr_0_block_167: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_168: // preds: addr_0_block_166
      nextln:   jump addr_0_block_169
      check: addr_0_block_169: // preds: addr_0_block_167 addr_0_block_168
      nextln:   v653 = i52.unsigned_from_bits v577
      nextln:   v654 = int.modulo v653, 0x1
      nextln:   v655 = int.sub v653, v654
      nextln:   v656 = i52.to_bits v655
      nextln:   v657 = bool.icmp.i52.eq v577, v656
      nextln:   v658 = bool.icmp.i52.eq v577, 0x13000000
      nextln:   jumpif v658, addr_0_block_170, addr_0_block_174
      check: addr_0_block_170: // preds: addr_0_block_169
      nextln:   v659 = i8.unsigned_from_bits v504
      nextln:   v660 = bool.icmp.int.eq v659, 0x4
      nextln:   jumpif v660, addr_0_block_171, addr_0_block_172
      nextln:   jump addr_0_block_175
      check: addr_0_block_171: // no preds!
      nextln:   jump addr_0_block_173
      check: addr_0_block_172: // no preds!
      nextln:   v724 = i8.unsigned_from_bits v504
      nextln:   jump addr_0_block_173
      check: addr_0_block_173: // preds: addr_0_block_171 addr_0_block_172
      check: addr_0_block_174: // preds: addr_0_block_169
      nextln:   store.i8 v504, v577
      nextln:   jump addr_0_block_175
      check: addr_0_block_175: // preds: addr_0_block_170 addr_0_block_174
      check: addr_0_block_176: // preds: entry
      nextln:   v29 = i64.unsigned_from_bits v7
      nextln:   v30 = int.modulo v29, 0x4
      nextln:   v31 = int.sub v29, v30
      nextln:   v32 = i64.to_bits v31
      nextln:   v33 = bool.icmp.i64.eq v7, v32
      nextln:   v34 = i64.lshr v7, 0x30
      nextln:   v35 = i16.trunc.i64 v34
      nextln:   v36 = bool.icmp.i16.eq v35, 0x0
      nextln:   v37 = bool.bitwise_not v36
      nextln:   jumpif v37, addr_0_block_177, addr_0_block_178
      nextln:   jump addr_0_block_220(v14, 0x0)
      check: addr_0_block_177: // no preds!
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0)
      nextln:   jump addr_0_block_180(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_178: // no preds!
      nextln:   jump addr_0_block_179(0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_179(v871: i52, v872: int, v873: bool, v874: bool): // preds: addr_0_block_178
      nextln:   v875 = i52.trunc.i64 v7
      nextln:   jump addr_0_block_180(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x1, v875, 0x1, 0x0)
      check: addr_0_block_180(v725: i3, v726: i1, v727: i1, v728: i1, v729: i1, v730: i4, v731: i1, v732: bool, v733: int, v734: int, v735: bool, v736: bool, v737: i8, v738: i8, v739: i52, v740: i1, v741: bool, v742: bool, v743: int, v744: i1, v745: bool, v746: i4, v747: i2, v748: i4, v749: i8, v750: i8, v751: i2, v752: i2, v753: bool, v754: i2, v755: i2, v756: bool, v757: bool, v758: bool, v759: bool, v760: i52, v761: i1, v762: i64, v763: i1, v764: i8, v765: i8, v766: i52, v767: i1, v768: bool, v769: bool, v770: int, v771: i1, v772: bool, v773: i4, v774: i2, v775: i4, v776: i8, v777: i8, v778: i2, v779: i2, v780: bool, v781: i2, v782: i2, v783: bool, v784: bool, v785: bool, v786: bool, v787: i52, v788: i1, v789: i64): // preds: addr_0_block_177 addr_0_block_179
      nextln:   v790 = bool.icmp.i8.ne v764, 0x0
      nextln:   v791 = bool.bitwise_not v790
      nextln:   v792 = bool.bitwise_not v14
      nextln:   v793 = bool.and v792, 0x1
      nextln:   v794 = bool.or v793, 0x0
      nextln:   v795 = bool.icmp.i8.ne v764, 0x0
      nextln:   v796 = bool.bitwise_not v795
      nextln:   v797 = bool.and v794, v796
      nextln:   v798 = bool.icmp.i8.eq v776, 0x1
      nextln:   v799 = bool.and v797, v798
      nextln:   jumpif v799, addr_0_block_181, addr_0_block_182
      check: addr_0_block_181: // preds: addr_0_block_180
      nextln:   jump addr_0_block_183
      check: addr_0_block_182: // preds: addr_0_block_180
      nextln:   jump addr_0_block_183
      check: addr_0_block_183: // preds: addr_0_block_181 addr_0_block_182
      nextln:   v800 = bool.icmp.i8.ne v764, 0x0
      nextln:   v801 = bool.bitwise_not v800
      nextln:   v802 = bool.icmp.i8.ne v764, 0x0
      nextln:   v803 = bool.bitwise_not v802
      nextln:   v804 = bool.icmp.i8.eq v776, 0x1
      nextln:   v805 = bool.and v803, v804
      nextln:   jumpif v735, addr_0_block_184, addr_0_block_185
      check: addr_0_block_184: // preds: addr_0_block_183
      nextln:   v806 = bool.icmp.i8.eq v764, 0x0
      nextln:   jump addr_0_block_186(0x1)
      check: addr_0_block_185: // preds: addr_0_block_183
      nextln:   jump addr_0_block_186(0x0)
      check: addr_0_block_186(v807: bool): // preds: addr_0_block_184 addr_0_block_185
      nextln:   v808 = bool.icmp.i8.eq v764, 0x0
      nextln:   v809 = bool.and v736, v808
      nextln:   jumpif v809, addr_0_block_187, addr_0_block_188
      check: addr_0_block_187: // preds: addr_0_block_186
      nextln:   jump addr_0_block_189(0x1, 0x1)
      check: addr_0_block_188: // preds: addr_0_block_186
      nextln:   jump addr_0_block_189(0x0, 0x0)
      check: addr_0_block_189(v810: bool, v811: bool): // preds: addr_0_block_187 addr_0_block_188
      nextln:   v812 = bool.or v807, v810
      nextln:   jumpif v812, addr_0_block_190, addr_0_block_203
      check: addr_0_block_190: // preds: addr_0_block_189
      nextln:   v813 = i52.unsigned_from_bits v760
      nextln:   v814 = int.modulo v813, 0x8
      nextln:   v815 = int.sub v813, v814
      nextln:   v816 = i52.to_bits v815
      nextln:   v817 = bool.icmp.i52.eq v760, v816
      nextln:   v818 = i64.load v760
      nextln:   jumpif v807, addr_0_block_191, addr_0_block_192
      nextln:   jump addr_0_block_204(0x5, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, v818, v737, v738, v739, v740, v741, v742, v743, v744, v745, v746, v747, v748, v749, v750, v751, v752, v753, v754, v755, v756, v757, v758, v759, v760, v761, v762, 0x0, 0x0)
      check: addr_0_block_191: // no preds!
      nextln:   jump addr_0_block_193
      check: addr_0_block_192: // no preds!
      nextln:   jump addr_0_block_193
      check: addr_0_block_193: // preds: addr_0_block_191 addr_0_block_192
      nextln:   jumpif v810, addr_0_block_194, addr_0_block_195
      check: addr_0_block_194: // preds: addr_0_block_193
      nextln:   jump addr_0_block_196
      check: addr_0_block_195: // preds: addr_0_block_193
      nextln:   jump addr_0_block_196
      check: addr_0_block_196: // preds: addr_0_block_194 addr_0_block_195
      nextln:   v876 = i52.unsigned_from_bits v760
      nextln:   v877 = int.modulo v876, 0x8
      nextln:   v878 = int.sub v876, v877
      nextln:   v879 = i52.to_bits v878
      nextln:   v880 = bool.icmp.i52.eq v760, v879
      nextln:   v881 = bool.icmp.i52.eq v760, 0x13000000
      nextln:   jumpif v881, addr_0_block_197, addr_0_block_201
      check: addr_0_block_197: // preds: addr_0_block_196
      nextln:   v882 = i64.unsigned_from_bits v818
      nextln:   v883 = bool.icmp.int.eq v882, 0x4
      nextln:   jumpif v883, addr_0_block_198, addr_0_block_199
      nextln:   jump addr_0_block_202
      check: addr_0_block_198: // no preds!
      nextln:   jump addr_0_block_200
      check: addr_0_block_199: // no preds!
      nextln:   v884 = i8.trunc.i64 v818
      nextln:   v885 = i8.unsigned_from_bits v884
      nextln:   jump addr_0_block_200
      check: addr_0_block_200: // preds: addr_0_block_198 addr_0_block_199
      check: addr_0_block_201: // preds: addr_0_block_196
      nextln:   store.i64 v818, v760
      nextln:   jump addr_0_block_202
      check: addr_0_block_202: // preds: addr_0_block_197 addr_0_block_201
      check: addr_0_block_203: // preds: addr_0_block_189
      nextln:   jump addr_0_block_204(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
      check: addr_0_block_204(v819: i8, v820: i1, v821: i16, v822: i8, v823: bool, v824: bool, v825: bool, v826: int, v827: i64, v828: i8, v829: i8, v830: i52, v831: i1, v832: bool, v833: bool, v834: int, v835: i1, v836: bool, v837: i4, v838: i2, v839: i4, v840: i8, v841: i8, v842: i2, v843: i2, v844: bool, v845: i2, v846: i2, v847: bool, v848: bool, v849: bool, v850: bool, v851: i52, v852: i1, v853: i64, v854: i2, v855: bool): // preds: addr_0_block_190 addr_0_block_203
      nextln:   v856 = bool.icmp.i8.ne v764, 0x0
      nextln:   v857 = bool.bitwise_not v856
      nextln:   v858 = bool.and v857, 0x1
      nextln:   v859 = bool.icmp.i8.ne v764, 0x0
      nextln:   v860 = bool.bitwise_not v859
      nextln:   v861 = bool.and 0x1, v860
      nextln:   jumpif v861, addr_0_block_205, addr_0_block_206
      check: addr_0_block_205: // preds: addr_0_block_204
      nextln:   jump addr_0_block_207
      check: addr_0_block_206: // preds: addr_0_block_204
      nextln:   jump addr_0_block_207
      check: addr_0_block_207: // preds: addr_0_block_205 addr_0_block_206
      nextln:   v862 = bool.icmp.i8.ne v764, 0x0
      nextln:   jumpif v862, addr_0_block_208, addr_0_block_209
      check: addr_0_block_208: // preds: addr_0_block_207
      nextln:   jump addr_0_block_210
      check: addr_0_block_209: // preds: addr_0_block_207
      nextln:   jump addr_0_block_210
      check: addr_0_block_210: // preds: addr_0_block_208 addr_0_block_209
      nextln:   jumpif v785, addr_0_block_211, addr_0_block_212
      check: addr_0_block_211: // preds: addr_0_block_210
      nextln:   jump addr_0_block_213
      check: addr_0_block_212: // preds: addr_0_block_210
      nextln:   jump addr_0_block_213
      check: addr_0_block_213: // preds: addr_0_block_211 addr_0_block_212
      nextln:   v863 = i52.unsigned_from_bits v787
      nextln:   v864 = int.modulo v863, 0x4
      nextln:   v865 = int.sub v863, v864
      nextln:   v866 = i52.to_bits v865
      nextln:   v867 = bool.icmp.i52.eq v787, v866
      nextln:   v868 = bool.icmp.i52.eq v787, 0x13000000
      nextln:   jumpif v868, addr_0_block_214, addr_0_block_218
      check: addr_0_block_214: // preds: addr_0_block_213
      nextln:   v869 = i32.unsigned_from_bits v9
      nextln:   v870 = bool.icmp.int.eq v869, 0x4
      nextln:   jumpif v870, addr_0_block_215, addr_0_block_216
      nextln:   jump addr_0_block_219
      check: addr_0_block_215: // no preds!
      nextln:   jump addr_0_block_217
      check: addr_0_block_216: // no preds!
      nextln:   v886 = i8.trunc.i32 v9
      nextln:   v887 = i8.unsigned_from_bits v886
      nextln:   jump addr_0_block_217
      check: addr_0_block_217: // preds: addr_0_block_215 addr_0_block_216
      check: addr_0_block_218: // preds: addr_0_block_213
      nextln:   store.i32 v9, v787
      nextln:   jump addr_0_block_219
      check: addr_0_block_219: // preds: addr_0_block_214 addr_0_block_218
      check: addr_0_block_220(v27: i64, v28: i8): // preds: addr_0_block_0 addr_0_block_176
